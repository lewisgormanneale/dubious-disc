{
  "pipes": [
    {
      "name": "DecimetersToFeetAndInchesPipe",
      "id": "pipe-DecimetersToFeetAndInchesPipe-48c1b9e853d8095d49d9b084619caefac50a23aa0fb0e235b91182cdcb2ddd75374e89f05a0aa0253bb6cae4097cba5075511de1651ee16a11475078e01f4c31",
      "file": "src/app/shared/pipes/decimeters-to-feet-and-inches/decimeters-to-feet-and-inches.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "heightInDecimeters",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "heightInDecimeters",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": false,
      "ngname": "decimetersToFeetAndInches",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimetersToFeetAndInches',\n})\nexport class DecimetersToFeetAndInchesPipe implements PipeTransform {\n  transform(heightInDecimeters?: number): string {\n    if (!heightInDecimeters) {\n      return '-';\n    }\n    const inches = Math.round(heightInDecimeters * 3.937);\n    const feet = Math.floor(inches / 12);\n    const remainingInches = inches % 12;\n    return `${feet}'${\n      remainingInches.toString().length === 1 ? 0 : ''\n    }${remainingInches}\"`;\n  }\n}\n"
    },
    {
      "name": "DecimetersToPoundsPipe",
      "id": "pipe-DecimetersToPoundsPipe-e3b7b3246d8a48a4c62a90d30715bf0dd0782c08bf98a2329e30f263cc869ff38ca89866d2d6ecb5780e87862200e291c59e1d5ab88d6e7f17bab8c7e843c90f",
      "file": "src/app/shared/pipes/decimeters-to-pounds/decimeters-to-pounds.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "weightInDecimeters",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "weightInDecimeters",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": false,
      "ngname": "decimetersToPounds",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimetersToPounds',\n})\nexport class DecimetersToPoundsPipe implements PipeTransform {\n  transform(weightInDecimeters?: number): string {\n    if (!weightInDecimeters) {\n      return '-';\n    }\n    const pounds = weightInDecimeters * 0.220462;\n    return `${pounds.toFixed(1)} lbs`;\n  }\n}\n"
    }
  ],
  "interfaces": [
    {
      "name": "Database",
      "id": "interface-Database-0536277e586bacdbc177f5f669a9baf21bcb6cce887a689f80293f751d509ffed33414158f3bb0a37d33fc027c4ed41f9b1f6c9a72acc542fd8bbed0e2ff2b17",
      "file": "src/app/core/models/supabase.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export type Json =\n  | string\n  | number\n  | boolean\n  | null\n  | { [key: string]: Json | undefined }\n  | Json[]\n\nexport interface Database {\n  public: {\n    Tables: {\n      abilities: {\n        Row: {\n          effect: string | null\n          generation_id: number | null\n          id: number\n          identifier: string | null\n          name: string | null\n          short_effect: string | null\n        }\n        Insert: {\n          effect?: string | null\n          generation_id?: number | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n          short_effect?: string | null\n        }\n        Update: {\n          effect?: string | null\n          generation_id?: number | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          short_effect?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"abilities_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      ability_changelog: {\n        Row: {\n          ability_id: number | null\n          changed_in_version_group_id: number | null\n          effect: string | null\n          id: number\n        }\n        Insert: {\n          ability_id?: number | null\n          changed_in_version_group_id?: number | null\n          effect?: string | null\n          id: number\n        }\n        Update: {\n          ability_id?: number | null\n          changed_in_version_group_id?: number | null\n          effect?: string | null\n          id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"ability_changelog_ability_id_fkey\"\n            columns: [\"ability_id\"]\n            isOneToOne: false\n            referencedRelation: \"abilities\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"ability_changelog_changed_in_version_group_id_fkey\"\n            columns: [\"changed_in_version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      ability_flavor_text: {\n        Row: {\n          ability_id: number | null\n          flavor_text: string | null\n          id: string\n          version_group_id: number | null\n        }\n        Insert: {\n          ability_id?: number | null\n          flavor_text?: string | null\n          id?: string\n          version_group_id?: number | null\n        }\n        Update: {\n          ability_id?: number | null\n          flavor_text?: string | null\n          id?: string\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"ability_flavor_text_ability_id_fkey\"\n            columns: [\"ability_id\"]\n            isOneToOne: false\n            referencedRelation: \"abilities\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"ability_flavor_text_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      berries: {\n        Row: {\n          firmness_id: number | null\n          growth_time: number | null\n          id: number\n          item_id: number | null\n          max_harvest: number | null\n          natural_gift_power: number | null\n          natural_gift_type_id: number | null\n          size: number | null\n          smoothness: number | null\n          soil_dryness: number | null\n        }\n        Insert: {\n          firmness_id?: number | null\n          growth_time?: number | null\n          id: number\n          item_id?: number | null\n          max_harvest?: number | null\n          natural_gift_power?: number | null\n          natural_gift_type_id?: number | null\n          size?: number | null\n          smoothness?: number | null\n          soil_dryness?: number | null\n        }\n        Update: {\n          firmness_id?: number | null\n          growth_time?: number | null\n          id?: number\n          item_id?: number | null\n          max_harvest?: number | null\n          natural_gift_power?: number | null\n          natural_gift_type_id?: number | null\n          size?: number | null\n          smoothness?: number | null\n          soil_dryness?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"berries_firmness_id_fkey\"\n            columns: [\"firmness_id\"]\n            isOneToOne: false\n            referencedRelation: \"berry_firmness\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"berries_item_id_fkey\"\n            columns: [\"item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"berries_natural_gift_type_id_fkey\"\n            columns: [\"natural_gift_type_id\"]\n            isOneToOne: false\n            referencedRelation: \"types\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      berry_firmness: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      berry_flavors: {\n        Row: {\n          berry_id: number | null\n          contest_type_id: number | null\n          flavor: number | null\n          id: string\n        }\n        Insert: {\n          berry_id?: number | null\n          contest_type_id?: number | null\n          flavor?: number | null\n          id?: string\n        }\n        Update: {\n          berry_id?: number | null\n          contest_type_id?: number | null\n          flavor?: number | null\n          id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"berry_flavors_berry_id_fkey\"\n            columns: [\"berry_id\"]\n            isOneToOne: false\n            referencedRelation: \"berries\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"berry_flavors_contest_type_id_fkey\"\n            columns: [\"contest_type_id\"]\n            isOneToOne: false\n            referencedRelation: \"contest_types\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      characteristics: {\n        Row: {\n          gene_modulo: string | null\n          id: number\n          message: string | null\n          stat_id: number | null\n        }\n        Insert: {\n          gene_modulo?: string | null\n          id: number\n          message?: string | null\n          stat_id?: number | null\n        }\n        Update: {\n          gene_modulo?: string | null\n          id?: number\n          message?: string | null\n          stat_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"characteristics_stat_id_fkey\"\n            columns: [\"stat_id\"]\n            isOneToOne: false\n            referencedRelation: \"stats\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      contest_combos: {\n        Row: {\n          first_move_id: number | null\n          id: string\n          second_move_id: number | null\n        }\n        Insert: {\n          first_move_id?: number | null\n          id?: string\n          second_move_id?: number | null\n        }\n        Update: {\n          first_move_id?: number | null\n          id?: string\n          second_move_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"contest_combos_first_move_id_fkey\"\n            columns: [\"first_move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"contest_combos_second_move_id_fkey\"\n            columns: [\"second_move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      contest_effects: {\n        Row: {\n          appeal: number | null\n          effect: string | null\n          flavor_text: string | null\n          id: number\n          jam: string | null\n        }\n        Insert: {\n          appeal?: number | null\n          effect?: string | null\n          flavor_text?: string | null\n          id?: number\n          jam?: string | null\n        }\n        Update: {\n          appeal?: number | null\n          effect?: string | null\n          flavor_text?: string | null\n          id?: number\n          jam?: string | null\n        }\n        Relationships: []\n      }\n      contest_types: {\n        Row: {\n          color: string | null\n          flavor: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          color?: string | null\n          flavor?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          color?: string | null\n          flavor?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      egg_groups: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      encounter_condition_value_map: {\n        Row: {\n          encounter_condition_value_id: number | null\n          encounter_id: number | null\n          id: string\n        }\n        Insert: {\n          encounter_condition_value_id?: number | null\n          encounter_id?: number | null\n          id?: string\n        }\n        Update: {\n          encounter_condition_value_id?: number | null\n          encounter_id?: number | null\n          id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"encounter_condition_value_map_encounter_condition_value_id_fkey\"\n            columns: [\"encounter_condition_value_id\"]\n            isOneToOne: false\n            referencedRelation: \"encounter_condition_values\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"encounter_condition_value_map_encounter_id_fkey\"\n            columns: [\"encounter_id\"]\n            isOneToOne: false\n            referencedRelation: \"encounters\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      encounter_condition_values: {\n        Row: {\n          encounter_condition_id: number | null\n          id: number\n          identifier: string | null\n          is_default: boolean | null\n          name: string | null\n        }\n        Insert: {\n          encounter_condition_id?: number | null\n          id: number\n          identifier?: string | null\n          is_default?: boolean | null\n          name?: string | null\n        }\n        Update: {\n          encounter_condition_id?: number | null\n          id?: number\n          identifier?: string | null\n          is_default?: boolean | null\n          name?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"encounter_condition_values_encounter_condition_id_fkey\"\n            columns: [\"encounter_condition_id\"]\n            isOneToOne: false\n            referencedRelation: \"encounter_conditions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      encounter_conditions: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      encounter_methods: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n          order: number | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n          order?: number | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          order?: number | null\n        }\n        Relationships: []\n      }\n      encounter_slots: {\n        Row: {\n          encounter_method_id: number | null\n          id: number\n          rarity: number | null\n          slot: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          encounter_method_id?: number | null\n          id: number\n          rarity?: number | null\n          slot?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          encounter_method_id?: number | null\n          id?: number\n          rarity?: number | null\n          slot?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"encounter_slots_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      encounters: {\n        Row: {\n          encounter_slot_id: number | null\n          id: number\n          location_area_id: number | null\n          max_level: number | null\n          min_level: number | null\n          pokemon_id: number | null\n          version_id: number | null\n        }\n        Insert: {\n          encounter_slot_id?: number | null\n          id: number\n          location_area_id?: number | null\n          max_level?: number | null\n          min_level?: number | null\n          pokemon_id?: number | null\n          version_id?: number | null\n        }\n        Update: {\n          encounter_slot_id?: number | null\n          id?: number\n          location_area_id?: number | null\n          max_level?: number | null\n          min_level?: number | null\n          pokemon_id?: number | null\n          version_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"encounters_encounter_slot_id_fkey\"\n            columns: [\"encounter_slot_id\"]\n            isOneToOne: false\n            referencedRelation: \"encounter_slots\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"encounters_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"encounters_version_id_fkey\"\n            columns: [\"version_id\"]\n            isOneToOne: false\n            referencedRelation: \"versions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      evolution_chains: {\n        Row: {\n          baby_trigger_item_id: number | null\n          id: number\n        }\n        Insert: {\n          baby_trigger_item_id?: number | null\n          id?: number\n        }\n        Update: {\n          baby_trigger_item_id?: number | null\n          id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"evolution_chains_baby_trigger_item_id_fkey\"\n            columns: [\"baby_trigger_item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      evolution_triggers: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      experience: {\n        Row: {\n          experience: number | null\n          growth_rate_id: number | null\n          id: string\n          level: number | null\n        }\n        Insert: {\n          experience?: number | null\n          growth_rate_id?: number | null\n          id?: string\n          level?: number | null\n        }\n        Update: {\n          experience?: number | null\n          growth_rate_id?: number | null\n          id?: string\n          level?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"experience_growth_rate_id_fkey\"\n            columns: [\"growth_rate_id\"]\n            isOneToOne: false\n            referencedRelation: \"growth_rates\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      genders: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      generations: {\n        Row: {\n          id: number\n          identifier: string | null\n          main_region_id: number | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          main_region_id?: number | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          main_region_id?: number | null\n          name?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"generations_main_region_id_fkey\"\n            columns: [\"main_region_id\"]\n            isOneToOne: false\n            referencedRelation: \"regions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      growth_rates: {\n        Row: {\n          formula: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          formula?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          formula?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      item_categories: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n          pocket_id: number | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n          pocket_id?: number | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          pocket_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"item_categories_pocket_id_fkey\"\n            columns: [\"pocket_id\"]\n            isOneToOne: false\n            referencedRelation: \"item_pockets\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      item_flag_map: {\n        Row: {\n          id: string\n          item_flag_id: number | null\n          item_id: number | null\n        }\n        Insert: {\n          id?: string\n          item_flag_id?: number | null\n          item_id?: number | null\n        }\n        Update: {\n          id?: string\n          item_flag_id?: number | null\n          item_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"item_flag_map_item_flag_id_fkey\"\n            columns: [\"item_flag_id\"]\n            isOneToOne: false\n            referencedRelation: \"item_flags\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"item_flag_map_item_id_fkey\"\n            columns: [\"item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      item_flags: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      item_flavor_text: {\n        Row: {\n          flavor_text: string | null\n          item_id: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          flavor_text?: string | null\n          item_id?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          flavor_text?: string | null\n          item_id?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"item_flavor_text_item_id_fkey\"\n            columns: [\"item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"item_flavor_text_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      item_fling_effects: {\n        Row: {\n          effect: string | null\n          id: number\n          identifier: string | null\n        }\n        Insert: {\n          effect?: string | null\n          id: number\n          identifier?: string | null\n        }\n        Update: {\n          effect?: string | null\n          id?: number\n          identifier?: string | null\n        }\n        Relationships: []\n      }\n      item_names: {\n        Row: {\n          item_id: number | null\n          local_language_id: number | null\n          name: string | null\n        }\n        Insert: {\n          item_id?: number | null\n          local_language_id?: number | null\n          name?: string | null\n        }\n        Update: {\n          item_id?: number | null\n          local_language_id?: number | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      item_pockets: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      items: {\n        Row: {\n          category_id: number | null\n          cost: number | null\n          effect: string | null\n          fling_effect_id: number | null\n          fling_power: number | null\n          id: number\n          identifier: string | null\n          name: string | null\n          short_effect: string | null\n        }\n        Insert: {\n          category_id?: number | null\n          cost?: number | null\n          effect?: string | null\n          fling_effect_id?: number | null\n          fling_power?: number | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n          short_effect?: string | null\n        }\n        Update: {\n          category_id?: number | null\n          cost?: number | null\n          effect?: string | null\n          fling_effect_id?: number | null\n          fling_power?: number | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          short_effect?: string | null\n        }\n        Relationships: []\n      }\n      location_area_encounter_rates: {\n        Row: {\n          encounter_method_id: number | null\n          id: string\n          location_area_id: number | null\n          rate: number | null\n          version_id: number | null\n        }\n        Insert: {\n          encounter_method_id?: number | null\n          id?: string\n          location_area_id?: number | null\n          rate?: number | null\n          version_id?: number | null\n        }\n        Update: {\n          encounter_method_id?: number | null\n          id?: string\n          location_area_id?: number | null\n          rate?: number | null\n          version_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"location_area_encounter_rates_location_area_id_fkey\"\n            columns: [\"location_area_id\"]\n            isOneToOne: false\n            referencedRelation: \"location_areas\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"location_area_encounter_rates_version_id_fkey\"\n            columns: [\"version_id\"]\n            isOneToOne: false\n            referencedRelation: \"versions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      location_areas: {\n        Row: {\n          game_index: number | null\n          id: number\n          identifier: string | null\n          location_id: number | null\n          name: string | null\n        }\n        Insert: {\n          game_index?: number | null\n          id: number\n          identifier?: string | null\n          location_id?: number | null\n          name?: string | null\n        }\n        Update: {\n          game_index?: number | null\n          id?: number\n          identifier?: string | null\n          location_id?: number | null\n          name?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"location_areas_location_id_fkey\"\n            columns: [\"location_id\"]\n            isOneToOne: false\n            referencedRelation: \"locations\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      location_game_indices: {\n        Row: {\n          game_index: number | null\n          generation_id: number | null\n          id: string\n          location_id: number | null\n        }\n        Insert: {\n          game_index?: number | null\n          generation_id?: number | null\n          id?: string\n          location_id?: number | null\n        }\n        Update: {\n          game_index?: number | null\n          generation_id?: number | null\n          id?: string\n          location_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"location_game_indices_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"location_game_indices_location_id_fkey\"\n            columns: [\"location_id\"]\n            isOneToOne: false\n            referencedRelation: \"locations\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      locations: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n          region_id: number | null\n          subtitle: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n          region_id?: number | null\n          subtitle?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          region_id?: number | null\n          subtitle?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"locations_region_id_fkey\"\n            columns: [\"region_id\"]\n            isOneToOne: false\n            referencedRelation: \"regions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      machines: {\n        Row: {\n          id: string\n          item_id: number | null\n          machine_number: number | null\n          move_id: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          id?: string\n          item_id?: number | null\n          machine_number?: number | null\n          move_id?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          id?: string\n          item_id?: number | null\n          machine_number?: number | null\n          move_id?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"machines_item_id_fkey\"\n            columns: [\"item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"machines_move_id_fkey\"\n            columns: [\"move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"machines_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      move_battle_styles: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      move_changelog: {\n        Row: {\n          accuracy: string | null\n          changed_in_version_group_id: number | null\n          effect_chance: string | null\n          effect_id: string | null\n          id: string\n          move_id: number | null\n          power: string | null\n          pp: string | null\n          priority: string | null\n          target_id: string | null\n          type_id: number | null\n        }\n        Insert: {\n          accuracy?: string | null\n          changed_in_version_group_id?: number | null\n          effect_chance?: string | null\n          effect_id?: string | null\n          id?: string\n          move_id?: number | null\n          power?: string | null\n          pp?: string | null\n          priority?: string | null\n          target_id?: string | null\n          type_id?: number | null\n        }\n        Update: {\n          accuracy?: string | null\n          changed_in_version_group_id?: number | null\n          effect_chance?: string | null\n          effect_id?: string | null\n          id?: string\n          move_id?: number | null\n          power?: string | null\n          pp?: string | null\n          priority?: string | null\n          target_id?: string | null\n          type_id?: number | null\n        }\n        Relationships: []\n      }\n      move_damage_classes: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      move_effect_changelog: {\n        Row: {\n          changed_in_version_group_id: number | null\n          effect: string | null\n          effect_id: number | null\n          id: number\n        }\n        Insert: {\n          changed_in_version_group_id?: number | null\n          effect?: string | null\n          effect_id?: number | null\n          id: number\n        }\n        Update: {\n          changed_in_version_group_id?: number | null\n          effect?: string | null\n          effect_id?: number | null\n          id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"move_effect_changelog_changed_in_version_group_id_fkey\"\n            columns: [\"changed_in_version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"move_effect_changelog_effect_id_fkey\"\n            columns: [\"effect_id\"]\n            isOneToOne: false\n            referencedRelation: \"move_effects\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      move_effects: {\n        Row: {\n          effect: string | null\n          id: number\n          short_effect: string | null\n        }\n        Insert: {\n          effect?: string | null\n          id: number\n          short_effect?: string | null\n        }\n        Update: {\n          effect?: string | null\n          id?: number\n          short_effect?: string | null\n        }\n        Relationships: []\n      }\n      move_flag_map: {\n        Row: {\n          id: string\n          move_flag_id: number | null\n          move_id: number | null\n        }\n        Insert: {\n          id?: string\n          move_flag_id?: number | null\n          move_id?: number | null\n        }\n        Update: {\n          id?: string\n          move_flag_id?: number | null\n          move_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"move_flag_map_move_flag_id_fkey\"\n            columns: [\"move_flag_id\"]\n            isOneToOne: false\n            referencedRelation: \"move_flags\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"move_flag_map_move_id_fkey\"\n            columns: [\"move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      move_flags: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      move_flavor_text: {\n        Row: {\n          flavor_text: string | null\n          id: string\n          move_id: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          flavor_text?: string | null\n          id?: string\n          move_id?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          flavor_text?: string | null\n          id?: string\n          move_id?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"move_flavor_text_move_id_fkey\"\n            columns: [\"move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"move_flavor_text_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      move_meta: {\n        Row: {\n          ailment_chance: string | null\n          crit_rate: string | null\n          drain: string | null\n          flinch_chance: string | null\n          healing: string | null\n          id: string\n          max_hits: string | null\n          max_turns: string | null\n          meta_ailment_id: string | null\n          meta_category_id: string | null\n          min_hits: string | null\n          min_turns: string | null\n          move_id: number | null\n          stat_chance: string | null\n        }\n        Insert: {\n          ailment_chance?: string | null\n          crit_rate?: string | null\n          drain?: string | null\n          flinch_chance?: string | null\n          healing?: string | null\n          id?: string\n          max_hits?: string | null\n          max_turns?: string | null\n          meta_ailment_id?: string | null\n          meta_category_id?: string | null\n          min_hits?: string | null\n          min_turns?: string | null\n          move_id?: number | null\n          stat_chance?: string | null\n        }\n        Update: {\n          ailment_chance?: string | null\n          crit_rate?: string | null\n          drain?: string | null\n          flinch_chance?: string | null\n          healing?: string | null\n          id?: string\n          max_hits?: string | null\n          max_turns?: string | null\n          meta_ailment_id?: string | null\n          meta_category_id?: string | null\n          min_hits?: string | null\n          min_turns?: string | null\n          move_id?: number | null\n          stat_chance?: string | null\n        }\n        Relationships: []\n      }\n      move_meta_ailments: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      move_meta_categories: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n        }\n        Relationships: []\n      }\n      move_meta_stat_changes: {\n        Row: {\n          change: number | null\n          move_id: number | null\n          stat_id: number | null\n        }\n        Insert: {\n          change?: number | null\n          move_id?: number | null\n          stat_id?: number | null\n        }\n        Update: {\n          change?: number | null\n          move_id?: number | null\n          stat_id?: number | null\n        }\n        Relationships: []\n      }\n      move_targets: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      moves: {\n        Row: {\n          accuracy: number | null\n          contest_effect_id: number | null\n          contest_type_id: number | null\n          damage_class_id: number | null\n          effect_chance: number | null\n          effect_id: number | null\n          generation_id: number | null\n          id: number\n          identifier: string | null\n          name: string | null\n          power: number | null\n          pp: number | null\n          priority: number | null\n          super_contest_effect_id: number | null\n          target_id: number | null\n          type_id: number | null\n        }\n        Insert: {\n          accuracy?: number | null\n          contest_effect_id?: number | null\n          contest_type_id?: number | null\n          damage_class_id?: number | null\n          effect_chance?: number | null\n          effect_id?: number | null\n          generation_id?: number | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          power?: number | null\n          pp?: number | null\n          priority?: number | null\n          super_contest_effect_id?: number | null\n          target_id?: number | null\n          type_id?: number | null\n        }\n        Update: {\n          accuracy?: number | null\n          contest_effect_id?: number | null\n          contest_type_id?: number | null\n          damage_class_id?: number | null\n          effect_chance?: number | null\n          effect_id?: number | null\n          generation_id?: number | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          power?: number | null\n          pp?: number | null\n          priority?: number | null\n          super_contest_effect_id?: number | null\n          target_id?: number | null\n          type_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"moves_contest_effect_id_fkey\"\n            columns: [\"contest_effect_id\"]\n            isOneToOne: false\n            referencedRelation: \"contest_effects\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"moves_contest_type_id_fkey\"\n            columns: [\"contest_type_id\"]\n            isOneToOne: false\n            referencedRelation: \"contest_types\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"moves_damage_class_id_fkey\"\n            columns: [\"damage_class_id\"]\n            isOneToOne: false\n            referencedRelation: \"move_damage_classes\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"moves_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"moves_super_contest_effect_id_fkey\"\n            columns: [\"super_contest_effect_id\"]\n            isOneToOne: false\n            referencedRelation: \"super_contest_effects\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"moves_target_id_fkey\"\n            columns: [\"target_id\"]\n            isOneToOne: false\n            referencedRelation: \"move_targets\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"moves_type_id_fkey\"\n            columns: [\"type_id\"]\n            isOneToOne: false\n            referencedRelation: \"types\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      nature_battle_style_preferences: {\n        Row: {\n          high_hp_preference: number | null\n          id: string\n          low_hp_preference: number | null\n          move_battle_style_id: number | null\n          nature_id: number | null\n        }\n        Insert: {\n          high_hp_preference?: number | null\n          id?: string\n          low_hp_preference?: number | null\n          move_battle_style_id?: number | null\n          nature_id?: number | null\n        }\n        Update: {\n          high_hp_preference?: number | null\n          id?: string\n          low_hp_preference?: number | null\n          move_battle_style_id?: number | null\n          nature_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"nature_battle_style_preferences_nature_id_fkey\"\n            columns: [\"nature_id\"]\n            isOneToOne: false\n            referencedRelation: \"natures\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      nature_pokeathlon_stats: {\n        Row: {\n          id: string\n          max_change: number | null\n          nature_id: number | null\n          pokeathlon_stat_id: number | null\n        }\n        Insert: {\n          id?: string\n          max_change?: number | null\n          nature_id?: number | null\n          pokeathlon_stat_id?: number | null\n        }\n        Update: {\n          id?: string\n          max_change?: number | null\n          nature_id?: number | null\n          pokeathlon_stat_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"nature_pokeathlon_stats_nature_id_fkey\"\n            columns: [\"nature_id\"]\n            isOneToOne: false\n            referencedRelation: \"natures\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"nature_pokeathlon_stats_pokeathlon_stat_id_fkey\"\n            columns: [\"pokeathlon_stat_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokeathlon_stats\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      natures: {\n        Row: {\n          decreased_stat_id: number | null\n          game_index: number | null\n          hates_flavor_id: number | null\n          id: number\n          identifier: string | null\n          increased_stat_id: number | null\n          likes_flavor_id: number | null\n          name: string | null\n        }\n        Insert: {\n          decreased_stat_id?: number | null\n          game_index?: number | null\n          hates_flavor_id?: number | null\n          id: number\n          identifier?: string | null\n          increased_stat_id?: number | null\n          likes_flavor_id?: number | null\n          name?: string | null\n        }\n        Update: {\n          decreased_stat_id?: number | null\n          game_index?: number | null\n          hates_flavor_id?: number | null\n          id?: number\n          identifier?: string | null\n          increased_stat_id?: number | null\n          likes_flavor_id?: number | null\n          name?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"natures_decreased_stat_id_fkey\"\n            columns: [\"decreased_stat_id\"]\n            isOneToOne: false\n            referencedRelation: \"stats\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"natures_increased_stat_id_fkey\"\n            columns: [\"increased_stat_id\"]\n            isOneToOne: false\n            referencedRelation: \"stats\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pal_park: {\n        Row: {\n          area_id: number | null\n          base_score: number | null\n          id: string\n          rate: number | null\n          species_id: number | null\n        }\n        Insert: {\n          area_id?: number | null\n          base_score?: number | null\n          id?: string\n          rate?: number | null\n          species_id?: number | null\n        }\n        Update: {\n          area_id?: number | null\n          base_score?: number | null\n          id?: string\n          rate?: number | null\n          species_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pal_park_species_id_fkey\"\n            columns: [\"species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pal_park_areas: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      pokeathlon_stats: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      pokedex_version_groups: {\n        Row: {\n          id: string\n          pokedex_id: number\n          version_group_id: number\n        }\n        Insert: {\n          id?: string\n          pokedex_id: number\n          version_group_id: number\n        }\n        Update: {\n          id?: string\n          pokedex_id?: number\n          version_group_id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokedex_version_groups_pokedex_id_fkey\"\n            columns: [\"pokedex_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokedexes\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokedex_version_groups_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokedexes: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          is_main_series: boolean | null\n          name: string | null\n          region_id: number | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          is_main_series?: boolean | null\n          name?: string | null\n          region_id?: number | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          is_main_series?: boolean | null\n          name?: string | null\n          region_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokedexes_region_id_fkey\"\n            columns: [\"region_id\"]\n            isOneToOne: false\n            referencedRelation: \"regions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon: {\n        Row: {\n          base_experience: number | null\n          form_identifier: string | null\n          form_name: string | null\n          form_order: number | null\n          height: number | null\n          id: number\n          identifier: string\n          introduced_in_version_group_id: number | null\n          is_battle_only: boolean\n          is_default: boolean\n          is_gigantamax: boolean\n          is_mega: boolean\n          name: string | null\n          species_id: number\n          weight: number | null\n        }\n        Insert: {\n          base_experience?: number | null\n          form_identifier?: string | null\n          form_name?: string | null\n          form_order?: number | null\n          height?: number | null\n          id: number\n          identifier: string\n          introduced_in_version_group_id?: number | null\n          is_battle_only?: boolean\n          is_default?: boolean\n          is_gigantamax?: boolean\n          is_mega?: boolean\n          name?: string | null\n          species_id: number\n          weight?: number | null\n        }\n        Update: {\n          base_experience?: number | null\n          form_identifier?: string | null\n          form_name?: string | null\n          form_order?: number | null\n          height?: number | null\n          id?: number\n          identifier?: string\n          introduced_in_version_group_id?: number | null\n          is_battle_only?: boolean\n          is_default?: boolean\n          is_gigantamax?: boolean\n          is_mega?: boolean\n          name?: string | null\n          species_id?: number\n          weight?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_introduced_in_version_group_id_fkey\"\n            columns: [\"introduced_in_version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_id_fkey\"\n            columns: [\"species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_abilities: {\n        Row: {\n          ability_id: number | null\n          id: string\n          is_hidden: boolean | null\n          pokemon_id: number | null\n          slot: number | null\n        }\n        Insert: {\n          ability_id?: number | null\n          id?: string\n          is_hidden?: boolean | null\n          pokemon_id?: number | null\n          slot?: number | null\n        }\n        Update: {\n          ability_id?: number | null\n          id?: string\n          is_hidden?: boolean | null\n          pokemon_id?: number | null\n          slot?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_abilities_ability_id_fkey\"\n            columns: [\"ability_id\"]\n            isOneToOne: false\n            referencedRelation: \"abilities\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_abilities_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_abilities_past: {\n        Row: {\n          ability_id: number | null\n          generation_id: number | null\n          id: string\n          is_hidden: boolean | null\n          pokemon_id: number | null\n          slot: number | null\n        }\n        Insert: {\n          ability_id?: number | null\n          generation_id?: number | null\n          id?: string\n          is_hidden?: boolean | null\n          pokemon_id?: number | null\n          slot?: number | null\n        }\n        Update: {\n          ability_id?: number | null\n          generation_id?: number | null\n          id?: string\n          is_hidden?: boolean | null\n          pokemon_id?: number | null\n          slot?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_abilities_past_ability_id_fkey\"\n            columns: [\"ability_id\"]\n            isOneToOne: false\n            referencedRelation: \"abilities\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_abilities_past_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_abilities_past_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_colors: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      pokemon_dex_numbers: {\n        Row: {\n          id: string\n          pokedex_id: number | null\n          pokedex_number: number | null\n          species_id: number | null\n        }\n        Insert: {\n          id?: string\n          pokedex_id?: number | null\n          pokedex_number?: number | null\n          species_id?: number | null\n        }\n        Update: {\n          id?: string\n          pokedex_id?: number | null\n          pokedex_number?: number | null\n          species_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_dex_numbers_pokedex_id_fkey\"\n            columns: [\"pokedex_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokedexes\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_dex_numbers_species_id_fkey\"\n            columns: [\"species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_egg_groups: {\n        Row: {\n          egg_group_id: number | null\n          id: string\n          species_id: number | null\n        }\n        Insert: {\n          egg_group_id?: number | null\n          id?: string\n          species_id?: number | null\n        }\n        Update: {\n          egg_group_id?: number | null\n          id?: string\n          species_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_egg_groups_egg_group_id_fkey\"\n            columns: [\"egg_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"egg_groups\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_egg_groups_species_id_fkey\"\n            columns: [\"species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_evolution: {\n        Row: {\n          evolution_trigger_id: number | null\n          evolved_species_id: number | null\n          gender_id: number | null\n          held_item_id: number | null\n          id: number\n          known_move_id: number | null\n          known_move_type_id: number | null\n          location_id: number | null\n          minimum_affection: number | null\n          minimum_beauty: number | null\n          minimum_happiness: number | null\n          minimum_level: number | null\n          needs_overworld_rain: boolean | null\n          party_species_id: number | null\n          party_type_id: number | null\n          relative_physical_stats: number | null\n          time_of_day: string | null\n          trade_species_id: number | null\n          trigger_item_id: number | null\n          turn_upside_down: boolean | null\n        }\n        Insert: {\n          evolution_trigger_id?: number | null\n          evolved_species_id?: number | null\n          gender_id?: number | null\n          held_item_id?: number | null\n          id: number\n          known_move_id?: number | null\n          known_move_type_id?: number | null\n          location_id?: number | null\n          minimum_affection?: number | null\n          minimum_beauty?: number | null\n          minimum_happiness?: number | null\n          minimum_level?: number | null\n          needs_overworld_rain?: boolean | null\n          party_species_id?: number | null\n          party_type_id?: number | null\n          relative_physical_stats?: number | null\n          time_of_day?: string | null\n          trade_species_id?: number | null\n          trigger_item_id?: number | null\n          turn_upside_down?: boolean | null\n        }\n        Update: {\n          evolution_trigger_id?: number | null\n          evolved_species_id?: number | null\n          gender_id?: number | null\n          held_item_id?: number | null\n          id?: number\n          known_move_id?: number | null\n          known_move_type_id?: number | null\n          location_id?: number | null\n          minimum_affection?: number | null\n          minimum_beauty?: number | null\n          minimum_happiness?: number | null\n          minimum_level?: number | null\n          needs_overworld_rain?: boolean | null\n          party_species_id?: number | null\n          party_type_id?: number | null\n          relative_physical_stats?: number | null\n          time_of_day?: string | null\n          trade_species_id?: number | null\n          trigger_item_id?: number | null\n          turn_upside_down?: boolean | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_evolution_evolution_trigger_id_fkey\"\n            columns: [\"evolution_trigger_id\"]\n            isOneToOne: false\n            referencedRelation: \"evolution_triggers\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_evolved_species_id_fkey\"\n            columns: [\"evolved_species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_gender_id_fkey\"\n            columns: [\"gender_id\"]\n            isOneToOne: false\n            referencedRelation: \"genders\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_held_item_id_fkey\"\n            columns: [\"held_item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_known_move_id_fkey\"\n            columns: [\"known_move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_known_move_type_id_fkey\"\n            columns: [\"known_move_type_id\"]\n            isOneToOne: false\n            referencedRelation: \"types\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_location_id_fkey\"\n            columns: [\"location_id\"]\n            isOneToOne: false\n            referencedRelation: \"locations\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_party_species_id_fkey\"\n            columns: [\"party_species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_party_type_id_fkey\"\n            columns: [\"party_type_id\"]\n            isOneToOne: false\n            referencedRelation: \"types\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_trade_species_id_fkey\"\n            columns: [\"trade_species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_evolution_trigger_item_id_fkey\"\n            columns: [\"trigger_item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_habitats: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      pokemon_items: {\n        Row: {\n          id: string\n          item_id: number | null\n          pokemon_id: number | null\n          rarity: number | null\n          version_id: number | null\n        }\n        Insert: {\n          id?: string\n          item_id?: number | null\n          pokemon_id?: number | null\n          rarity?: number | null\n          version_id?: number | null\n        }\n        Update: {\n          id?: string\n          item_id?: number | null\n          pokemon_id?: number | null\n          rarity?: number | null\n          version_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_items_item_id_fkey\"\n            columns: [\"item_id\"]\n            isOneToOne: false\n            referencedRelation: \"items\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_items_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_items_version_id_fkey\"\n            columns: [\"version_id\"]\n            isOneToOne: false\n            referencedRelation: \"versions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_move_methods: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      pokemon_moves: {\n        Row: {\n          id: string\n          level: number | null\n          move_id: number | null\n          order: number | null\n          pokemon_id: number | null\n          pokemon_move_method_id: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          id?: string\n          level?: number | null\n          move_id?: number | null\n          order?: number | null\n          pokemon_id?: number | null\n          pokemon_move_method_id?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          id?: string\n          level?: number | null\n          move_id?: number | null\n          order?: number | null\n          pokemon_id?: number | null\n          pokemon_move_method_id?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_moves_move_id_fkey\"\n            columns: [\"move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_moves_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_moves_pokemon_move_method_id_fkey\"\n            columns: [\"pokemon_move_method_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_move_methods\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_moves_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_pokeathlon_stats: {\n        Row: {\n          base_stat: number | null\n          id: string\n          maximum_stat: number | null\n          minimum_stat: number | null\n          pokeathlon_stat_id: number | null\n          pokemon_id: number | null\n        }\n        Insert: {\n          base_stat?: number | null\n          id?: string\n          maximum_stat?: number | null\n          minimum_stat?: number | null\n          pokeathlon_stat_id?: number | null\n          pokemon_id?: number | null\n        }\n        Update: {\n          base_stat?: number | null\n          id?: string\n          maximum_stat?: number | null\n          minimum_stat?: number | null\n          pokeathlon_stat_id?: number | null\n          pokemon_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_pokeathlon_stats_pokeathlon_stat_id_fkey\"\n            columns: [\"pokeathlon_stat_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokeathlon_stats\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_pokeathlon_stats_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_shapes: {\n        Row: {\n          description: string | null\n          id: number\n          identifier: string | null\n          name: string | null\n          scientific_name: string | null\n        }\n        Insert: {\n          description?: string | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n          scientific_name?: string | null\n        }\n        Update: {\n          description?: string | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          scientific_name?: string | null\n        }\n        Relationships: []\n      }\n      pokemon_species: {\n        Row: {\n          base_happiness: number | null\n          capture_rate: number | null\n          color_id: number | null\n          evolution_chain_id: number | null\n          evolves_from_species_id: number | null\n          forms_switchable: boolean | null\n          gender_rate: number | null\n          generation_id: number | null\n          genus: string | null\n          growth_rate_id: number | null\n          habitat_id: number | null\n          has_gender_differences: boolean | null\n          hatch_counter: number | null\n          id: number\n          identifier: string\n          is_baby: boolean | null\n          is_legendary: boolean | null\n          is_mythical: boolean | null\n          name: string | null\n          order: number | null\n          shape_id: number | null\n        }\n        Insert: {\n          base_happiness?: number | null\n          capture_rate?: number | null\n          color_id?: number | null\n          evolution_chain_id?: number | null\n          evolves_from_species_id?: number | null\n          forms_switchable?: boolean | null\n          gender_rate?: number | null\n          generation_id?: number | null\n          genus?: string | null\n          growth_rate_id?: number | null\n          habitat_id?: number | null\n          has_gender_differences?: boolean | null\n          hatch_counter?: number | null\n          id?: number\n          identifier: string\n          is_baby?: boolean | null\n          is_legendary?: boolean | null\n          is_mythical?: boolean | null\n          name?: string | null\n          order?: number | null\n          shape_id?: number | null\n        }\n        Update: {\n          base_happiness?: number | null\n          capture_rate?: number | null\n          color_id?: number | null\n          evolution_chain_id?: number | null\n          evolves_from_species_id?: number | null\n          forms_switchable?: boolean | null\n          gender_rate?: number | null\n          generation_id?: number | null\n          genus?: string | null\n          growth_rate_id?: number | null\n          habitat_id?: number | null\n          has_gender_differences?: boolean | null\n          hatch_counter?: number | null\n          id?: number\n          identifier?: string\n          is_baby?: boolean | null\n          is_legendary?: boolean | null\n          is_mythical?: boolean | null\n          name?: string | null\n          order?: number | null\n          shape_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_species_color_id_fkey\"\n            columns: [\"color_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_colors\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_evolution_chain_id_fkey\"\n            columns: [\"evolution_chain_id\"]\n            isOneToOne: false\n            referencedRelation: \"evolution_chains\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_evolves_from_species_id_fkey\"\n            columns: [\"evolves_from_species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_growth_rate_id_fkey\"\n            columns: [\"growth_rate_id\"]\n            isOneToOne: false\n            referencedRelation: \"growth_rates\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_habitat_id_fkey\"\n            columns: [\"habitat_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_habitats\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_shape_id_fkey\"\n            columns: [\"shape_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_shapes\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_species_flavor_text: {\n        Row: {\n          flavor_text: string\n          id: string\n          species_id: number\n          version_id: number\n        }\n        Insert: {\n          flavor_text: string\n          id?: string\n          species_id: number\n          version_id: number\n        }\n        Update: {\n          flavor_text?: string\n          id?: string\n          species_id?: number\n          version_id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_species_flavor_text_species_id_fkey\"\n            columns: [\"species_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_species\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_species_flavor_text_version_id_fkey\"\n            columns: [\"version_id\"]\n            isOneToOne: false\n            referencedRelation: \"versions\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_stats: {\n        Row: {\n          base_stat: number | null\n          effort: number | null\n          id: string\n          pokemon_id: number | null\n          stat_id: number | null\n        }\n        Insert: {\n          base_stat?: number | null\n          effort?: number | null\n          id?: string\n          pokemon_id?: number | null\n          stat_id?: number | null\n        }\n        Update: {\n          base_stat?: number | null\n          effort?: number | null\n          id?: string\n          pokemon_id?: number | null\n          stat_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_stats_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_stats_stat_id_fkey\"\n            columns: [\"stat_id\"]\n            isOneToOne: false\n            referencedRelation: \"stats\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_types: {\n        Row: {\n          id: string\n          pokemon_id: number\n          slot: number\n          type_id: number\n        }\n        Insert: {\n          id?: string\n          pokemon_id: number\n          slot: number\n          type_id: number\n        }\n        Update: {\n          id?: string\n          pokemon_id?: number\n          slot?: number\n          type_id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_types_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_types_type_id_fkey\"\n            columns: [\"type_id\"]\n            isOneToOne: false\n            referencedRelation: \"types\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      pokemon_types_past: {\n        Row: {\n          generation_id: number | null\n          id: string\n          pokemon_id: number | null\n          slot: number | null\n          type_id: number | null\n        }\n        Insert: {\n          generation_id?: number | null\n          id?: string\n          pokemon_id?: number | null\n          slot?: number | null\n          type_id?: number | null\n        }\n        Update: {\n          generation_id?: number | null\n          id?: string\n          pokemon_id?: number | null\n          slot?: number | null\n          type_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"pokemon_types_past_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_types_past_pokemon_id_fkey\"\n            columns: [\"pokemon_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"pokemon_types_past_type_id_fkey\"\n            columns: [\"type_id\"]\n            isOneToOne: false\n            referencedRelation: \"types\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      regions: {\n        Row: {\n          id: number\n          identifier: string | null\n          name: string | null\n        }\n        Insert: {\n          id: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Update: {\n          id?: number\n          identifier?: string | null\n          name?: string | null\n        }\n        Relationships: []\n      }\n      stats: {\n        Row: {\n          damage_class_id: number | null\n          game_index: number | null\n          id: number\n          identifier: string | null\n          is_battle_only: boolean | null\n          name: string | null\n        }\n        Insert: {\n          damage_class_id?: number | null\n          game_index?: number | null\n          id: number\n          identifier?: string | null\n          is_battle_only?: boolean | null\n          name?: string | null\n        }\n        Update: {\n          damage_class_id?: number | null\n          game_index?: number | null\n          id?: number\n          identifier?: string | null\n          is_battle_only?: boolean | null\n          name?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"stats_damage_class_id_fkey\"\n            columns: [\"damage_class_id\"]\n            isOneToOne: false\n            referencedRelation: \"move_damage_classes\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      super_contest_combos: {\n        Row: {\n          first_move_id: number | null\n          id: string\n          second_move_id: number | null\n        }\n        Insert: {\n          first_move_id?: number | null\n          id?: string\n          second_move_id?: number | null\n        }\n        Update: {\n          first_move_id?: number | null\n          id?: string\n          second_move_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"super_contest_combos_first_move_id_fkey\"\n            columns: [\"first_move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"super_contest_combos_second_move_id_fkey\"\n            columns: [\"second_move_id\"]\n            isOneToOne: false\n            referencedRelation: \"moves\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      super_contest_effects: {\n        Row: {\n          appeal: number | null\n          flavor_text: string | null\n          id: number\n        }\n        Insert: {\n          appeal?: number | null\n          flavor_text?: string | null\n          id: number\n        }\n        Update: {\n          appeal?: number | null\n          flavor_text?: string | null\n          id?: number\n        }\n        Relationships: []\n      }\n      type_efficacy: {\n        Row: {\n          damage_factor: number | null\n          damage_type_id: number | null\n          id: string\n          target_type_id: number | null\n        }\n        Insert: {\n          damage_factor?: number | null\n          damage_type_id?: number | null\n          id?: string\n          target_type_id?: number | null\n        }\n        Update: {\n          damage_factor?: number | null\n          damage_type_id?: number | null\n          id?: string\n          target_type_id?: number | null\n        }\n        Relationships: []\n      }\n      type_efficacy_past: {\n        Row: {\n          damage_factor: number | null\n          damage_type_id: number | null\n          generation_id: number | null\n          id: string\n          target_type_id: number | null\n        }\n        Insert: {\n          damage_factor?: number | null\n          damage_type_id?: number | null\n          generation_id?: number | null\n          id?: string\n          target_type_id?: number | null\n        }\n        Update: {\n          damage_factor?: number | null\n          damage_type_id?: number | null\n          generation_id?: number | null\n          id?: string\n          target_type_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"type_efficacy_past_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      types: {\n        Row: {\n          damage_class_id: number | null\n          generation_id: number | null\n          id: number\n          identifier: string | null\n          name: string | null\n          type_color: string | null\n        }\n        Insert: {\n          damage_class_id?: number | null\n          generation_id?: number | null\n          id: number\n          identifier?: string | null\n          name?: string | null\n          type_color?: string | null\n        }\n        Update: {\n          damage_class_id?: number | null\n          generation_id?: number | null\n          id?: number\n          identifier?: string | null\n          name?: string | null\n          type_color?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"types_damage_class_id_fkey\"\n            columns: [\"damage_class_id\"]\n            isOneToOne: false\n            referencedRelation: \"move_damage_classes\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"types_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      version_group_pokemon_move_methods: {\n        Row: {\n          id: string\n          pokemon_move_method_id: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          id?: string\n          pokemon_move_method_id?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          id?: string\n          pokemon_move_method_id?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"version_group_pokemon_move_methods_pokemon_move_method_id_fkey\"\n            columns: [\"pokemon_move_method_id\"]\n            isOneToOne: false\n            referencedRelation: \"pokemon_move_methods\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"version_group_pokemon_move_methods_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      version_group_regions: {\n        Row: {\n          id: string\n          region_id: number | null\n          version_group_id: number | null\n        }\n        Insert: {\n          id?: string\n          region_id?: number | null\n          version_group_id?: number | null\n        }\n        Update: {\n          id?: string\n          region_id?: number | null\n          version_group_id?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"version_group_regions_region_id_fkey\"\n            columns: [\"region_id\"]\n            isOneToOne: false\n            referencedRelation: \"regions\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"version_group_regions_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      version_groups: {\n        Row: {\n          generation_id: number | null\n          id: number\n          identifier: string\n          name: string\n          order: number | null\n        }\n        Insert: {\n          generation_id?: number | null\n          id: number\n          identifier: string\n          name: string\n          order?: number | null\n        }\n        Update: {\n          generation_id?: number | null\n          id?: number\n          identifier?: string\n          name?: string\n          order?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"version_groups_generation_id_fkey\"\n            columns: [\"generation_id\"]\n            isOneToOne: false\n            referencedRelation: \"generations\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n      versions: {\n        Row: {\n          id: number\n          identifier: string\n          name: string\n          version_group_id: number\n        }\n        Insert: {\n          id: number\n          identifier: string\n          name: string\n          version_group_id: number\n        }\n        Update: {\n          id?: number\n          identifier?: string\n          name?: string\n          version_group_id?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"versions_version_group_id_fkey\"\n            columns: [\"version_group_id\"]\n            isOneToOne: false\n            referencedRelation: \"version_groups\"\n            referencedColumns: [\"id\"]\n          }\n        ]\n      }\n    }\n    Views: {\n      [_ in never]: never\n    }\n    Functions: {\n      [_ in never]: never\n    }\n    Enums: {\n      [_ in never]: never\n    }\n    CompositeTypes: {\n      [_ in never]: never\n    }\n  }\n}\n\nexport type Tables<\n  PublicTableNameOrOptions extends\n    | keyof (Database[\"public\"][\"Tables\"] & Database[\"public\"][\"Views\"])\n    | { schema: keyof Database },\n  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }\n    ? keyof (Database[PublicTableNameOrOptions[\"schema\"]][\"Tables\"] &\n        Database[PublicTableNameOrOptions[\"schema\"]][\"Views\"])\n    : never = never\n> = PublicTableNameOrOptions extends { schema: keyof Database }\n  ? (Database[PublicTableNameOrOptions[\"schema\"]][\"Tables\"] &\n      Database[PublicTableNameOrOptions[\"schema\"]][\"Views\"])[TableName] extends {\n      Row: infer R\n    }\n    ? R\n    : never\n  : PublicTableNameOrOptions extends keyof (Database[\"public\"][\"Tables\"] &\n      Database[\"public\"][\"Views\"])\n  ? (Database[\"public\"][\"Tables\"] &\n      Database[\"public\"][\"Views\"])[PublicTableNameOrOptions] extends {\n      Row: infer R\n    }\n    ? R\n    : never\n  : never\n\nexport type TablesInsert<\n  PublicTableNameOrOptions extends\n    | keyof Database[\"public\"][\"Tables\"]\n    | { schema: keyof Database },\n  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }\n    ? keyof Database[PublicTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never\n> = PublicTableNameOrOptions extends { schema: keyof Database }\n  ? Database[PublicTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Insert: infer I\n    }\n    ? I\n    : never\n  : PublicTableNameOrOptions extends keyof Database[\"public\"][\"Tables\"]\n  ? Database[\"public\"][\"Tables\"][PublicTableNameOrOptions] extends {\n      Insert: infer I\n    }\n    ? I\n    : never\n  : never\n\nexport type TablesUpdate<\n  PublicTableNameOrOptions extends\n    | keyof Database[\"public\"][\"Tables\"]\n    | { schema: keyof Database },\n  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }\n    ? keyof Database[PublicTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never\n> = PublicTableNameOrOptions extends { schema: keyof Database }\n  ? Database[PublicTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Update: infer U\n    }\n    ? U\n    : never\n  : PublicTableNameOrOptions extends keyof Database[\"public\"][\"Tables\"]\n  ? Database[\"public\"][\"Tables\"][PublicTableNameOrOptions] extends {\n      Update: infer U\n    }\n    ? U\n    : never\n  : never\n\nexport type Enums<\n  PublicEnumNameOrOptions extends\n    | keyof Database[\"public\"][\"Enums\"]\n    | { schema: keyof Database },\n  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }\n    ? keyof Database[PublicEnumNameOrOptions[\"schema\"]][\"Enums\"]\n    : never = never\n> = PublicEnumNameOrOptions extends { schema: keyof Database }\n  ? Database[PublicEnumNameOrOptions[\"schema\"]][\"Enums\"][EnumName]\n  : PublicEnumNameOrOptions extends keyof Database[\"public\"][\"Enums\"]\n  ? Database[\"public\"][\"Enums\"][PublicEnumNameOrOptions]\n  : never\n",
      "properties": [
        {
          "name": "public",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "DropdownLinkOption",
      "id": "interface-DropdownLinkOption-0c29cfd92a74e4b3cfd953b5b53f0d78eafb75c06bab4e309188553b997e1f692e3cc81474990536d17e7654c130bd0da74bce61caf0b1e55e6d88fb4e827d2e",
      "file": "src/app/core/models/layout.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface DropdownLinkOption {\n  name: string;\n  path: string;\n}\n\nexport interface DropdownLinkSection {\n  name: string;\n  options: DropdownLinkOption[];\n}\n",
      "properties": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "path",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "DropdownLinkOption",
      "id": "interface-DropdownLinkOption-1b476f6b57c7da3cec45f5976f8d576ee8c2fca9f364c39823038e0573c2724ee8bc9edc7feae7753db5b165b61aa6a8025a9e2a5c8b8d2dc82d66699298da72-1",
      "file": "src/app/features/pokemon/pages/pokemon/pokemon.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { versions } from 'process';\nimport { map, switchMap, tap, forkJoin, Subject, takeUntil } from 'rxjs';\nimport { DropdownLinkSection, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\ninterface DropdownLinkOption {\n  name: string;\n  path: string;\n}\n\n@Component({\n  selector: 'dd-pokemon',\n  templateUrl: './pokemon.component.html',\n})\nexport class PokemonComponent implements OnInit {\n  pokemonForms: Tables<'pokemon'>[] = [];\n  selectedForm: Tables<'pokemon'> = {} as Tables<'pokemon'>;\n  pokemonSpecies: Tables<'pokemon_species'> = {} as Tables<'pokemon_species'>;\n\n  versionGroupIdentifier: string = '';\n  selectedVersionGroup: any = '';\n  versions: Tables<'versions'>[] = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route: ActivatedRoute = inject(ActivatedRoute);\n  private destroy$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(\n        switchMap((params) => {\n          const pokemonIdentifier = params['pokemon'];\n          this.versionGroupIdentifier = params['version-group'];\n          return this.supabase.getPokemonSpeciesByIdentifier(pokemonIdentifier);\n        }),\n        tap((pokemonSpecies) => {\n          this.pokemonSpecies = pokemonSpecies;\n        }),\n        switchMap((pokemonSpecies) => {\n          return this.supabase.getPokemonBySpeciesId(pokemonSpecies.id);\n        }),\n        tap((pokemon) => {\n          this.pokemonForms = pokemon;\n          this.selectedForm = pokemon[0];\n        })\n      )\n      .subscribe(() => {});\n  }\n\n  handleNewSelectedForm(form: any) {\n    this.selectedForm = form;\n  }\n\n  handleVersions(versions: any) {\n    this.versions = versions;\n  }\n\n  handleSelectedVersionGroup(versionGroup: any) {\n    this.selectedVersionGroup = versionGroup;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "properties": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "path",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "DropdownLinkOption-1"
    },
    {
      "name": "DropdownLinkSection",
      "id": "interface-DropdownLinkSection-0c29cfd92a74e4b3cfd953b5b53f0d78eafb75c06bab4e309188553b997e1f692e3cc81474990536d17e7654c130bd0da74bce61caf0b1e55e6d88fb4e827d2e",
      "file": "src/app/core/models/layout.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface DropdownLinkOption {\n  name: string;\n  path: string;\n}\n\nexport interface DropdownLinkSection {\n  name: string;\n  options: DropdownLinkOption[];\n}\n",
      "properties": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DropdownLinkOption[]",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "NavigationItem",
      "id": "interface-NavigationItem-aaef17ce3b4adb282157ac5df6c47ae2e7b006036912fc2ac436299af2c07689af87f2415a82df98db3c693500b2a3bb50fa4bf17fcd63002f4e2456effbcdf5",
      "file": "src/app/core/models/navigation.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface NavigationItem {\n  label: string;\n  sections: SectionItem[];\n}\n\nexport interface SectionItem {\n  sectionTitle: string;\n  options: SectionOption[];\n}\n\nexport interface SectionOption {\n  label: string;\n  link: string;\n}\n\nexport const headerNavItems: NavigationItem[] = [\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n",
      "properties": [
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "sections",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SectionItem[]",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "SectionItem",
      "id": "interface-SectionItem-aaef17ce3b4adb282157ac5df6c47ae2e7b006036912fc2ac436299af2c07689af87f2415a82df98db3c693500b2a3bb50fa4bf17fcd63002f4e2456effbcdf5",
      "file": "src/app/core/models/navigation.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface NavigationItem {\n  label: string;\n  sections: SectionItem[];\n}\n\nexport interface SectionItem {\n  sectionTitle: string;\n  options: SectionOption[];\n}\n\nexport interface SectionOption {\n  label: string;\n  link: string;\n}\n\nexport const headerNavItems: NavigationItem[] = [\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n",
      "properties": [
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SectionOption[]",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "sectionTitle",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "SectionOption",
      "id": "interface-SectionOption-aaef17ce3b4adb282157ac5df6c47ae2e7b006036912fc2ac436299af2c07689af87f2415a82df98db3c693500b2a3bb50fa4bf17fcd63002f4e2456effbcdf5",
      "file": "src/app/core/models/navigation.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface NavigationItem {\n  label: string;\n  sections: SectionItem[];\n}\n\nexport interface SectionItem {\n  sectionTitle: string;\n  options: SectionOption[];\n}\n\nexport interface SectionOption {\n  label: string;\n  link: string;\n}\n\nexport const headerNavItems: NavigationItem[] = [\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n",
      "properties": [
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "link",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "User",
      "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
      "file": "src/stories/user.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface User {\n  name: string;\n}\n",
      "properties": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [
    {
      "name": "HeaderDropdownItemService",
      "id": "injectable-HeaderDropdownItemService-b49bcb17139fd0fb299adac3c25e735772f018b19a0506a294f7f736497a833ff25f6a1dde8fc623726da465fe09b481ba0a6a61a0e4923c4ed0c18bf3898e2a",
      "file": "src/app/shared/components/header-dropdown-item/header-dropdown-item.service.ts",
      "properties": [
        {
          "name": "openDropdown",
          "defaultValue": "new Subject<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "getOpenDropdown",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setOpenDropdown",
          "args": [
            {
              "name": "label",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "label",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeaderDropdownItemService {\n  private openDropdown = new Subject<string>();\n\n  getOpenDropdown() {\n    return this.openDropdown.asObservable();\n  }\n\n  setOpenDropdown(label: string) {\n    this.openDropdown.next(label);\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SanityService",
      "id": "injectable-SanityService-c9adb2106696d793901b67e4c0da921a0b40eb268a2d80bc4ceb16531afbee3708300310605823fe913926b5e9b82de77312522321c9222f6ac40e0d59c527b7",
      "file": "src/app/core/services/sanity.service.ts",
      "properties": [
        {
          "name": "builder",
          "defaultValue": "imageUrlBuilder(this.client)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [123]
        },
        {
          "name": "client",
          "defaultValue": "createClient({\n    projectId: '6oeacjo5',\n    dataset: 'production',\n    apiVersion: '2023-11-24',\n    useCdn: true,\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "getAuthorByRefence",
          "args": [
            {
              "name": "author",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "unknown",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "author",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPostBySlug",
          "args": [
            {
              "name": "slug",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "unknown",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "slug",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPosts",
          "args": [],
          "optional": false,
          "returnType": "unknown",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134]
        },
        {
          "name": "getPostsByCategory",
          "args": [
            {
              "name": "category",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "unknown",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "category",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "urlFor",
          "args": [
            {
              "name": "source",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "unknown",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [134],
          "jsdoctags": [
            {
              "name": "source",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { createClient } from '@sanity/client';\nimport imageUrlBuilder from '@sanity/image-url';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SanityService {\n  constructor() {}\n\n  private client = createClient({\n    projectId: '6oeacjo5',\n    dataset: 'production',\n    apiVersion: '2023-11-24',\n    useCdn: true,\n  });\n\n  private builder = imageUrlBuilder(this.client);\n\n  async getPosts() {\n    const query = '*[_type == \"post\"]';\n    return this.client.fetch(query);\n  }\n\n  async getPostsByCategory(category: string) {\n    const query = `*[_type == \"post\" && \"${category}\" match categories[]->slug.current]`;\n    return this.client.fetch(query);\n  }\n\n  async getPostBySlug(slug: string) {\n    const query = `*[_type == \"post\" && slug.current == \"${slug}\"][0]`;\n    return this.client.fetch(query);\n  }\n\n  async urlFor(source: string) {\n    return this.builder.image(source).toString();\n  }\n\n  async getAuthorByRefence(author: string) {\n    const query = `*[_type == \"author\" && _id == \"${author}\"][0]`;\n    return this.client.fetch(query);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 8
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "SupabaseService",
      "id": "injectable-SupabaseService-394a2c5238c6ade0314f5b52c360d64cc91056c81ca7b725d78fc297cee66243fc7157782d92787497cd56a06a93b9f0de1b7506745fd7b1d5e5b35067005fae",
      "file": "src/app/core/services/supabase.service.ts",
      "properties": [
        {
          "name": "supabase",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseClient",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "getAllGenerations",
          "args": [],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getAllPokedexes",
          "args": [],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getAllPokedexVersionGroups",
          "args": [],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getAllPokemonSpeciesIdentifiers",
          "args": [],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 142,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getAllVersionGroups",
          "args": [],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 216,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getPokedexesByVersionGroupId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonAbilitiesByPokemonId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonBySpeciesId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonDexNumbersBySpeciesId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 83,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonMovesByPokemonId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "versionGroupId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 97,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "versionGroupId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonSpeciesByIdentifier",
          "args": [
            {
              "name": "identifier",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<Tables<pokemon_species>>",
          "typeParameters": [],
          "line": 115,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "identifier",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonSpeciesByPokedexId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<literal type[]>",
          "typeParameters": [],
          "line": 127,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonSpeciesFlavorTextBySpeciesId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 152,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonSpeciesFlavorTextWithVersionIdBySpeciesId",
          "args": [
            {
              "name": "speciesId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "versionIds",
              "type": "number[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 161,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "speciesId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "versionIds",
              "type": "number[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonStatsByPokemonId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 176,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPokemonTypesByPokemonId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 187,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getTypeById",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 198,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getVersionGroupByIdentifier",
          "args": [
            {
              "name": "identifier",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<Tables<version_groups>>",
          "typeParameters": [],
          "line": 224,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "identifier",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getVersionsByVersionGroupId",
          "args": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<Tables[]>",
          "typeParameters": [],
          "line": 206,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { from, map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Database, Tables } from '../models/supabase.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient<Database>(\n      environment.supabaseUrl,\n      environment.supabaseKey\n    );\n  }\n\n  get storage() {\n    return this.supabase.storage;\n  }\n\n  // Generations\n\n  getAllGenerations(): Observable<Tables<'generations'>[]> {\n    const request = this.supabase.from('generations').select('*');\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokedexes\n\n  getAllPokedexes(): Observable<Tables<'pokedexes'>[]> {\n    const request = this.supabase.from('pokedexes').select('*');\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokedex Version Groups\n\n  getAllPokedexVersionGroups(): Observable<Tables<'pokedex_version_groups'>[]> {\n    const request = this.supabase.from('pokedex_version_groups').select('*');\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getPokedexesByVersionGroupId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokedex_version_groups')\n      .select('pokedex_id (*)')\n      .eq('version_group_id', id);\n    return from(request).pipe(\n      map((response) => response.data?.map((item) => item.pokedex_id) || [])\n    );\n  }\n\n  // Pokémon\n\n  getPokemonBySpeciesId(id: number): Observable<Tables<'pokemon'>[]> {\n    const request = this.supabase\n      .from('pokemon')\n      .select('*')\n      .eq('species_id', id)\n      .order('form_order', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokémon Abilities\n\n  getPokemonAbilitiesByPokemonId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_abilities')\n      .select(\n        'pokemon_id, ability_id (id, identifier, name, generation_id, short_effect), is_hidden, slot'\n      )\n      .eq('pokemon_id', id)\n      .order('slot', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokémon Dex Numbers\n\n  getPokemonDexNumbersBySpeciesId(\n    id: number\n  ): Observable<Tables<'pokemon_dex_numbers'>[]> {\n    const request = this.supabase\n      .from('pokemon_dex_numbers')\n      .select('*')\n      .eq('species_id', id)\n      .order('pokedex_id', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Moves\n\n  getPokemonMovesByPokemonId(\n    id: number,\n    versionGroupId: number\n  ): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_moves')\n      .select(\n        'pokemon_id, version_group_id, move_id (id, identifier, name, type_id ( id, identifier, name, type_color ), power, pp, accuracy), pokemon_move_method_id (id, identifier, name), level, order'\n      )\n      .eq('pokemon_id', id)\n      .eq('version_group_id', versionGroupId)\n      .order('order', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Species\n\n  getPokemonSpeciesByIdentifier(\n    identifier: string\n  ): Observable<Tables<'pokemon_species'>> {\n    const request = this.supabase\n      .from('pokemon_species')\n      .select('*')\n      .eq('identifier', identifier)\n      .single();\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getPokemonSpeciesByPokedexId(id: number): Observable<\n    {\n      species_id: any;\n      pokedex_number: number;\n    }[]\n  > {\n    const request = this.supabase\n      .from('pokemon_dex_numbers')\n      .select('species_id (id, identifier, name, genus), pokedex_number')\n      .eq('pokedex_id', id)\n      .order('pokedex_number', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getAllPokemonSpeciesIdentifiers(): Observable<any> {\n    const request = this.supabase.from('pokemon_species').select('identifier');\n    return from(request).pipe(\n      map((response) => response.data || []),\n      map((data) => data.map((item: any) => item.identifier))\n    );\n  }\n\n  // Pokemon Species Flavor Text\n\n  getPokemonSpeciesFlavorTextBySpeciesId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_species_flavor_text')\n      .select('*')\n      .eq('species_id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getPokemonSpeciesFlavorTextWithVersionIdBySpeciesId(\n    speciesId: number,\n    versionIds: number[]\n  ): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_species_flavor_text')\n      .select('*')\n      .eq('species_id', speciesId)\n      .in('version_id', versionIds);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Stats\n\n  getPokemonStatsByPokemonId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_stats')\n      .select('stat_id (id, identifier, name), base_stat, effort')\n      .eq('pokemon_id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Types\n\n  getPokemonTypesByPokemonId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_types')\n      .select('type_id (id, identifier, name, type_color), slot')\n      .eq('pokemon_id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Types\n\n  getTypeById(id: number): Observable<any> {\n    const request = this.supabase.from('types').select('*').eq('id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Versions\n\n  getVersionsByVersionGroupId(id: number): Observable<Tables<'versions'>[]> {\n    const request = this.supabase\n      .from('versions')\n      .select('*')\n      .eq('version_group_id', id);\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Version Groups\n\n  getAllVersionGroups(): Observable<Tables<'version_groups'>[]> {\n    const request = this.supabase\n      .from('version_groups')\n      .select('*')\n      .order('order', { ascending: true });\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getVersionGroupByIdentifier(\n    identifier: string\n  ): Observable<Tables<'version_groups'>> {\n    const request = this.supabase\n      .from('version_groups')\n      .select('*')\n      .eq('identifier', identifier)\n      .single();\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 11
      },
      "accessors": {
        "storage": {
          "name": "storage",
          "getSignature": {
            "name": "storage",
            "type": "",
            "returnType": "",
            "line": 20
          }
        }
      },
      "extends": [],
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-a71836ac5ceedd64cdc3539798e0a5f2fe8aed3d089a2a14b278426ce21273912fbafd1d237a4bd3547b398cf44a2ee61f0eb35c6e8595dac2f83e2d8b531a0c",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-root",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dd-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<dd-header></dd-header>\n<div class=\"h-[94vh] overflow-y-scroll border-box\">\n  <main class=\"bg-zinc-900\">\n    <router-outlet></router-outlet>\n  </main>\n  <dd-footer></dd-footer>\n</div>\n"
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
      "file": "src/stories/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": ["./button.css"],
      "styles": [],
      "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "backgroundColor",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nWhat background color to use\n",
          "description": "<p>What background color to use</p>\n",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "'Button'",
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "pos": 798,
              "end": 811,
              "flags": 16842752,
              "modifierFlagsCache": 0,
              "transformFlags": 0,
              "kind": 334,
              "tagName": {
                "pos": 799,
                "end": 807,
                "flags": 16842752,
                "modifierFlagsCache": 0,
                "transformFlags": 0,
                "kind": 80,
                "escapedText": "required"
              },
              "comment": ""
            }
          ],
          "rawdescription": "\n\nButton contents\n\n",
          "description": "<p>Button contents</p>\n",
          "line": 43,
          "type": "string",
          "decorators": []
        },
        {
          "name": "primary",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nIs this the principal call to action on the page?\n",
          "description": "<p>Is this the principal call to action on the page?</p>\n",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'medium'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nHow large should the button be?\n",
          "description": "<p>How large should the button be?</p>\n",
          "line": 35,
          "type": "\"small\" | \"medium\" | \"large\"",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nOptional click handler\n",
          "description": "<p>Optional click handler</p>\n",
          "line": 49,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
          "styleUrl": "./button.css"
        }
      ],
      "stylesData": "",
      "extends": [],
      "accessors": {
        "classes": {
          "name": "classes",
          "getSignature": {
            "name": "classes",
            "type": "[]",
            "returnType": "string[]",
            "line": 51
          }
        }
      }
    },
    {
      "name": "ContainerHeaderComponent",
      "id": "component-ContainerHeaderComponent-4201b4123359154bf8803cea1bf7597d75fbce47cc33ae2969c4cfeb60c02639bbd30e5fb3fe50818204ec6f59a0b6c64179ccf760e6ae603e1550814061d8f5",
      "file": "src/app/shared/components/container-header/container-header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-container-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./container-header.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-container-header',\n  templateUrl: './container-header.component.html',\n})\nexport class ContainerHeaderComponent {\n  @Input() title: string = '';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<h3\n  class=\"flex justify-center font-semibold bg-byzantium rounded-t p-2 border-b border-zinc-800\"\n>\n  {{ title }}\n</h3>\n"
    },
    {
      "name": "DropdownLinkComponent",
      "id": "component-DropdownLinkComponent-968bbc1c797b10cc7489e57f74c28fc04f2332e8c67166d79e841969c2cb77be5f4cc37ae923cd7a6f26e3832779ec3fcdc44a18f34fbce0fab39554ad6ea3cd",
      "file": "src/app/shared/components/dropdown-link/dropdown-link.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-dropdown-link",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./dropdown-link.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "origin",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string",
          "decorators": []
        },
        {
          "name": "sections",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "DropdownLinkSection[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "routerSubscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "showDropdown",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [
        {
          "name": "clickout",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'document:click', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "toggleDropdown",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55
        }
      ],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription, filter } from 'rxjs';\nimport { DropdownLinkSection } from 'src/app/core/models';\n\n@Component({\n  selector: 'dd-dropdown-link',\n  templateUrl: './dropdown-link.component.html',\n  animations: [\n    trigger('fadeInOut', [\n      state(\n        'void',\n        style({\n          opacity: 0,\n          transform: 'scale(0.95)',\n        })\n      ),\n      transition('void <=> *', animate('100ms ease-in-out')),\n    ]),\n  ],\n})\nexport class DropdownLinkComponent implements OnDestroy {\n  @Input() sections: DropdownLinkSection[] = [];\n  @Input() placeholder: string = '';\n  @Input() origin?: string = '';\n  showDropdown: boolean = false;\n  routerSubscription: Subscription;\n\n  constructor(private eRef: ElementRef, private router: Router) {\n    this.routerSubscription = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.showDropdown = false;\n      });\n  }\n\n  toggleDropdown() {\n    this.showDropdown = !this.showDropdown;\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event: any) {\n    if (!this.eRef.nativeElement.contains(event.target)) {\n      this.showDropdown = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "eRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 40,
        "jsdoctags": [
          {
            "name": "eRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnDestroy"],
      "templateData": "<div></div>\n<div\n  class=\"relative inline-block text-left rounded\"\n  *ngIf=\"sections && sections.length > 0\"\n>\n  <div>\n    <button\n      type=\"button\"\n      class=\"inline-flex justify-center items-center w-36 h-10 gap-x-1.5 px-1 py-2 text-xs rounded cursor-pointer bg-zinc-900 hover:bg-zinc-800 border border-zinc-700\"\n      id=\"menu-button\"\n      aria-expanded=\"true\"\n      aria-haspopup=\"true\"\n      (click)=\"toggleDropdown()\"\n    >\n      <span class=\"w-5/6\"> {{ placeholder }}</span>\n      <div class=\"w-1/6 flex justify-center items-center\">\n        <ng-icon [name]=\"'heroChevronDownSolid'\"></ng-icon>\n      </div>\n    </button>\n  </div>\n  <div\n    class=\"absolute z-40 mt-2 w-56 rounded bg-zinc-950 max-h-[60vh] overflow-y-scroll border border-zinc-700 scrollbar-thumb-zinc-800 scrollbar-track-zinc-950\"\n    [ngClass]=\"{\n      'right-0 origin-top-right': origin === 'right',\n      'left-0 origin-top-left': origin === 'left',\n    }\"\n    role=\"menu\"\n    aria-orientation=\"vertical\"\n    aria-labelledby=\"menu-button\"\n    tabindex=\"-1\"\n    *ngIf=\"showDropdown\"\n    [@fadeInOut]\n  >\n    <ng-container *ngFor=\"let section of sections; let i = index\">\n      <ng-container>\n        <div\n          id=\"menuitem-{{ i }}-{{ section.name }}\"\n          class=\"text-xs font-semibold px-2 py-1 bg-old_mauve\"\n          role=\"menuitem\"\n          tabindex=\"-1\"\n        >\n          {{ section.name }}\n        </div>\n      </ng-container>\n      <div class=\"h-0.5 bg-zinc-800\" role=\"none\"></div>\n      <ng-container *ngFor=\"let option of section.options; let i = index\">\n        <a\n          id=\"menuitem-{{ i }}-{{ option.name }}\"\n          routerLink=\"{{ option.path }}\"\n          role=\"menuitem\"\n          class=\"block px-4 py-2 font-sans text-sm hover:bg-zinc-800\"\n        >\n          {{ option.name }}\n        </a>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n"
    },
    {
      "name": "FooterComponent",
      "id": "component-FooterComponent-feadd76d3af0d975d7bf07ba5eaccdca3e130229c54f7cb4e0ee35b0dfe48c16c4bd1b586c4ae4fb73c8aff2007c83931b27276417ad0566c6c6aae61c063c03",
      "file": "src/app/core/layout/footer/footer.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-footer",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./footer.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CoreModule",
          "type": "module"
        },
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "RouterLink"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule, DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'dd-footer',\n  templateUrl: './footer.component.html',\n  standalone: true,\n  imports: [CoreModule, CommonModule, RouterLink],\n})\nexport class FooterComponent {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 12
      },
      "extends": [],
      "templateData": "<footer class=\"flex flex-col justify-center items-center bg-zinc-950 p-4 gap-4\">\n  <p class=\"text-center text-sm text-zinc-600 h-20 sm:h-6\">\n    Pokémon images & names © 1995-2023 Nintendo/Game Freak. Pokémon data thanks\n    to\n    <a\n      href=\"https://pokeapi.co/\"\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      class=\"underline text-byzantium transition hover:text-old_mauve\"\n      >PokéAPI</a\n    >.\n  </p>\n</footer>\n"
    },
    {
      "name": "GamesComponent",
      "id": "component-GamesComponent-4d44393e589b2daad03d70988548be23dab94838b6033df18d204baa094a6a530369e913eaeaf4bb0cb78e1ec774ff6c0faaa6a84273c97b6b9cb84ed1f9114f",
      "file": "src/app/features/games/pages/games.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-games",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./games.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "route",
          "defaultValue": "inject(ActivatedRoute)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [123]
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [123]
        },
        {
          "name": "urlValue",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [125]
        },
        {
          "name": "versionGroup",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [125]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-games',\n  templateUrl: './games.component.html',\n})\nexport class GamesComponent {\n  public urlValue: string = '';\n  public versionGroup: any;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route = inject(ActivatedRoute);\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .pipe(\n        switchMap((params) => {\n          this.urlValue = params.get('slug') || '';\n          return this.supabase.getVersionGroupByIdentifier(this.urlValue);\n        })\n      )\n      .subscribe((data: any) => {\n        this.versionGroup = data;\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div class=\"max-w-screen-xl bg-zinc-950 rounded w-full\">\n    <div class=\"flex flex-col gap-3 pb-4 w-full\">\n      <dd-container-header\n        class=\"mb-2\"\n        [title]=\"\n          versionGroup && versionGroup.name\n            ? 'Pokémon ' + versionGroup.name\n            : ''\n        \"\n      ></dd-container-header>\n      <dd-news-container [category]=\"urlValue\"></dd-news-container>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "HeaderComponent",
      "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
      "file": "src/stories/header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-header",
      "styleUrls": ["./header.css"],
      "styles": [],
      "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "user",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "User | null",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onCreateAccount",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "EventEmitter"
        },
        {
          "name": "onLogin",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "EventEmitter"
        },
        {
          "name": "onLogout",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
          "styleUrl": "./header.css"
        }
      ],
      "stylesData": "",
      "extends": []
    },
    {
      "name": "HeaderComponent",
      "id": "component-HeaderComponent-acba5da3c7862355f231be429077fe95c7dcbd7c347caf757c93010eaadd63137b2a7204cce4152fb36c76c6dcef6157d0ea4270cc6a54f669036bf3e8f2d389-1",
      "file": "src/app/core/layout/header/header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./header.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "navItems",
          "defaultValue": "headerNavItems",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CoreModule",
          "type": "module"
        },
        {
          "name": "SharedModule",
          "type": "module"
        },
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "RouterLink"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { headerNavItems } from 'src/app/core/models';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@Component({\n  selector: 'dd-header',\n  templateUrl: './header.component.html',\n  standalone: true,\n  imports: [CoreModule, SharedModule, CommonModule, RouterLink],\n})\nexport class HeaderComponent {\n  constructor() {}\n\n  navItems = headerNavItems;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 14
      },
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "HeaderComponent-1",
      "templateData": "<header class=\"z-50 w-screen bg-byzantium h-[10vh] sm:h-[6vh]\">\n  <div\n    class=\"flex flex-wrap sm:flex-nowrap max-w-screen-xl items-center sm:gap-8\"\n  >\n    <a\n      class=\"flex justify-center items-center gap-2 h-[6vh] w-full sm:w-auto sm:pl-4\"\n      routerLink=\"/\"\n    >\n      <img\n        src=\"../../assets/images/dubious-disc.png\"\n        width=\"40\"\n        height=\"40\"\n        alt=\"\"\n      />\n      <span class=\"font-righteous text-3xl uppercase\"> Dubious Disc </span>\n    </a>\n    <nav\n      aria-label=\"Global\"\n      class=\"flex flex-1 justify-center sm:justify-start items-center h-[4vh] sm:h-[6vh] w-full z-50\"\n    >\n      <ul class=\"flex justify-center sm:justify-start items-center h-full\">\n        <ng-container *ngFor=\"let navItem of navItems\">\n          <dd-header-dropdown-item\n            [navItem]=\"navItem\"\n            class=\"h-full\"\n          ></dd-header-dropdown-item>\n        </ng-container>\n      </ul>\n    </nav>\n  </div>\n</header>\n"
    },
    {
      "name": "HeaderDropdownItemComponent",
      "id": "component-HeaderDropdownItemComponent-2cd8a16f02018f38119d6d4a9ff0be5c714e65369663d0973de2743a025d2c519fa81bf3e685d1be35ae99094dcbd43bf81a80b56091482b7046e0ae25d8b969",
      "file": "src/app/shared/components/header-dropdown-item/header-dropdown-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-header-dropdown-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./header-dropdown-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "navItem",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "NavigationItem",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isHovered",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "isOpen",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "subscription",
          "defaultValue": "new Subscription()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "closeDropdown",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'document:click', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "toggleDropdown",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50
        }
      ],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  HostListener,\n  Input,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NavigationItem } from 'src/app/core/models';\nimport { HeaderDropdownItemService } from './header-dropdown-item.service';\n@Component({\n  selector: 'dd-header-dropdown-item',\n  templateUrl: './header-dropdown-item.component.html',\n})\nexport class HeaderDropdownItemComponent implements OnInit, OnDestroy {\n  @Input() navItem!: NavigationItem;\n  isHovered = false;\n  isOpen = false;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private headerDropdownItemService: HeaderDropdownItemService,\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.headerDropdownItemService\n      .getOpenDropdown()\n      .subscribe((label) => {\n        if (label !== this.navItem.label) {\n          this.isOpen = false;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      this.headerDropdownItemService.setOpenDropdown(this.navItem.label);\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  closeDropdown(event: Event) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.isOpen = false;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "headerDropdownItemService",
            "type": "HeaderDropdownItemService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "headerDropdownItemService",
            "type": "HeaderDropdownItemService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<li class=\"group h-full w-full z-50 sm:relative\">\n  <button\n    (click)=\"toggleDropdown()\"\n    [ngClass]=\"{\n      'bg-old_mauve': isOpen,\n      'bg-byzantium': !isOpen,\n    }\"\n    class=\"flex items-center justify-center rounded-t sm:rounded-none transition h-full px-4 font-semibold text-sm hover:bg-old_mauve\"\n  >\n    {{ navItem.label }}\n  </button>\n  <ul\n    *ngIf=\"navItem.sections && navItem.sections.length > 0\"\n    [ngClass]=\"{\n      'visible, scale-y-100': isOpen,\n      'invisible, scale-y-0': !isOpen,\n    }\"\n    class=\"absolute right-0 bg-zinc-950 sm:rounded-b border-old_mauve border-[1px] mr-[1px] border-t-0 w-screen sm:w-80 overflow-y-auto max-h-[60vh] origin-top sm:origin-top-right transition ease-in-out duration-200 transform\"\n  >\n    <ng-container *ngFor=\"let section of navItem.sections\">\n      <li class=\"\">\n        <div class=\"text-sm font-semibold px-2 py-1 bg-old_mauve\">\n          {{ section.sectionTitle }}\n        </div>\n        <ul class=\"space-y-1\">\n          <li *ngFor=\"let option of section.options\">\n            <a\n              routerLink=\"{{ option.link }}\"\n              class=\"block px-4 py-2 font-sans text-sm hover:bg-zinc-800\"\n            >\n              {{ option.label }}\n            </a>\n          </li>\n        </ul>\n      </li>\n    </ng-container>\n  </ul>\n</li>\n"
    },
    {
      "name": "HomeComponent",
      "id": "component-HomeComponent-76a64b116e73011dfb6d6e9e2da0c8d50a5e917d01edd6547a74fd259c189c906bb9dce69c5ae5814f569abbf371883c8ad46a5d4a32541d46899183a87cdbe2",
      "file": "src/app/features/home/pages/home.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-home",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./home.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "pokemonSpecies",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "randomPokemonIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getRandomPokemonIdentifier",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject } from '@angular/core';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n  pokemonSpecies: string[] = [];\n  randomPokemonIdentifier: string = '';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n\n  ngOnInit(): void {\n    this.supabase.getAllPokemonSpeciesIdentifiers().subscribe((data: any) => {\n      this.pokemonSpecies = data;\n      this.randomPokemonIdentifier = this.getRandomPokemonIdentifier();\n    });\n  }\n\n  getRandomPokemonIdentifier() {\n    return this.pokemonSpecies[\n      Math.floor(Math.random() * this.pokemonSpecies.length)\n    ];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"flex flex-col justify-start items-center h-full w-full\">\n  <div class=\"flex flex-col justify-start items-center h-full w-full\">\n    <div class=\"flex justify-center items-center px-2 py-4\">\n      <h3 class=\"font-sans-light h-full text-center\">\n        Pokémon-related Tools, Resources, News and More\n      </h3>\n    </div>\n    <div\n      class=\"grid grid-cols-2 xl:grid-cols-3 gap-4 mb-4 mx-8 max-w-screen-2xl\"\n    >\n      <dd-news-container class=\"col-span-2\"></dd-news-container>\n      <div class=\"col-span-2 lg:col-span-1\">\n        <div class=\"bg-zinc-950 rounded\">\n          <dd-container-header\n            [title]=\"'Quick Links'\"\n            class=\"text-sm\"\n          ></dd-container-header>\n          <div class=\"grid grid-cols-2 gap-4 sm:grid-cols-3 w-full p-4\">\n            <dd-quick-link\n              [url]=\"'/pokedex/scarlet-violet'\"\n              [imageUrl]=\"'assets/images/bdsp-pokedex-icon.png'\"\n              [title]=\"'Pokédex'\"\n              [description]=\"'View data from any main series game'\"\n            ></dd-quick-link>\n            <!-- <dd-quick-link\n              [url]=\"'/team-builder'\"\n              [imageUrl]=\"'assets/images/poryphone.png'\"\n              [title]=\"'Team Builder'\"\n              [description]=\"'Plan a team for a playthrough'\"\n            ></dd-quick-link> -->\n            <dd-quick-link\n              [url]=\"'/pokedex/national/' + randomPokemonIdentifier\"\n              [imageUrl]=\"'assets/images/question-icon.png'\"\n              [title]=\"'Random Pokémon'\"\n              [description]=\"'View a random Pokémon\\'s information'\"\n            ></dd-quick-link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "NewsComponent",
      "id": "component-NewsComponent-1ebea0a396f08eb43fa2977b4ee4b3ab30004a38de6dc36030cfdba2496314b3c476cd0be4164255b1f799f5589ae07402dfb8201395c15eb3a11adffe898584",
      "file": "src/app/features/news/pages/news.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-news",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./news.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "articleSlug",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "html",
          "defaultValue": "htm.bind(vhtml)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "imagesLoaded",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "myPortableTextComponents",
          "defaultValue": "{\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "post",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methodsClass": [
        {
          "name": "formatDate",
          "args": [
            {
              "name": "dateString",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateString",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "toHTML",
          "args": [
            {
              "name": "text",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "text",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SanityService } from 'src/app/core/services/sanity.service';\nimport { toHTML, uriLooksSafe } from '@portabletext/to-html';\nimport htm from 'htm';\nimport vhtml from 'vhtml';\n\n@Component({\n  selector: 'dd-news',\n  templateUrl: './news.component.html',\n})\nexport class NewsComponent {\n  articleSlug: string = '';\n  post: any;\n  imagesLoaded: boolean = false;\n\n  html = htm.bind(vhtml);\n  myPortableTextComponents = {\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  };\n\n  constructor(\n    private sanityService: SanityService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(async (params) => {\n      this.articleSlug = params.get('slug') || '';\n      this.post = await this.sanityService.getPostBySlug(this.articleSlug);\n      this.post.author = await this.sanityService.getAuthorByRefence(\n        this.post.author._ref\n      );\n      this.post.mainImage = await this.sanityService.urlFor(\n        this.post.mainImage\n      );\n      this.post.author.image.asset = await this.sanityService.urlFor(\n        this.post.author.image.asset\n      );\n      this.imagesLoaded = true;\n    });\n  }\n\n  formatDate(dateString: string): string {\n    const date = new Date(dateString);\n    const day = ('0' + date.getDate()).slice(-2);\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  }\n\n  toHTML(text: any) {\n    return toHTML(text, { components: this.myPortableTextComponents });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "sanityService",
            "type": "SanityService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "route",
            "type": "ActivatedRoute",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 31,
        "jsdoctags": [
          {
            "name": "sanityService",
            "type": "SanityService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "route",
            "type": "ActivatedRoute",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div class=\"max-w-screen-md bg-zinc-950 rounded w-full\">\n    <div\n      *ngIf=\"post && post.mainImage && imagesLoaded; else elseBlock\"\n      class=\"flex flex-col pb-4 w-full rounded\"\n    >\n      <img src=\"{{ post.mainImage }}\" class=\"rounded-t\" />\n      <h2 class=\"font-bold text-4xl p-4\">\n        {{ post.title }}\n      </h2>\n      <div class=\"bg-zinc-700 h-[1px] w-full rounded\"></div>\n      <div class=\"flex flex-row justify-between items-center p-4 w-full\">\n        <div\n          class=\"flex flex-row items-center gap-2\"\n          *ngIf=\"\n            post.author &&\n            post.author.image &&\n            post.author.name &&\n            post.author.image.asset &&\n            imagesLoaded\n          \"\n        >\n          <img\n            src=\"{{ post.author.image.asset }}\"\n            height=\"30\"\n            width=\"30\"\n            class=\"rounded-full\"\n          />\n          <span class=\"font-semibold\">\n            {{ post.author.name }}\n          </span>\n        </div>\n        <span class=\"font-semibold\">\n          {{ formatDate(post.publishedAt) }}\n        </span>\n      </div>\n      <div class=\"bg-zinc-700 h-[1px] w-full rounded\"></div>\n      <div\n        class=\"p-4 flex flex-col gap-3\"\n        [innerHTML]=\"toHTML(post.body)\"\n      ></div>\n    </div>\n    <ng-template #elseBlock>\n      <div class=\"flex w-full h-64 justify-center items-center\">\n        <dd-spinner></dd-spinner>\n      </div>\n    </ng-template>\n  </div>\n</div>\n"
    },
    {
      "name": "NewsContainerComponent",
      "id": "component-NewsContainerComponent-96b2cae605d77094848cb30d417ec0b3f7870019a8bf3d783ab9ac310ad7ab2a67679c98b062654cf8027c526135a2c459128345f42e4e5579f01ea02afba435",
      "file": "src/app/shared/components/news-container/news-container.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-news-container",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./news-container.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "category",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "posts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methodsClass": [
        {
          "name": "groupPostsByDate",
          "args": [
            {
              "name": "posts",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "posts",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "updateNews",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { SanityService } from 'src/app/core/services/sanity.service';\n\n@Component({\n  selector: 'dd-news-container',\n  templateUrl: './news-container.component.html',\n})\nexport class NewsContainerComponent implements OnChanges {\n  @Input() category?: string;\n  posts: any;\n\n  constructor(private sanityService: SanityService) {}\n\n  ngOnInit() {\n    this.updateNews();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['category'] && !changes['category'].firstChange) {\n      // The category input has changed. Update the component.\n      this.updateNews();\n    }\n  }\n\n  updateNews(): void {\n    if (this.category) {\n      this.sanityService.getPostsByCategory(this.category).then((posts) => {\n        this.posts = this.groupPostsByDate(posts);\n      });\n    } else {\n      this.sanityService.getPosts().then((posts) => {\n        this.posts = this.groupPostsByDate(posts);\n      });\n    }\n  }\n\n  groupPostsByDate(posts: any) {\n    const groupedPosts = posts.reduce((grouped: any, post: any) => {\n      const date = new Date(post.publishedAt).toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n      if (!grouped[date]) {\n        grouped[date] = [];\n      }\n      grouped[date].push(post);\n      return grouped;\n    }, {});\n\n    return Object.entries(groupedPosts);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "sanityService",
            "type": "SanityService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "sanityService",
            "type": "SanityService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div class=\"bg-zinc-950 rounded w-full\">\n  <dd-container-header\n    [title]=\"'News & Updates'\"\n    class=\"text-sm\"\n  ></dd-container-header>\n  <div class=\"flex flex-col gap-3 items-center p-4\">\n    <ng-container *ngFor=\"let group of posts\">\n      <div class=\"w-full flex\">{{ group[0] }}</div>\n      <dd-news-card\n        *ngFor=\"let post of group[1]\"\n        [post]=\"post\"\n      ></dd-news-card>\n    </ng-container>\n  </div>\n  <ng-template #elseBlock>\n    <dd-spinner></dd-spinner>\n  </ng-template>\n</div>\n"
    },
    {
      "name": "PageComponent",
      "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
      "file": "src/stories/page.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-page",
      "styleUrls": ["./page.css"],
      "styles": [],
      "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "user",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "User | null",
          "optional": false,
          "description": "",
          "line": 69
        }
      ],
      "methodsClass": [
        {
          "name": "doCreateAccount",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 79,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "doLogin",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "doLogout",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "HeaderComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
          "styleUrl": "./page.css"
        }
      ],
      "stylesData": "",
      "extends": []
    },
    {
      "name": "PokedexComponent",
      "id": "component-PokedexComponent-886f541db2be36cbf6771748ed2b3f30817450627a6acc4b9d09dbde971eb9106802375685f7d8114d1587d3898363de20ba8b766a66fb4b4f97e8b0b31cbf52",
      "file": "src/app/features/pokedex/pages/pokedex/pokedex.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokedex",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokedex.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "formattedVersionGroupName",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [125]
        },
        {
          "name": "listView",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [125]
        },
        {
          "name": "ngUnsubscribe",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [123]
        },
        {
          "name": "pokedexes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<pokedexes>[]",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [125]
        },
        {
          "name": "route",
          "defaultValue": "inject(ActivatedRoute)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ActivatedRoute",
          "optional": false,
          "description": "",
          "line": 22,
          "modifierKind": [123]
        },
        {
          "name": "selectedPokedex",
          "defaultValue": "{} as Tables<'pokedexes'>",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<pokedexes>",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [125]
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [123]
        },
        {
          "name": "versionGroup",
          "defaultValue": "{} as Tables<'version_groups'>",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<version_groups>",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [125]
        },
        {
          "name": "versionGroupIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [125]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, switchMap } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex',\n  templateUrl: './pokedex.component.html',\n})\nexport class PokedexComponent implements OnInit {\n  public listView: boolean = false;\n  public versionGroupIdentifier: string = '';\n  public formattedVersionGroupName: string = '';\n\n  public pokedexes: Tables<'pokedexes'>[] = [];\n  public selectedPokedex: Tables<'pokedexes'> = {} as Tables<'pokedexes'>;\n  public versionGroup: Tables<'version_groups'> =\n    {} as Tables<'version_groups'>;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route: ActivatedRoute = inject(ActivatedRoute);\n\n  private ngUnsubscribe = new Subject<void>();\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .pipe(\n        switchMap((params) => {\n          this.versionGroupIdentifier = params.get('version-group') || '';\n          return this.supabase.getVersionGroupByIdentifier(\n            this.versionGroupIdentifier\n          );\n        }),\n        switchMap((versionGroup) => {\n          this.versionGroup = versionGroup;\n          return this.supabase.getPokedexesByVersionGroupId(versionGroup.id);\n        })\n      )\n      .subscribe((data: Tables<'pokedexes'>[]) => {\n        this.pokedexes = data;\n        this.selectedPokedex = data[0];\n      });\n  }\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"flex flex-col justify-start items-center w-full h-full\">\n  <div\n    class=\"grid grid-cols-2 xl:grid-cols-3 gap-2 m-4 max-w-screen-2xl h-full w-full\"\n  >\n    <div\n      class=\"col-span-2 xl:col-span-1 columns-2 xl:columns-1 flex flex-row xl:flex-col gap-4 sticky top-0 z-30 xl:relative bg-zinc-900 py-2 xl:py-0 w-full\"\n    >\n      <!-- <div class=\"bg-zinc-950 rounded w-full hidden sm:block\">\n        <dd-container-header [title]=\"'Quick Links'\"></dd-container-header>\n        <div class=\"p-4 flex gap-2 justify-between\">\n          <dd-pokedex-select-dropdown></dd-pokedex-select-dropdown>\n          <a\n            class=\"flex justify-center items-center text-center text-xs bg-zinc-800 hover:bg-green-800 outline outline-1 outline-zinc-500 hover:outline-2 font-bold py-2 px-4 rounded\"\n            [routerLink]=\"'/games/' + this.urlValue\"\n          >\n            Game Page\n          </a>\n          <a\n            class=\"flex justify-center items-center text-center text-xs bg-zinc-800 hover:bg-green-800 outline outline-1 outline-zinc-500 hover:outline-2 font-bold py-2 px-4 rounded\"\n            routerLink=\"/team-builder\"\n          >\n            Team Builder\n          </a>\n        </div>\n      </div> -->\n      <div class=\"bg-zinc-950 rounded w-full sticky top-2\">\n        <dd-container-header\n          [title]=\"'Filters & Options'\"\n        ></dd-container-header>\n        <div class=\"p-4 flex gap-2\">\n          <dd-pokedex-select-dropdown\n            [currentVersionGroupName]=\"this.versionGroup.name\"\n          ></dd-pokedex-select-dropdown>\n          <button\n            (click)=\"listView = !listView\"\n            class=\"flex justify-center items-center py-2 px-4 text-center text-xs cursor-pointer font-bold rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700\"\n          >\n            List View\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-span-2 bg-zinc-950 rounded h-full w-full\">\n      <dd-container-header\n        class=\"mb-2\"\n        [title]=\"\n          this.versionGroup.name\n            ? this.versionGroup.name + ' Pokedex'\n            : 'Pokedex'\n        \"\n      ></dd-container-header>\n      <div *ngIf=\"pokedexes.length > 0; else elseBlock\" class=\"p-4\">\n        <ul class=\"flex text-xs text-center overflow-x-scroll\">\n          <li class=\"me-2\" *ngFor=\"let pokedex of pokedexes\">\n            <button\n              (click)=\"selectedPokedex = pokedex\"\n              class=\"inline-block whitespace-nowrap p-4 rounded-t hover:bg-zinc-800\"\n              [ngClass]=\"{\n                'bg-zinc-800 cursor-default': selectedPokedex === pokedex,\n                'bg-zinc-900': selectedPokedex !== pokedex\n              }\"\n              aria-current=\"page\"\n            >\n              <span>{{ pokedex.name }}</span>\n            </button>\n          </li>\n        </ul>\n        <ng-container *ngFor=\"let pokedex of pokedexes\">\n          <dd-pokedex-tab\n            *ngIf=\"pokedex === selectedPokedex\"\n            [pokedex]=\"pokedex\"\n            [listView]=\"listView\"\n            [versionGroupIdentifier]=\"versionGroupIdentifier\"\n          ></dd-pokedex-tab>\n        </ng-container>\n      </div>\n      <ng-template #elseBlock>\n        <div class=\"flex w-full h-64 justify-center items-center\">\n          <dd-spinner></dd-spinner>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "PokedexGridViewItemComponent",
      "id": "component-PokedexGridViewItemComponent-ec20291a15fcedcba0ac2fb67642f9698d39efcc4fba9ca48baf2406257e4a31b5d4b8b05aff021a60855d38eeb5ddf92494ba419247192b72df078cfb1eb19c",
      "file": "src/app/features/pokedex/components/pokedex-grid-view-item/pokedex-grid-view-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokedex-grid-view-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokedex-grid-view-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemon",
          "defaultValue": "{} as any",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "imageURL",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, Input, OnInit } from '@angular/core';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex-grid-view-item',\n  templateUrl: './pokedex-grid-view-item.component.html',\n})\nexport class PokedexGridViewItemComponent implements OnInit {\n  @Input() pokemon: any = {} as any;\n  imageURL: string = '';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n\n  ngOnInit(): void {\n    this.imageURL = this.supabase.storage\n      .from('pokemon')\n      .getPublicUrl(\n        'home-icons/' + this.pokemon.species_id.id + '.png'\n      ).data.publicUrl;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div\n  class=\"flex flex-col justify-center items-center rounded cursor-pointer bg-zinc-900 hover:bg-zinc-800 border border-zinc-700\"\n  style=\"width: 90px; height: 130px\"\n>\n  <img\n    class=\"transition-all duration-300 ease-in-out\"\n    [defaultImage]=\"'assets/images/question-icon.png'\"\n    [lazyLoad]=\"imageURL\"\n    height=\"80\"\n    width=\"80\"\n  />\n  <div\n    class=\"flex flex-col justify-center items-center text-center text-xs\"\n    style=\"height: 40px; width: 100%\"\n  >\n    <span>№ {{ pokemon.pokedex_number }}</span>\n    <span>{{ pokemon.species_id.name }}</span>\n  </div>\n</div>\n"
    },
    {
      "name": "PokedexListViewItemComponent",
      "id": "component-PokedexListViewItemComponent-b26f73f14372e4e87aa455ad9638161b5a529f022603fcb68e38c813e8aca6d01c94bef03df877f3acf243b56dd24a6238fb2fb796e4fa117cda925855a7edf5",
      "file": "src/app/features/pokedex/components/pokedex-list-view-item/pokedex-list-view-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokedex-list-view-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokedex-list-view-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemon",
          "defaultValue": "{} as any",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "imageURL",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dd-pokedex-list-view-item',\n  templateUrl: './pokedex-list-view-item.component.html',\n})\nexport class PokedexListViewItemComponent implements OnInit {\n  @Input() pokemon: any = {} as any;\n  imageURL: string = '';\n\n  ngOnInit(): void {\n    this.imageURL = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${this.pokemon.species_id.id}.png`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div\n  class=\"flex justify-between items-center cursor-pointer bg-zinc-900 hover:bg-zinc-800 border-b border-x border-zinc-700 w-full h-12 px-2\"\n>\n  <div class=\"flex items-center text-center gap-2\">\n    <img\n      class=\"transition-all duration-300 ease-in-out\"\n      [defaultImage]=\"'assets/images/question-icon.png'\"\n      [lazyLoad]=\"imageURL\"\n      height=\"40\"\n      width=\"40\"\n    />\n    <span>№ {{ pokemon.pokedex_number }}</span>\n    <span>{{ pokemon.species_id.name }}</span>\n  </div>\n  <div class=\"flex text-sm\">\n    <span>{{ pokemon.species_id.genus }}</span>\n  </div>\n</div>\n"
    },
    {
      "name": "PokedexSelectDropdownComponent",
      "id": "component-PokedexSelectDropdownComponent-994343c879ec49c25b6619457a7b14593670b2e629819b103dc33ed2a548acd9df8e654dcb219a9d363e6812a6fafd65db923be4fbc6e56cb7fa39344182eb83",
      "file": "src/app/shared/components/pokedex-select-dropdown/pokedex-select-dropdown.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokedex-select-dropdown",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokedex-select-dropdown.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "currentVersionGroupName",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string",
          "decorators": []
        },
        {
          "name": "origin",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string",
          "decorators": []
        },
        {
          "name": "selectedPokemonSpecies",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "Tables<pokemon_species>",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [123]
        },
        {
          "name": "placeholder",
          "defaultValue": "'Select Pokedex'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [125]
        },
        {
          "name": "sections",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DropdownLinkSection[]",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [125]
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getAllPokedexVersionGroups",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getPokedexVersionGroupsWithPokemon",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 125,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnChanges, inject } from '@angular/core';\nimport { Subject, forkJoin, takeUntil } from 'rxjs';\nimport { DropdownLinkSection, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex-select-dropdown',\n  templateUrl: './pokedex-select-dropdown.component.html',\n})\nexport class PokedexSelectDropdownComponent implements OnChanges {\n  @Input() selectedPokemonSpecies?: Tables<'pokemon_species'>;\n  @Input() currentVersionGroupName: string = '';\n  @Input() origin: string = 'left';\n\n  public sections: DropdownLinkSection[] = [];\n  public placeholder: string = 'Select Pokedex';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    if (this.selectedPokemonSpecies) {\n      this.getPokedexVersionGroupsWithPokemon();\n    } else {\n      this.getAllPokedexVersionGroups();\n    }\n  }\n\n  getAllPokedexVersionGroups(): void {\n    forkJoin({\n      versionGroups: this.supabase.getAllVersionGroups(),\n      generations: this.supabase.getAllGenerations(),\n      pokedexVersionGroups: this.supabase.getAllPokedexVersionGroups(),\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ versionGroups, generations, pokedexVersionGroups }) => {\n        const versionGroupIds = versionGroups.map((item: any) => item.id);\n        let filteredPokedexVersionGroups = pokedexVersionGroups.filter(\n          (pokedexVersionGroup: Tables<'pokedex_version_groups'>) =>\n            versionGroupIds.includes(pokedexVersionGroup.version_group_id)\n        );\n        const versionGroupsWithPokedexes = new Set(\n          filteredPokedexVersionGroups.map((item) => item.version_group_id)\n        );\n\n        this.sections = [\n          ...generations.reverse().map((generation) => {\n            return {\n              name: generation.name ?? '',\n              options: versionGroups\n                .filter(\n                  (versionGroup): boolean =>\n                    versionGroup.generation_id === generation.id &&\n                    versionGroupsWithPokedexes.has(versionGroup.id)\n                )\n                .map((versionGroup) => ({\n                  name: versionGroup.name,\n                  path: `/pokedex/${versionGroup.identifier}`,\n                })),\n            };\n          }),\n        ];\n      });\n  }\n\n  getPokedexVersionGroupsWithPokemon(): void {\n    if (!this.selectedPokemonSpecies) return;\n    forkJoin({\n      versionGroups: this.supabase.getAllVersionGroups(),\n      generations: this.supabase.getAllGenerations(),\n      pokedexVersionGroups: this.supabase.getAllPokedexVersionGroups(),\n      pokemonDexNumbers: this.supabase.getPokemonDexNumbersBySpeciesId(\n        this.selectedPokemonSpecies.id\n      ),\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        ({\n          versionGroups,\n          generations,\n          pokedexVersionGroups,\n          pokemonDexNumbers,\n        }) => {\n          const versionGroupIds = versionGroups.map((item: any) => item.id);\n          let filteredPokedexVersionGroups = pokedexVersionGroups.filter(\n            (pokedexVersionGroup: Tables<'pokedex_version_groups'>) =>\n              versionGroupIds.includes(pokedexVersionGroup.version_group_id)\n          );\n          const dexNumbers = pokemonDexNumbers.map((item) => item.pokedex_id);\n          filteredPokedexVersionGroups = filteredPokedexVersionGroups.filter(\n            (pokedexVersionGroup: Tables<'pokedex_version_groups'>) =>\n              dexNumbers.includes(pokedexVersionGroup.pokedex_id)\n          );\n          const versionGroupsWithPokedexes = new Set(\n            filteredPokedexVersionGroups.map((item) => item.version_group_id)\n          );\n\n          this.sections = [\n            ...generations\n              .reverse()\n              .reduce((acc: DropdownLinkSection[], generation) => {\n                const matchingVersionGroups = versionGroups.filter(\n                  (versionGroup): boolean =>\n                    versionGroup.generation_id === generation.id &&\n                    versionGroupsWithPokedexes.has(versionGroup.id)\n                );\n\n                if (matchingVersionGroups.length > 0) {\n                  acc.push({\n                    name: generation.name ?? '',\n                    options: matchingVersionGroups.map((versionGroup) => ({\n                      name: versionGroup.name,\n                      path: `/pokedex/${versionGroup.identifier}/${this.selectedPokemonSpecies?.identifier}`,\n                    })),\n                  });\n                }\n\n                return acc;\n              }, []),\n          ];\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<dd-dropdown-link\n  [sections]=\"sections\"\n  [placeholder]=\"\n    this.currentVersionGroupName\n      ? this.currentVersionGroupName\n      : 'Select Pokédex'\n  \"\n  [origin]=\"origin\"\n></dd-dropdown-link>\n"
    },
    {
      "name": "PokedexTabComponent",
      "id": "component-PokedexTabComponent-62d217ccf221c36a3d7c71f083410691d4f382a6c0ddae484db88c6fc47cf33c514525fbafbc3e2e55478c55369d7227674a06a0e416268b975478bc994d0d56",
      "file": "src/app/features/pokedex/components/pokedex-tab/pokedex-tab.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokedex-tab",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokedex-tab.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "listView",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "pokedex",
          "defaultValue": "{} as Tables<'pokedexes'>",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "Tables<pokedexes>",
          "decorators": []
        },
        {
          "name": "versionGroupIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "pokemonEntries",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "router",
          "defaultValue": "inject(Router)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Router",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [123]
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onPokemonClick",
          "args": [
            {
              "name": "pokemon",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "pokemon",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex-tab',\n  templateUrl: './pokedex-tab.component.html',\n})\nexport class PokedexTabComponent {\n  @Input() pokedex: Tables<'pokedexes'> = {} as Tables<'pokedexes'>;\n  @Input() versionGroupIdentifier: string = '';\n  @Input() listView: boolean = false;\n  pokemonEntries: any = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private router: Router = inject(Router);\n\n  ngOnInit() {\n    this.supabase\n      .getPokemonSpeciesByPokedexId(this.pokedex.id)\n      .subscribe((data: any) => {\n        this.pokemonEntries = data;\n      });\n  }\n\n  onPokemonClick(pokemon: any) {\n    let pokemonSpeciesIdentifier = pokemon.species_id.identifier;\n    this.router.navigate([\n      'pokedex',\n      this.versionGroupIdentifier,\n      pokemonSpeciesIdentifier,\n    ]);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"flex flex-col rounded-b py-2 w-full bg-zinc-800\">\n  <div *ngIf=\"listView; else gridView\" class=\"flex flex-col w-full\">\n    <dd-pokedex-list-view-item\n      *ngFor=\"let pokemon of pokemonEntries; index as index\"\n      [pokemon]=\"pokemon\"\n      (click)=\"onPokemonClick(pokemon)\"\n      class=\"\"\n      [ngClass]=\"{\n        'border-t border-zinc-700': index === 0\n      }\"\n    ></dd-pokedex-list-view-item>\n  </div>\n  <ng-template #gridView>\n    <div class=\"flex flex-wrap gap-2 justify-center p-2\">\n      <dd-pokedex-grid-view-item\n        *ngFor=\"let pokemon of pokemonEntries\"\n        [pokemon]=\"pokemon\"\n        (click)=\"onPokemonClick(pokemon)\"\n      ></dd-pokedex-grid-view-item>\n    </div>\n  </ng-template>\n</div>\n"
    },
    {
      "name": "PokemonComponent",
      "id": "component-PokemonComponent-1b476f6b57c7da3cec45f5976f8d576ee8c2fca9f364c39823038e0573c2724ee8bc9edc7feae7753db5b165b61aa6a8025a9e2a5c8b8d2dc82d66699298da72",
      "file": "src/app/features/pokemon/pages/pokemon/pokemon.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [123]
        },
        {
          "name": "pokemonForms",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<pokemon>[]",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "pokemonSpecies",
          "defaultValue": "{} as Tables<'pokemon_species'>",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<pokemon_species>",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "route",
          "defaultValue": "inject(ActivatedRoute)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ActivatedRoute",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [123]
        },
        {
          "name": "selectedForm",
          "defaultValue": "{} as Tables<'pokemon'>",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<pokemon>",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "selectedVersionGroup",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [123]
        },
        {
          "name": "versionGroupIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "versions",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<versions>[]",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "handleNewSelectedForm",
          "args": [
            {
              "name": "form",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "form",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleSelectedVersionGroup",
          "args": [
            {
              "name": "versionGroup",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "versionGroup",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleVersions",
          "args": [
            {
              "name": "versions",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "versions",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { versions } from 'process';\nimport { map, switchMap, tap, forkJoin, Subject, takeUntil } from 'rxjs';\nimport { DropdownLinkSection, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\ninterface DropdownLinkOption {\n  name: string;\n  path: string;\n}\n\n@Component({\n  selector: 'dd-pokemon',\n  templateUrl: './pokemon.component.html',\n})\nexport class PokemonComponent implements OnInit {\n  pokemonForms: Tables<'pokemon'>[] = [];\n  selectedForm: Tables<'pokemon'> = {} as Tables<'pokemon'>;\n  pokemonSpecies: Tables<'pokemon_species'> = {} as Tables<'pokemon_species'>;\n\n  versionGroupIdentifier: string = '';\n  selectedVersionGroup: any = '';\n  versions: Tables<'versions'>[] = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route: ActivatedRoute = inject(ActivatedRoute);\n  private destroy$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(\n        switchMap((params) => {\n          const pokemonIdentifier = params['pokemon'];\n          this.versionGroupIdentifier = params['version-group'];\n          return this.supabase.getPokemonSpeciesByIdentifier(pokemonIdentifier);\n        }),\n        tap((pokemonSpecies) => {\n          this.pokemonSpecies = pokemonSpecies;\n        }),\n        switchMap((pokemonSpecies) => {\n          return this.supabase.getPokemonBySpeciesId(pokemonSpecies.id);\n        }),\n        tap((pokemon) => {\n          this.pokemonForms = pokemon;\n          this.selectedForm = pokemon[0];\n        })\n      )\n      .subscribe(() => {});\n  }\n\n  handleNewSelectedForm(form: any) {\n    this.selectedForm = form;\n  }\n\n  handleVersions(versions: any) {\n    this.versions = versions;\n  }\n\n  handleSelectedVersionGroup(versionGroup: any) {\n    this.selectedVersionGroup = versionGroup;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div class=\"max-w-screen-lg bg-zinc-950 rounded p-4 w-full min-h-[500px]\">\n    <ng-container *ngIf=\"pokemonSpecies && pokemonForms; else loading\">\n      <div class=\"flex flex-col items-center w-full\">\n        <div class=\"flex flex-col items-center w-full\">\n          <dd-pokemon-navigation\n            [pokedexGeneration]=\"versionGroupIdentifier\"\n            [pokemonSpecies]=\"pokemonSpecies\"\n            (selectedVersionGroup)=\"handleSelectedVersionGroup($event)\"\n            (versions)=\"handleVersions($event)\"\n            class=\"w-full\"\n          ></dd-pokemon-navigation>\n          <div class=\"flex flex-col gap-3 w-full\">\n            <section class=\"flex flex-col sm:flex-row gap-3 w-full\">\n              <dd-pokemon-summary\n                [selectedForm]=\"selectedForm\"\n                [pokemonSpecies]=\"pokemonSpecies\"\n                class=\"h-full w-full sm:w-1/2\"\n              >\n              </dd-pokemon-summary>\n              <dd-pokemon-data\n                [pokemon]=\"selectedForm\"\n                [pokemon_species]=\"pokemonSpecies\"\n                class=\"h-full w-full sm:w-1/2\"\n              ></dd-pokemon-data>\n            </section>\n            <section class=\"w-full\">\n              <dd-pokemon-forms\n                *ngIf=\"pokemonForms.length > 1\"\n                (newSelectedForm)=\"handleNewSelectedForm($event)\"\n                [pokemonForms]=\"pokemonForms\"\n                [selectedForm]=\"selectedForm\"\n              ></dd-pokemon-forms>\n            </section>\n            <section class=\"flex flex-col sm:flex-row gap-3 w-full\">\n              <dd-pokemon-stats\n                *ngIf=\"selectedForm.id\"\n                [pokemonId]=\"selectedForm.id\"\n                class=\"h-full w-full sm:w-1/2\"\n              ></dd-pokemon-stats>\n              <dd-pokemon-descriptions\n                *ngIf=\"pokemonSpecies.id\"\n                [pokemonSpeciesId]=\"pokemonSpecies.id\"\n                [versions]=\"versions\"\n                class=\"h-full w-full sm:w-1/2\"\n              ></dd-pokemon-descriptions>\n            </section>\n            <section class=\"flex flex-col gap-3 w-full\">\n              <dd-pokemon-moves\n                *ngIf=\"selectedForm.id\"\n                [pokemonId]=\"selectedForm.id\"\n                [versionGroupId]=\"selectedVersionGroup.id\"\n                class=\"h-full w-full\"\n              ></dd-pokemon-moves>\n            </section>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-template #loading>\n      <div class=\"w-full\">\n        <dd-spinner></dd-spinner>\n      </div>\n    </ng-template>\n  </div>\n</div>\n"
    },
    {
      "name": "PokemonDataComponent",
      "id": "component-PokemonDataComponent-0b6f86f602acc82e6397088ea26063249335f8c55756f619f7a098d63744747dca2dd735283f46db0aa8e8b53ce85ba23217f5a84eab8103d3d36dd78d036adc",
      "file": "src/app/features/pokemon/components/pokemon-data/pokemon-data.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-data",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-data.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "any",
          "decorators": []
        },
        {
          "name": "pokemon_species",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [123]
        },
        {
          "name": "pokemonAbilities",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnChanges, inject } from '@angular/core';\nimport { Subject, pipe, takeUntil } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-data',\n  templateUrl: './pokemon-data.component.html',\n})\nexport class PokemonDataComponent implements OnChanges {\n  @Input() pokemon?: any;\n  @Input() pokemon_species?: any;\n\n  pokemonAbilities: any = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    if (!this.pokemon.id) return;\n    this.supabase\n      .getPokemonAbilitiesByPokemonId(this.pokemon.id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.pokemonAbilities = data;\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div\n  *ngIf=\"pokemon && pokemon_species\"\n  class=\"flex flex-col rounded w-full bg-byzantium border border-zinc-800\"\n>\n  <dd-container-header\n    [title]=\"'Pokédex Data'\"\n    class=\"text-sm\"\n  ></dd-container-header>\n  <table class=\"table-auto w-full bg-zinc-800 rounded-b text-sm\">\n    <thead class=\"sr-only\">\n      <tr>\n        <th>Data</th>\n        <th>Value(s)</th>\n      </tr>\n    </thead>\n    <tr class=\"border-b border-y-zinc-700\">\n      <td class=\"w-1/4 p-2 font-semibold\">Classification:</td>\n      <td class=\"p-2\">\n        {{ pokemon_species.genus }}\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-zinc-700\">\n      <td class=\"w-1/4 p-2 font-semibold\">Abilities:</td>\n      <td class=\"p-2\">\n        <ul>\n          <li\n            *ngFor=\"let pokemonAbility of pokemonAbilities\"\n            [ngClass]=\"pokemonAbility.is_hidden ? 'italic' : ''\"\n          >\n            {{ pokemonAbility.ability_id.name }}\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-zinc-700\">\n      <td class=\"w-1/4 p-2 font-semibold\">Pokédex №:</td>\n      <td class=\"p-2\">\n        <ul>\n          <li>#{{ pokemon_species.id }} - National</li>\n        </ul>\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-zinc-700\">\n      <td class=\"w-1/4 p-2 font-semibold\">Height:</td>\n      <td class=\"p-2\">\n        {{ pokemon.height | decimetersToFeetAndInches }}\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-zinc-700\">\n      <td class=\"w-1/4 p-2 font-semibold\">Weight:</td>\n      <td class=\"p-2\">\n        {{ pokemon.weight | decimetersToPounds }}\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-zinc-700\">\n      <td class=\"w-1/4 p-2 font-semibold\">Gender Ratio:</td>\n      <td class=\"p-2\">\n        <dd-pokemon-gender-ratio\n          [rate]=\"pokemon_species.gender_rate\"\n        ></dd-pokemon-gender-ratio>\n      </td>\n    </tr>\n  </table>\n</div>\n"
    },
    {
      "name": "PokemonDescriptionsComponent",
      "id": "component-PokemonDescriptionsComponent-82f0d899492f224d050e1d06f061c4543b532aefc51197e9d1e62ee8c58db0f4962ab1a3f245ea5b0d42627202fa178452ab38535ecd387c35621e8e0cde4318",
      "file": "src/app/features/pokemon/components/pokemon-descriptions/pokemon-descriptions.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-descriptions",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-descriptions.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemonSpeciesId",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "number",
          "decorators": []
        },
        {
          "name": "versions",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "Tables<versions>[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "descriptions",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tables<pokemon_species_flavor_text>[]",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [123]
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getVersionName",
          "args": [
            {
              "name": "versionId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "versionId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, Input, OnChanges } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-descriptions',\n  templateUrl: './pokemon-descriptions.component.html',\n})\nexport class PokemonDescriptionsComponent implements OnChanges {\n  @Input() pokemonSpeciesId: number = 0;\n  @Input() versions: Tables<'versions'>[] = [];\n\n  descriptions: Tables<'pokemon_species_flavor_text'>[] = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    const versionIds = this.versions.map((version) => version.id);\n\n    this.supabase\n      .getPokemonSpeciesFlavorTextWithVersionIdBySpeciesId(\n        this.pokemonSpeciesId,\n        versionIds\n      )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((descriptions) => {\n        this.descriptions = descriptions;\n      });\n  }\n\n  getVersionName(versionId: number): string {\n    const version = this.versions.find((version) => version.id === versionId);\n    return version ? version.name : '';\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div class=\"flex flex-col rounded bg-byzantium w-full\">\n  <dd-container-header\n    [title]=\"'Pokédex Descriptions'\"\n    class=\"text-sm\"\n  ></dd-container-header>\n  <table\n    *ngIf=\"descriptions.length > 0 && versions; else noDescriptions\"\n    class=\"table-auto w-full bg-zinc-800 rounded-b text-sm\"\n  >\n    <thead class=\"sr-only\">\n      <tr>\n        <th>Version</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tr\n      *ngFor=\"let description of descriptions; let i = index\"\n      [ngClass]=\"{\n        'border-b border-y-zinc-700': i !== descriptions.length - 1\n      }\"\n    >\n      <td class=\"w-1/4 p-2 font-semibold\">\n        {{ getVersionName(description.version_id) }}\n      </td>\n      <td class=\"p-2\">\n        {{ description.flavor_text }}\n      </td>\n    </tr>\n  </table>\n  <ng-template #noDescriptions>\n    <div\n      class=\"flex items-center justify-center w-full h-full bg-zinc-800 rounded-b\"\n    >\n      <span class=\"text-sm p-4 text-center\">\n        No Pokédex descriptions are available for this Pokémon for any Pokédex\n        in this version group.\n      </span>\n    </div>\n  </ng-template>\n</div>\n"
    },
    {
      "name": "PokemonFormsComponent",
      "id": "component-PokemonFormsComponent-4ea9520b23eace4e563b533e5edfbaad7f52ceb50d839a6d6ef0da299f7bfc2ef580565d05ae1604b88d55d8186c0bbeb4fc9f50bfc0449354d22ddc0c6dd857",
      "file": "src/app/features/pokemon/components/pokemon-forms/pokemon-forms.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-forms",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-forms.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemonForms",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "any",
          "decorators": []
        },
        {
          "name": "selectedForm",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "newSelectedForm",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getFormImage",
          "args": [
            {
              "name": "id",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "selectForm",
          "args": [
            {
              "name": "form",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "form",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, inject, Input, Output } from '@angular/core';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-forms',\n  templateUrl: './pokemon-forms.component.html',\n})\nexport class PokemonFormsComponent {\n  @Input() pokemonForms: any;\n  @Input() selectedForm: any;\n\n  @Output() newSelectedForm = new EventEmitter<any>();\n\n  private supabase: SupabaseService = inject(SupabaseService);\n\n  getFormImage(id: any) {\n    return this.supabase.storage\n      .from('pokemon')\n      .getPublicUrl('home-icons/' + id + '.png').data.publicUrl;\n  }\n\n  selectForm(form: any) {\n    if (form.id === this.selectedForm.id) {\n      return;\n    } else {\n      this.newSelectedForm.emit(form);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"rounded w-full bg-byzantium\">\n  <dd-container-header\n    [title]=\"'Pokémon Forms'\"\n    class=\"text-sm\"\n  ></dd-container-header>\n  <div\n    class=\"flex flex-row gap-2 justify-start items-center bg-zinc-800 p-2 rounded-b overflow-x-scroll pb-4\"\n  >\n    <div\n      *ngFor=\"let pokemonForm of pokemonForms\"\n      class=\"flex flex-col flex-shrink-0 justify-center items-center h-36 w-36 gap-1 cursor-pointer rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700\"\n      (click)=\"selectForm(pokemonForm)\"\n    >\n      <img [src]=\"getFormImage(pokemonForm.id)\" class=\"object-contain h-24\" />\n      <span class=\"text-center text-xs text-clip\">{{\n        pokemonForm.form_name ? pokemonForm.form_name : pokemonForm.name\n      }}</span>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "PokemonGenderRatioComponent",
      "id": "component-PokemonGenderRatioComponent-10864584f3c7f4be89203ba33d58cc88b3646c8b30c0655b90389768205b33aa46c2a5f9016690074cb195760ea98808b9cfb01c24916a95f2ed8515876f70ed",
      "file": "src/app/features/pokemon/components/pokemon-gender-ratio/pokemon-gender-ratio.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-gender-ratio",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-gender-ratio.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "rate",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getGenderRatioBarClass",
          "args": [
            {
              "name": "rate",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "\"bg-genderless rounded-r\" | \"bg-female rounded-r\" | \"bg-male rounded-r\" | \"bg-male\"",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "rate",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getGenderRatioBarStyle",
          "args": [
            {
              "name": "rate",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ width: string; }",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "rate",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-pokemon-gender-ratio',\n  templateUrl: './pokemon-gender-ratio.component.html',\n})\nexport class PokemonGenderRatioComponent {\n  @Input() rate: number = 0;\n\n  getGenderRatioBarClass(rate: number) {\n    if (rate === -1) {\n      return 'bg-genderless rounded-r';\n    } else if (rate === 8) {\n      return 'bg-female rounded-r';\n    } else if (rate === 0) {\n      return 'bg-male rounded-r';\n    } else {\n      return 'bg-male';\n    }\n  }\n\n  getGenderRatioBarStyle(rate: number) {\n    if (rate === -1) {\n      return { width: '100%' };\n    } else if (rate === 0) {\n      return { width: '100%' };\n    } else if (rate === 8) {\n      return { width: '100%' };\n    } else {\n      return { width: 100 - rate * 12.5 + '%' };\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"flex bg-female w-full rounded h-5\">\n  <div\n    class=\"rounded-l\"\n    data-testid=\"gender-ratio-bar\"\n    [ngClass]=\"getGenderRatioBarClass(rate)\"\n    [ngStyle]=\"getGenderRatioBarStyle(rate)\"\n  ></div>\n</div>\n"
    },
    {
      "name": "PokemonMovesComponent",
      "id": "component-PokemonMovesComponent-2f3aee6b27f56e4c7c42681abf3b4380f0494c552c1058a25fe38beff5adf4bd5b52e83edbc0c6334a65a22ea2511aaf63efc65a1d9b86bd14e16060a1070c22",
      "file": "src/app/features/pokemon/components/pokemon-moves/pokemon-moves.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-moves",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-moves.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemonId",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "number",
          "decorators": []
        },
        {
          "name": "versionGroupId",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [123]
        },
        {
          "name": "moveGroups",
          "defaultValue": "[] as any",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "selectedMoveGroup",
          "defaultValue": "[] as any",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-moves',\n  templateUrl: './pokemon-moves.component.html',\n})\nexport class PokemonMovesComponent implements OnChanges, OnDestroy {\n  @Input() pokemonId: number = 0;\n  @Input() versionGroupId: number = 0;\n\n  moveGroups: any = [] as any;\n  selectedMoveGroup: any = [] as any;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges() {\n    if (this.pokemonId === 0 || this.versionGroupId === 0) return;\n    this.supabase\n      .getPokemonMovesByPokemonId(this.pokemonId, this.versionGroupId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.moveGroups = Object.values(\n          data.reduce((acc: any, move: any) => {\n            const key = move.pokemon_move_method_id.id;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(move);\n            return acc;\n          }, {})\n        );\n        this.selectedMoveGroup = this.moveGroups[0];\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges", "OnDestroy"],
      "templateData": "<div class=\"flex flex-col rounded w-full bg-byzantium\">\n  <dd-container-header\n    [title]=\"'Learnable Moves'\"\n    class=\"text-sm\"\n  ></dd-container-header>\n  <div *ngIf=\"moveGroups.length > 0\">\n    <ul class=\"flex text-xs text-center overflow-x-scroll pt-2 bg-zinc-900\">\n      <li class=\"me-2\" *ngFor=\"let moveGroup of moveGroups\">\n        <button\n          (click)=\"selectedMoveGroup = moveGroup\"\n          class=\"inline-block whitespace-nowrap p-4 rounded-t hover:bg-zinc-800\"\n          [ngClass]=\"{\n            'bg-zinc-800 cursor-default': selectedMoveGroup === moveGroup,\n            'bg-zinc-900': selectedMoveGroup !== moveGroup\n          }\"\n          aria-current=\"page\"\n        >\n          <span>{{ moveGroup[0].pokemon_move_method_id.name }}</span>\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngFor=\"let moveGroup of moveGroups\">\n      <dd-pokemon-move-table\n        *ngIf=\"moveGroup === selectedMoveGroup\"\n        [moveGroup]=\"moveGroup\"\n      >\n      </dd-pokemon-move-table>\n    </ng-container>\n  </div>\n</div>\n"
    },
    {
      "name": "PokemonMoveTableComponent",
      "id": "component-PokemonMoveTableComponent-af0fa6fcfe5a6390dd456e3ba48da7171258010959dd9cc5fa7fb8a81c1e559ec4701013a79d928334057738b9a7c0d65faa21a318f9be3b952eca68f471f899",
      "file": "src/app/features/pokemon/components/pokemon-move-table/pokemon-move-table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-move-table",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-move-table.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "moveGroup",
          "defaultValue": "[] as any",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-pokemon-move-table',\n  templateUrl: './pokemon-move-table.component.html',\n})\nexport class PokemonMoveTableComponent {\n  @Input() moveGroup: any = [] as any;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<table class=\"table-auto w-full bg-zinc-800 rounded-b text-sm\">\n  <thead>\n    <tr class=\"text-left\">\n      <th class=\"p-2\">Level</th>\n      <th class=\"p-2\">Move</th>\n      <th class=\"p-2\">Type</th>\n      <th class=\"p-2\">Power</th>\n      <th class=\"p-2\">Accuracy</th>\n    </tr>\n  </thead>\n  <tr\n    *ngFor=\"let move of moveGroup; index as i\"\n    class=\"border-b border-y-zinc-700\"\n  >\n    <td class=\"p-2\">{{ move.level }}</td>\n    <td class=\"p-2\">{{ move.move_id.name }}</td>\n    <td class=\"p-2\">\n      <div class=\"h-6 w-16 text-xs\">\n        <dd-type-box [type]=\"move.move_id.type_id\"></dd-type-box>\n      </div>\n    </td>\n    <td class=\"p-2\">{{ move.move_id.power ? move.move_id.power : \"—\" }}</td>\n    <td class=\"p-2\">\n      {{ move.move_id.accuracy ? move.move_id.accuracy : \"—\" }}\n    </td>\n  </tr>\n</table>\n"
    },
    {
      "name": "PokemonNavigationComponent",
      "id": "component-PokemonNavigationComponent-b534da80a1a7db45c84bdde971ed5321ba7f3295d3518f54adaa7fa477e9f088c618317178bf2a326aed47a47d9deedac2bf85143aee6e90b27839dc53c75205",
      "file": "src/app/features/pokemon/components/pokemon-navigation/pokemon-navigation.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-navigation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-navigation.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokedexGeneration",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "pokemonSpecies",
          "defaultValue": "{} as Tables<'pokemon_species'>",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "Tables<pokemon_species>",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "selectedVersionGroup",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "EventEmitter"
        },
        {
          "name": "versions",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [123]
        },
        {
          "name": "nextPokemonIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "nextPokemonImageUrl",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "pokemonDropdownOptions",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DropdownLinkSection[]",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "previousPokemonIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "previousPokemonImageUrl",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "randomPokemonIdentifier",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "selectedVersionGroupName",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getPokemonDropdownOptions",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 123,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { takeUntil, tap, switchMap, forkJoin, map, Subject } from 'rxjs';\nimport { DropdownLinkSection, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-navigation',\n  templateUrl: './pokemon-navigation.component.html',\n})\nexport class PokemonNavigationComponent implements OnChanges {\n  @Input() pokedexGeneration = '';\n  @Input() pokemonSpecies: Tables<'pokemon_species'> =\n    {} as Tables<'pokemon_species'>;\n\n  @Output() selectedVersionGroup = new EventEmitter<any>();\n  @Output() versions = new EventEmitter<any>();\n\n  selectedVersionGroupName: string = '';\n  pokemonDropdownOptions: DropdownLinkSection[] = [];\n  randomPokemonIdentifier: string = '';\n  previousPokemonImageUrl: string = '';\n  previousPokemonIdentifier: string = '';\n  nextPokemonImageUrl: string = '';\n  nextPokemonIdentifier: string = '';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    this.getPokemonDropdownOptions();\n  }\n  getPokemonDropdownOptions() {\n    let availablePokedexes: Tables<'pokedexes'>[] = [];\n    this.supabase\n      .getVersionGroupByIdentifier(this.pokedexGeneration)\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((versionGroup) => {\n          this.selectedVersionGroup.emit(versionGroup);\n          this.selectedVersionGroupName = versionGroup.name;\n          this.supabase\n            .getVersionsByVersionGroupId(versionGroup.id)\n            .subscribe((versions) => {\n              this.versions.emit(versions);\n            });\n        }),\n        switchMap((versionGroup) => {\n          return this.supabase.getPokedexesByVersionGroupId(versionGroup.id);\n        }),\n        switchMap((pokedexes) => {\n          availablePokedexes = pokedexes;\n          return forkJoin(\n            pokedexes.map((pokedex: any) =>\n              this.supabase.getPokemonSpeciesByPokedexId(pokedex.id)\n            )\n          );\n        }),\n        map((pokemonArray: any) => {\n          const combined = pokemonArray.flat();\n          this.randomPokemonIdentifier =\n            combined[\n              Math.floor(Math.random() * combined.length)\n            ]?.species_id.identifier;\n\n          const currentPokemonIndex = combined.findIndex(\n            (pokemon: any) =>\n              pokemon.species_id.identifier === this.pokemonSpecies.identifier\n          );\n\n          const previousPokemon = combined[currentPokemonIndex - 1]?.species_id;\n\n          if (previousPokemon) {\n            this.previousPokemonIdentifier = previousPokemon.identifier;\n            this.previousPokemonImageUrl = this.supabase.storage\n              .from('pokemon')\n              .getPublicUrl(\n                'home-previews/' + previousPokemon.id + '.png'\n              ).data.publicUrl;\n          }\n\n          const nextPokemon = combined[currentPokemonIndex + 1]?.species_id;\n\n          if (nextPokemon) {\n            this.nextPokemonIdentifier = nextPokemon.identifier;\n            this.nextPokemonImageUrl = this.supabase.storage\n              .from('pokemon')\n              .getPublicUrl(\n                'home-previews/' + nextPokemon.id + '.png'\n              ).data.publicUrl;\n          }\n\n          return availablePokedexes.map((pokedex: any, index: number) => {\n            return {\n              name: pokedex.name,\n              options: pokemonArray[index].map(\n                (pokemon: any, index: number) => {\n                  return {\n                    name: `№ ${index + 1} ` + pokemon.species_id.name,\n                    path:\n                      '/pokedex/' +\n                      this.pokedexGeneration +\n                      '/' +\n                      pokemon.species_id.identifier,\n                  };\n                }\n              ),\n            };\n          });\n        })\n      )\n      .subscribe((data) => {\n        this.pokemonDropdownOptions = data;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<section class=\"flex justify-between items-center w-full mb-2\">\n  <div class=\"flex flex-col-reverse gap-2 sm:flex-row sm:items-center\">\n    <a\n      *ngIf=\"previousPokemonIdentifier && previousPokemonImageUrl\"\n      [routerLink]=\"[\n        '/pokedex/' + pokedexGeneration + '/' + previousPokemonIdentifier\n      ]\"\n      attr.aria-label=\"Go To Previous Pokémon In Pokédex: {{\n        previousPokemonIdentifier\n      }}\"\n      class=\"flex justify-evenly items-center h-10 w-16 rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700 cursor-pointer\"\n    >\n      <ng-icon [name]=\"'heroChevronLeftSolid'\"></ng-icon>\n      <img\n        class=\"transition-all duration-300 ease-in-out\"\n        [defaultImage]=\"'assets/images/question-icon.png'\"\n        [lazyLoad]=\"previousPokemonImageUrl\"\n        height=\"20\"\n        width=\"20\"\n        alt=\"\"\n      />\n    </a>\n    <a\n      class=\"flex justify-center items-center w-10 h-10 rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700 cursor-pointer\"\n      [routerLink]=\"['/pokedex/' + pokedexGeneration]\"\n      attr.aria-label=\"Go To Pokédex: {{ pokedexGeneration }}\"\n      ><ng-icon [name]=\"'heroSwatchSolid'\"></ng-icon\n    ></a>\n  </div>\n  <div\n    class=\"flex flex-col sm:flex-row items-center gap-3\"\n    *ngIf=\"this.pokemonSpecies.id\"\n  >\n    <dd-pokedex-select-dropdown\n      [selectedPokemonSpecies]=\"this.pokemonSpecies\"\n      [currentVersionGroupName]=\"this.selectedVersionGroupName\"\n      [origin]=\"'right'\"\n    ></dd-pokedex-select-dropdown>\n    <dd-dropdown-link\n      [placeholder]=\"this.pokemonSpecies.name ?? 'Select Pokémon'\"\n      [sections]=\"pokemonDropdownOptions\"\n      [origin]=\"'left'\"\n    ></dd-dropdown-link>\n  </div>\n  <div class=\"flex flex-col gap-2 sm:flex-row sm:items-center items-end\">\n    <a\n      class=\"flex justify-center items-center w-10 h-10 rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700 cursor-pointer\"\n      [routerLink]=\"[\n        '/pokedex/' + pokedexGeneration + '/' + randomPokemonIdentifier\n      ]\"\n      aria-label=\"Go To A Random Pokémon In The Pokédex\"\n      ><ng-icon [name]=\"'bootstrapDice6Fill'\"></ng-icon\n    ></a>\n    <a\n      *ngIf=\"nextPokemonIdentifier && nextPokemonImageUrl\"\n      [routerLink]=\"[\n        '/pokedex/' + pokedexGeneration + '/' + nextPokemonIdentifier\n      ]\"\n      attr.aria-label=\"Go To Next Pokémon In Pokédex: {{\n        nextPokemonIdentifier\n      }}\"\n      class=\"flex justify-evenly items-center h-10 w-16 rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700 cursor-pointer\"\n    >\n      <img\n        class=\"transition-all duration-300 ease-in-out\"\n        [defaultImage]=\"'assets/images/question-icon.png'\"\n        [lazyLoad]=\"nextPokemonImageUrl\"\n        height=\"20\"\n        width=\"20\"\n        alt=\"\"\n      />\n      <ng-icon [name]=\"'heroChevronRightSolid'\"></ng-icon>\n    </a>\n  </div>\n</section>\n"
    },
    {
      "name": "PokemonStatsComponent",
      "id": "component-PokemonStatsComponent-0a1216086a0842de6657557f061e08889fce9055cf76e5e3c933c66d87082001175ec636e118f95c422b2dc3493b3a922c409cd1e8a926527b0092af17f26397",
      "file": "src/app/features/pokemon/components/pokemon-stats/pokemon-stats.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-stats",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-stats.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemonId",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22,
          "modifierKind": [123]
        },
        {
          "name": "stats",
          "defaultValue": "[] as any",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [123]
        },
        {
          "name": "total",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "getProgressBarClass",
          "args": [
            {
              "name": "stat",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "\"bg-good_stat\" | \"bg-medium_stat\" | \"bg-bad_stat\"",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "stat",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getProgressBarStyle",
          "args": [
            {
              "name": "base_stat",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ width: string; }",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "base_stat",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-stats',\n  templateUrl: './pokemon-stats.component.html',\n})\nexport class PokemonStatsComponent implements OnChanges, OnDestroy {\n  @Input() pokemonId: number = 0;\n  stats: any = [] as any;\n  total: number = 0;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges() {\n    this.supabase\n      .getPokemonStatsByPokemonId(this.pokemonId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.stats = data;\n        this.total = data.reduce(\n          (total: number, stat: any) => total + stat.base_stat,\n          0\n        );\n      });\n  }\n\n  getProgressBarClass(stat: number) {\n    if (stat >= 90) {\n      return 'bg-good_stat';\n    } else if (stat >= 60) {\n      return 'bg-medium_stat';\n    } else {\n      return 'bg-bad_stat';\n    }\n  }\n\n  getProgressBarStyle(base_stat: number) {\n    return { width: (base_stat / 255) * 100 + '%' };\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges", "OnDestroy"],
      "templateData": "<div class=\"flex flex-col rounded w-full bg-byzantium\">\n  <dd-container-header\n    [title]=\"'Pokémon Base Stats'\"\n    class=\"text-sm\"\n  ></dd-container-header>\n  <table class=\"table-auto w-full bg-zinc-800 rounded-b text-sm\">\n    <thead class=\"sr-only\">\n      <tr>\n        <th>Stat</th>\n        <th>Base</th>\n        <th>Progress</th>\n      </tr>\n    </thead>\n    <tr\n      *ngFor=\"let stat of stats; index as i\"\n      class=\"border-b border-y-zinc-700\"\n    >\n      <td class=\"p-2 pr-0 w-2/4 font-semibold\">\n        {{ stat.stat_id.name }}\n      </td>\n      <td class=\"p-2 text-right w-1/4\">\n        {{ stat.base_stat }}\n      </td>\n      <td class=\"p-2\">\n        <div class=\"w-full h-5 rounded bg-zinc-600\">\n          <div\n            class=\"rounded-l h-full flex justify-center items-center\"\n            [ngClass]=\"getProgressBarClass(stat.base_stat)\"\n            [ngStyle]=\"getProgressBarStyle(stat.base_stat)\"\n          ></div>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"p-2 font-semibold text-sm text-left\">Total</td>\n      <td class=\"p-2 font-semibold text-sm text-right\">{{ total }}</td>\n    </tr>\n  </table>\n</div>\n"
    },
    {
      "name": "PokemonSummaryComponent",
      "id": "component-PokemonSummaryComponent-cc6125b7c2e18a8318873728b136daee80b19f3db4a38c4997baa832146fa0e143d3f9edd356b47704c7779562b86aa74aaf694044c79a0cc7cd6865e41950e8",
      "file": "src/app/features/pokemon/components/pokemon-summary/pokemon-summary.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-pokemon-summary",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./pokemon-summary.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "pokemonSpecies",
          "defaultValue": "{} as Tables<'pokemon_species'>",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "Tables<pokemon_species>",
          "decorators": []
        },
        {
          "name": "selectedForm",
          "defaultValue": "{} as Tables<'pokemon'>",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "Tables<pokemon>",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [123]
        },
        {
          "name": "female",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "imageUrl",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "pokemonTypes",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "shiny",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "supabase",
          "defaultValue": "inject(SupabaseService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SupabaseService",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "genderToggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 74,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getImageUrl",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getTypeBackgroundColor",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 52,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 79,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "shinyToggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { takeUntil, tap, switchMap, forkJoin, map, Subject } from 'rxjs';\nimport { DropdownLinkSection, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-summary',\n  templateUrl: './pokemon-summary.component.html',\n})\nexport class PokemonSummaryComponent implements OnChanges {\n  @Input() selectedForm: Tables<'pokemon'> = {} as Tables<'pokemon'>;\n  @Input() pokemonSpecies: Tables<'pokemon_species'> =\n    {} as Tables<'pokemon_species'>;\n  pokemonTypes: any;\n  imageUrl: string = '';\n  shiny: boolean = false;\n  female: boolean = false;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    if (!this.selectedForm.id) return;\n    this.supabase\n      .getPokemonTypesByPokemonId(this.selectedForm.id)\n      .subscribe((data) => {\n        this.pokemonTypes = data;\n      });\n    this.getImageUrl();\n  }\n\n  getImageUrl() {\n    let url = 'home-previews/';\n\n    this.shiny ? (url += 'shiny/') : null;\n    this.female ? (url += 'female/') : null;\n    url += this.selectedForm.id + '.png';\n\n    this.imageUrl = this.supabase.storage\n      .from('pokemon')\n      .getPublicUrl(url).data.publicUrl;\n  }\n\n  getTypeBackgroundColor() {\n    if (this.pokemonTypes && this.pokemonTypes.length > 1) {\n      return (\n        'linear-gradient(to bottom right, #' +\n        this.pokemonTypes[0].type_id.type_color +\n        ',' +\n        '#' +\n        this.pokemonTypes[1].type_id.type_color +\n        ')'\n      );\n    } else if (this.pokemonTypes && this.pokemonTypes.length == 1) {\n      return '#' + this.pokemonTypes[0].type_id.type_color;\n    } else {\n      return 'linear-gradient(to bottom right, #27272a, #27272a)';\n    }\n  }\n\n  shinyToggle() {\n    this.shiny = !this.shiny;\n    this.getImageUrl();\n  }\n\n  genderToggle() {\n    this.female = !this.female;\n    this.getImageUrl();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div\n  class=\"text-center border border-zinc-800 h-full w-full rounded flex flex-col justify-between\"\n>\n  <div class=\"relative h-full w-full\">\n    <button\n      class=\"absolute top-2 left-2 flex justify-center items-center w-10 h-10 rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700 cursor-pointer\"\n      (click)=\"shinyToggle()\"\n    >\n      <ng-icon\n        [name]=\"'heroSparklesSolid'\"\n        [ngClass]=\"{ 'text-orange-300': shiny }\"\n        aria-labelledby=\"shiny-button-label\"\n      ></ng-icon>\n      <div class=\"sr-only\" id=\"shiny-button-label\">\n        Toggle Pokémon's Shiny Sprite\n      </div>\n    </button>\n    <button\n      *ngIf=\"pokemonSpecies.has_gender_differences\"\n      class=\"absolute top-14 left-2 flex justify-center items-center w-10 h-10 rounded bg-zinc-900 hover:bg-zinc-800 border border-zinc-700 cursor-pointer\"\n      (click)=\"genderToggle()\"\n    >\n      <ng-icon\n        [name]=\"'bootstrapGenderFemale'\"\n        [ngClass]=\"{ 'text-pink-400': female }\"\n        aria-labelledby=\"gender-button-label\"\n      ></ng-icon>\n      <div class=\"sr-only\" id=\"gender-button-label\">\n        Toggle Pokémon's Gender, When It Affects Appearance\n      </div>\n    </button>\n    <div\n      class=\"w-full h-full flex justify-center items-center\"\n      [style.background]=\"getTypeBackgroundColor()\"\n    >\n      <img\n        src=\"{{ this.imageUrl }}\"\n        class=\"w-full h-full object-contain min-w-[300px] max-w-[390px] rounded-t\"\n      />\n    </div>\n  </div>\n  <div>\n    <div class=\"bg-byzantium border-t border-zinc-800\" style=\"height: 50px\">\n      <h2 class=\"p-2\">\n        <span class=\"font-bold text-xl\"> {{ selectedForm.name }}</span>\n      </h2>\n    </div>\n    <div\n      class=\"flex justify-between items-center px-2 bg-zinc-800\"\n      *ngIf=\"pokemonTypes && pokemonTypes.length > 0\"\n      [ngClass]=\"\n        pokemonTypes.length > 1\n          ? 'justify-content-between'\n          : 'justify-content-center'\n      \"\n      style=\"height: 50px\"\n    >\n      <dd-type-box\n        *ngFor=\"let type of pokemonTypes\"\n        [type]=\"type.type_id\"\n        class=\"h-8 w-24\"\n      ></dd-type-box>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "PostCardComponent",
      "id": "component-PostCardComponent-ee2bfb2c003f25337c423849c0a19bd9ebc63149cc8852dcf70e3e998b490314ba86b10ca01e4034af8d4e567c5080087177c0552f3a1056836a868ba676a6a7",
      "file": "src/app/shared/components/news-card/news-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-news-card",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./news-card.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "post",
          "defaultValue": "{} as any",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue": "htm.bind(vhtml)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "imageUrl",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "myPortableTextComponents",
          "defaultValue": "{\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "publishedDay",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "publishedMonth",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "publishedYear",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "sanityService",
          "defaultValue": "inject(SanityService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SanityService",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "toHTML",
          "args": [
            {
              "name": "text",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "text",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, inject, Input, OnInit } from '@angular/core';\nimport { SanityService } from 'src/app/core/services/sanity.service';\nimport { toHTML, uriLooksSafe } from '@portabletext/to-html';\nimport htm from 'htm';\nimport vhtml from 'vhtml';\n\n@Component({\n  selector: 'dd-news-card',\n  templateUrl: './news-card.component.html',\n})\nexport class PostCardComponent implements OnInit {\n  @Input() post: any = {} as any;\n  imageUrl: string = '';\n\n  publishedYear: number = 0;\n  publishedMonth: string = '';\n  publishedDay: number = 0;\n\n  html = htm.bind(vhtml);\n  myPortableTextComponents = {\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  };\n\n  private sanityService: SanityService = inject(SanityService);\n\n  ngOnInit(): void {\n    const date = new Date(this.post.publishedAt); // 2009-11-10\n\n    this.publishedYear = date.getUTCFullYear();\n    this.publishedMonth = date.toLocaleString('default', { month: 'short' });\n    this.publishedDay = date.getUTCDate();\n\n    this.sanityService.urlFor(this.post.mainImage).then((url) => {\n      this.imageUrl = url;\n    });\n  }\n\n  toHTML(text: any) {\n    return toHTML(text, { components: this.myPortableTextComponents });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<article class=\"flex bg-zinc-800 transition hover:shadow-xl rounded\">\n  <div class=\"hidden sm:block sm:basis-56\">\n    <img\n      alt=\"Guitar\"\n      src=\"{{ imageUrl }}\"\n      class=\"aspect-square h-full w-full object-cover\"\n    />\n  </div>\n\n  <div class=\"flex flex-1 flex-col justify-between\">\n    <div class=\"border-s border-gray-900/10 p-4 sm:border-l-transparent sm:p-6\">\n      <a [routerLink]=\"['/', 'news', post.slug.current]\">\n        <h3 class=\"font-bold uppercase\">{{ post.title }}</h3>\n      </a>\n\n      <p\n        class=\"mt-2 line-clamp-3 text-sm/relaxed text-zinc-400\"\n        [innerHTML]=\"toHTML(post.body)\"\n      >\n        {{ post.body[0][\"children\"][0][\"text\"] }}\n      </p>\n    </div>\n\n    <div class=\"sm:flex sm:items-end sm:justify-end\">\n      <a\n        [routerLink]=\"['/', 'news', post.slug.current]\"\n        class=\"block bg-byzantium px-5 py-3 text-center text-xs font-semibold uppercase transition hover:bg-old_mauve rounded-br\"\n      >\n        View Full Post\n      </a>\n    </div>\n  </div>\n</article>\n"
    },
    {
      "name": "QuickLinkComponent",
      "id": "component-QuickLinkComponent-0ca248664e1e410e01f6a48d7e52c7e3ccdb3575b59d0c99d5a6805991be09511529c1869503a69eb97c64e4dd3bf2668b229e53f3fe39937cdd89725fdced8b",
      "file": "src/app/features/home/components/quick-link/quick-link.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-quick-link",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./quick-link.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string",
          "decorators": []
        },
        {
          "name": "imageUrl",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string",
          "decorators": []
        },
        {
          "name": "url",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { SanityService } from 'src/app/core/services/sanity.service';\n\n@Component({\n  selector: 'dd-quick-link',\n  templateUrl: './quick-link.component.html',\n})\nexport class QuickLinkComponent implements OnInit {\n  @Input() url: string = '';\n  @Input() imageUrl: string = '';\n  @Input() title: string = '';\n  @Input() description: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 12
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<a\n  class=\"flex flex-col justify-center items-center rounded-xl cursor-pointer h-[150px] sm:h-[200px] border bg-zinc-800 border-zinc-700 p-4 hover:border-zinc-400 hover:ring-1 hover:ring-zinc-400 focus:outline-none focus:ring\"\n  routerLink=\"{{ url }}\"\n>\n  <div class=\"h-[50%] flex justify-center items-center p-2\">\n    <img *ngIf=\"imageUrl\" src=\"{{ imageUrl }}\" height=\"60\" width=\"60\" />\n  </div>\n  <div class=\"h-[50%] flex flex-col justify-center items-center\">\n    <h2 class=\"font-bold w-full\">{{ title }}</h2>\n\n    <p class=\"hidden sm:mt-1 sm:block sm:text-xs w-full\">\n      {{ description }}\n    </p>\n  </div>\n</a>\n"
    },
    {
      "name": "SpinnerComponent",
      "id": "component-SpinnerComponent-410509241d910c3f334dc7e1d0c6f9aebe92847eefe481ceb76bdf85c3f9fdf26675b24f84b1f6706565ef63dc1ef44d17cbd8a29d05200533d793b737871c13",
      "file": "src/app/shared/components/spinner/spinner.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-spinner",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./spinner.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dd-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div role=\"status\">\n  <svg\n    aria-hidden=\"true\"\n    class=\"w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-byzantium\"\n    viewBox=\"0 0 100 101\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n      fill=\"currentFill\"\n    />\n  </svg>\n  <span class=\"sr-only\">Loading...</span>\n</div>\n"
    },
    {
      "name": "TeamBuilderComponent",
      "id": "component-TeamBuilderComponent-8ec49b47d93eeba19ec2daef8e946c94eae5ee2f7c7df413b9051fe124163cb22761b49d0c54c40d2d9ac673594f3a14903ed3c2f13035f3b40664557505905d",
      "file": "src/app/features/team-builder/pages/team-builder.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-team-builder",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./team-builder.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dd-team-builder',\n  templateUrl: './team-builder.component.html',\n})\nexport class TeamBuilderComponent {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 7
      },
      "extends": [],
      "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div class=\"max-w-screen-xl bg-zinc-950 rounded w-full\">\n    <div class=\"flex flex-col gap-3 pb-4 w-full\">\n      <dd-container-header\n        class=\"mb-2\"\n        [title]=\"'Pokémon Team Builder'\"\n      ></dd-container-header>\n      <div class=\"h-96 text-center\">\n        <p>Coming soon!</p>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "TypeBoxComponent",
      "id": "component-TypeBoxComponent-099931557a55bfc33105da548c49fde1175d0b2e4d7b2e0627ae1f6c697360e0155437633ecb36ca33c9ae8e2dbf2ee102a5189f5a520b5101478a336c7bd54e",
      "file": "src/app/shared/components/type-box/type-box.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "dd-type-box",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./type-box.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "type",
          "defaultValue": "{} as any",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-type-box',\n  templateUrl: './type-box.component.html',\n})\nexport class TypeBoxComponent {\n  @Input() type: any = {} as any;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div\n  class=\"flex justify-center items-center rounded h-full w-full\"\n  data-testid=\"type-box\"\n  [style.background]=\"'#' + type.type_color\"\n>\n  <span class=\"font-bold white-outlined\" data-testid=\"type-box-text\">{{\n    type.name\n  }}</span>\n</div>\n"
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "id": "module-AppModule-41222611b5fe8b74dd5aaa5a668e8f18594170f5ae9c2a2ad26d43c39caf1bec2b92528b5e6ec29baa015dbb7c4a07fb26d58585ffd94e098f073ab3507a8812",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule, isDevMode } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './core/layout/header/header.component';\nimport { FooterComponent } from './core/layout/footer/footer.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { PokedexModule } from './features/pokedex/pokedex.module';\nimport { HomeModule } from './features/home/home.module';\nimport { TeamBuilderModule } from './features/team-builder/team-builder.module';\nimport { NewsModule } from './features/news/news.module';\nimport { GamesModule } from './features/games/games.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      \"import('./features/home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'pokedex/:version-group',\n    loadChildren: () =>\n      \"import('./features/pokedex/pokedex.module').then((m) => m.PokedexModule)\",\n  },\n  {\n    path: 'pokedex/:version-group/:pokemon',\n    loadChildren: () =>\n      \"import('./features/pokemon/pokemon.module').then((m) => m.PokemonModule)\",\n  },\n  {\n    path: 'games/:slug',\n    loadChildren: () =>\n      \"import('./features/games/games.module').then((m) => m.GamesModule)\",\n  },\n  {\n    path: 'news/:slug',\n    loadChildren: () =>\n      \"import('./features/news/news.module').then((m) => m.NewsModule)\",\n  },\n  {\n    path: 'team-builder',\n    loadChildren: () =>\n      \"import('./features/team-builder/team-builder.module').then(\\\n        (m) => m.TeamBuilderModule\\\n      )\",\n  },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    HeaderComponent,\n    FooterComponent,\n    HomeModule,\n    PokedexModule,\n    RouterModule.forRoot(routes),\n    TeamBuilderModule,\n    NewsModule,\n    GamesModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "FooterComponent"
            },
            {
              "name": "GamesModule"
            },
            {
              "name": "HeaderComponent"
            },
            {
              "name": "HomeModule"
            },
            {
              "name": "NewsModule"
            },
            {
              "name": "PokedexModule"
            },
            {
              "name": "SharedModule"
            },
            {
              "name": "TeamBuilderModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CoreModule",
      "id": "module-CoreModule-4e50ed7efb73d227c77dcdd39f924ed7b327b6c735806bf3a04d4f7180287dc2126bdd321cc0bd0055835e2c372b153b8828037906e0ecff296a12e13a9f8501",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/core/core.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule],\n})\nexport class CoreModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "GamesModule",
      "id": "module-GamesModule-a3bb77b5852c168c0c8ada3ed85c516286429736228de9b0b4d28de11e47a7818ababe37888666ca1fffcab25bb2266c153bd1471e937a168b342a76ee5f4220",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/features/games/games.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { GamesComponent } from './pages/games.component';\n\n@NgModule({\n  declarations: [GamesComponent],\n  imports: [CommonModule, CoreModule, SharedModule],\n})\nexport class GamesModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "GamesComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "HomeModule",
      "id": "module-HomeModule-f6efb5f0f52ca476c1daec0a6310b69a2babf6139902d1619891a7f8f3c5234a0bb567ed874ee937b0d37d0e23415188dafccdfae53594c024f918c4fb5bbb4e",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/features/home/home.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { HomeComponent } from './pages/home.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { QuickLinkComponent } from './components/quick-link/quick-link.component';\nimport { RouterModule } from '@angular/router';\n\nconst routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent, QuickLinkComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class HomeModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "HomeComponent"
            },
            {
              "name": "QuickLinkComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "NewsModule",
      "id": "module-NewsModule-4d258218c477cf6c74d79358c7b44be11cb7a65256e94309adad67fd7c3641355f5803b9fc010ca0fc8bb886e7938a535d4dd1d22c6b97ba0bef24e493448187",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/features/news/news.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { NewsComponent } from './pages/news.component';\n\nconst routes = [{ path: '', component: NewsComponent }];\n\n@NgModule({\n  declarations: [NewsComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class NewsModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "NewsComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PokedexModule",
      "id": "module-PokedexModule-69632c68a8436bdb7decc9d56bc6e2e52db4cdffc4b94c593fae5b737bd3c9775fde43031faffdad454a98ce411825fa26c678c7728d820b2b490549dc2c03dd",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/features/pokedex/pokedex.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { PokedexComponent } from './pages/pokedex/pokedex.component';\nimport { PokedexGridViewItemComponent } from './components/pokedex-grid-view-item/pokedex-grid-view-item.component';\nimport { PokedexListViewItemComponent } from './components/pokedex-list-view-item/pokedex-list-view-item.component';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgIconsModule } from '@ng-icons/core';\nimport {\n  heroChevronLeftSolid,\n  heroChevronRightSolid,\n  heroSwatchSolid,\n  heroSparklesSolid,\n} from '@ng-icons/heroicons/solid';\nimport {\n  bootstrapDice6Fill,\n  bootstrapGenderFemale,\n  bootstrapGenderMale,\n} from '@ng-icons/bootstrap-icons';\nimport { PokedexTabComponent } from './components/pokedex-tab/pokedex-tab.component';\n\nconst routes = [{ path: '', component: PokedexComponent }];\n\n@NgModule({\n  declarations: [\n    PokedexComponent,\n    PokedexGridViewItemComponent,\n    PokedexListViewItemComponent,\n    PokedexTabComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    LazyLoadImageModule,\n    NgIconsModule.withIcons({\n      heroChevronLeftSolid,\n      heroChevronRightSolid,\n      heroSwatchSolid,\n      bootstrapDice6Fill,\n      bootstrapGenderFemale,\n      bootstrapGenderMale,\n      heroSparklesSolid,\n    }),\n  ],\n})\nexport class PokedexModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "PokedexComponent"
            },
            {
              "name": "PokedexGridViewItemComponent"
            },
            {
              "name": "PokedexListViewItemComponent"
            },
            {
              "name": "PokedexTabComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PokemonModule",
      "id": "module-PokemonModule-8ea13cda2adea40e4235c0a139f3d12f746a7c80cab361c6c7b7296a6fb3507fad75499c7905480ac62a0786a36d88acee4e420414c7d5208184439c763fe730",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/features/pokemon/pokemon.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { PokemonComponent } from './pages/pokemon/pokemon.component';\nimport { PokemonDataComponent } from './components/pokemon-data/pokemon-data.component';\nimport { PokemonDescriptionsComponent } from './components/pokemon-descriptions/pokemon-descriptions.component';\nimport { PokemonFormsComponent } from './components/pokemon-forms/pokemon-forms.component';\nimport { PokemonGenderRatioComponent } from './components/pokemon-gender-ratio/pokemon-gender-ratio.component';\nimport { PokemonNavigationComponent } from './components/pokemon-navigation/pokemon-navigation.component';\nimport { PokemonStatsComponent } from './components/pokemon-stats/pokemon-stats.component';\nimport { NgIconsModule } from '@ng-icons/core';\nimport {\n  heroChevronLeftSolid,\n  heroChevronRightSolid,\n  heroSwatchSolid,\n  heroSparklesSolid,\n} from '@ng-icons/heroicons/solid';\nimport {\n  bootstrapDice6Fill,\n  bootstrapGenderFemale,\n  bootstrapGenderMale,\n} from '@ng-icons/bootstrap-icons';\nimport { PokemonSummaryComponent } from './components/pokemon-summary/pokemon-summary.component';\nimport { PokemonMovesComponent } from './components/pokemon-moves/pokemon-moves.component';\nimport { PokemonMoveTableComponent } from './components/pokemon-move-table/pokemon-move-table.component';\n\nconst routes = [{ path: '', component: PokemonComponent }];\n\n@NgModule({\n  declarations: [\n    PokemonComponent,\n    PokemonDataComponent,\n    PokemonDescriptionsComponent,\n    PokemonFormsComponent,\n    PokemonGenderRatioComponent,\n    PokemonMovesComponent,\n    PokemonMoveTableComponent,\n    PokemonNavigationComponent,\n    PokemonStatsComponent,\n    PokemonSummaryComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    LazyLoadImageModule,\n    NgIconsModule.withIcons({\n      heroChevronLeftSolid,\n      heroChevronRightSolid,\n      heroSwatchSolid,\n      bootstrapDice6Fill,\n      bootstrapGenderFemale,\n      bootstrapGenderMale,\n      heroSparklesSolid,\n    }),\n  ],\n})\nexport class PokemonModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "PokemonComponent"
            },
            {
              "name": "PokemonDataComponent"
            },
            {
              "name": "PokemonDescriptionsComponent"
            },
            {
              "name": "PokemonFormsComponent"
            },
            {
              "name": "PokemonGenderRatioComponent"
            },
            {
              "name": "PokemonMoveTableComponent"
            },
            {
              "name": "PokemonMovesComponent"
            },
            {
              "name": "PokemonNavigationComponent"
            },
            {
              "name": "PokemonStatsComponent"
            },
            {
              "name": "PokemonSummaryComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "SharedModule",
      "id": "module-SharedModule-e01adcea85d90b1ccb86a2202ff9b6292de0ec4970a4b95e23d052875c385495de9ce184320d6a0ca56ba25a5f4ebce54048249137e390e3485bec4d155702a7",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/shared/shared.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DecimetersToFeetAndInchesPipe } from './pipes/decimeters-to-feet-and-inches/decimeters-to-feet-and-inches.pipe';\nimport { DecimetersToPoundsPipe } from './pipes/decimeters-to-pounds/decimeters-to-pounds.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { TypeBoxComponent } from './components/type-box/type-box.component';\nimport { HeaderDropdownItemComponent } from './components/header-dropdown-item/header-dropdown-item.component';\nimport { PostCardComponent } from './components/news-card/news-card.component';\nimport { ContainerHeaderComponent } from './components/container-header/container-header.component';\nimport { RouterModule } from '@angular/router';\nimport { NewsContainerComponent } from './components/news-container/news-container.component';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { DropdownLinkComponent } from './components/dropdown-link/dropdown-link.component';\nimport { PokedexSelectDropdownComponent } from './components/pokedex-select-dropdown/pokedex-select-dropdown.component';\nimport { NgIconsModule } from '@ng-icons/core';\nimport { heroChevronDownSolid } from '@ng-icons/heroicons/solid';\n\n@NgModule({\n  declarations: [\n    DecimetersToFeetAndInchesPipe,\n    DecimetersToPoundsPipe,\n    TypeBoxComponent,\n    PostCardComponent,\n    DropdownLinkComponent,\n    PokedexSelectDropdownComponent,\n    HeaderDropdownItemComponent,\n    ContainerHeaderComponent,\n    NewsContainerComponent,\n    SpinnerComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    NgIconsModule.withIcons({\n      heroChevronDownSolid,\n    }),\n  ],\n  exports: [\n    DecimetersToFeetAndInchesPipe,\n    DecimetersToPoundsPipe,\n    TypeBoxComponent,\n    HeaderDropdownItemComponent,\n    DropdownLinkComponent,\n    PokedexSelectDropdownComponent,\n    PostCardComponent,\n    ContainerHeaderComponent,\n    NewsContainerComponent,\n    SpinnerComponent,\n  ],\n})\nexport class SharedModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ContainerHeaderComponent"
            },
            {
              "name": "DecimetersToFeetAndInchesPipe"
            },
            {
              "name": "DecimetersToPoundsPipe"
            },
            {
              "name": "DropdownLinkComponent"
            },
            {
              "name": "HeaderDropdownItemComponent"
            },
            {
              "name": "NewsContainerComponent"
            },
            {
              "name": "PokedexSelectDropdownComponent"
            },
            {
              "name": "PostCardComponent"
            },
            {
              "name": "SpinnerComponent"
            },
            {
              "name": "TypeBoxComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ContainerHeaderComponent"
            },
            {
              "name": "DecimetersToFeetAndInchesPipe"
            },
            {
              "name": "DecimetersToPoundsPipe"
            },
            {
              "name": "DropdownLinkComponent"
            },
            {
              "name": "HeaderDropdownItemComponent"
            },
            {
              "name": "NewsContainerComponent"
            },
            {
              "name": "PokedexSelectDropdownComponent"
            },
            {
              "name": "PostCardComponent"
            },
            {
              "name": "SpinnerComponent"
            },
            {
              "name": "TypeBoxComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TeamBuilderModule",
      "id": "module-TeamBuilderModule-377ef65c056dd5f0c24b1202e8060cc894c7d31741001a9d4425286dafbaecb855e2e259b48911a91e236045f3385797e06c176c128b0299e65ec2baab71b00d",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/features/team-builder/team-builder.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { TeamBuilderComponent } from './pages/team-builder.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\n\nconst routes = [{ path: '', component: TeamBuilderComponent }];\n\n@NgModule({\n  declarations: [TeamBuilderComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class TeamBuilderModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TeamBuilderComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.development.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
      },
      {
        "name": "headerNavItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/models/navigation.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "NavigationItem[]",
        "defaultValue": "[\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n]"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
      },
      {
        "name": "LoggedIn",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/header.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
      },
      {
        "name": "LoggedIn",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/page.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
      },
      {
        "name": "LoggedOut",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/header.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "LoggedOut",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/page.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonComponent>",
        "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/header.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<HeaderComponent>",
        "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/page.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<PageComponent>",
        "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": ".storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
      },
      {
        "name": "routes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/home/home.module.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[{ path: '', component: HomeComponent }]"
      },
      {
        "name": "routes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/news/news.module.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[{ path: '', component: NewsComponent }]"
      },
      {
        "name": "routes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/pokedex/pokedex.module.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[{ path: '', component: PokedexComponent }]"
      },
      {
        "name": "routes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/pokemon/pokemon.module.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[{ path: '', component: PokemonComponent }]"
      },
      {
        "name": "routes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/features/team-builder/team-builder.module.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[{ path: '', component: TeamBuilderComponent }]"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "Enums",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/app/core/models/supabase.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      },
      {
        "name": "Json",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "string | number | boolean | null | literal type | Json[]",
        "file": "src/app/core/models/supabase.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ButtonComponent>",
        "file": "src/stories/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<HeaderComponent>",
        "file": "src/stories/header.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<PageComponent>",
        "file": "src/stories/page.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Tables",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/app/core/models/supabase.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      },
      {
        "name": "TablesInsert",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/app/core/models/supabase.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      },
      {
        "name": "TablesUpdate",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/app/core/models/supabase.model.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/environments/environment.development.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.development.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
        }
      ],
      "src/app/core/models/navigation.model.ts": [
        {
          "name": "headerNavItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/models/navigation.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NavigationItem[]",
          "defaultValue": "[\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n]"
        }
      ],
      "src/stories/button.stories.ts": [
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonComponent>",
          "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
        }
      ],
      "src/stories/header.stories.ts": [
        {
          "name": "LoggedIn",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/header.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
        },
        {
          "name": "LoggedOut",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/header.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/header.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<HeaderComponent>",
          "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
        }
      ],
      "src/stories/page.stories.ts": [
        {
          "name": "LoggedIn",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/page.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
        },
        {
          "name": "LoggedOut",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/page.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/page.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<PageComponent>",
          "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
        }
      ],
      ".storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": ".storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
        }
      ],
      "src/app/features/home/home.module.ts": [
        {
          "name": "routes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/home/home.module.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[{ path: '', component: HomeComponent }]"
        }
      ],
      "src/app/features/news/news.module.ts": [
        {
          "name": "routes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/news/news.module.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[{ path: '', component: NewsComponent }]"
        }
      ],
      "src/app/features/pokedex/pokedex.module.ts": [
        {
          "name": "routes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/pokedex/pokedex.module.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[{ path: '', component: PokedexComponent }]"
        }
      ],
      "src/app/features/pokemon/pokemon.module.ts": [
        {
          "name": "routes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/pokemon/pokemon.module.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[{ path: '', component: PokemonComponent }]"
        }
      ],
      "src/app/features/team-builder/team-builder.module.ts": [
        {
          "name": "routes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/features/team-builder/team-builder.module.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[{ path: '', component: TeamBuilderComponent }]"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "src/app/core/models/supabase.model.ts": [
        {
          "name": "Enums",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/app/core/models/supabase.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        },
        {
          "name": "Json",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "string | number | boolean | null | literal type | Json[]",
          "file": "src/app/core/models/supabase.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "Tables",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/app/core/models/supabase.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        },
        {
          "name": "TablesInsert",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/app/core/models/supabase.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        },
        {
          "name": "TablesUpdate",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/app/core/models/supabase.model.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        }
      ],
      "src/stories/button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ButtonComponent>",
          "file": "src/stories/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/header.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<HeaderComponent>",
          "file": "src/stories/header.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/page.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<PageComponent>",
          "file": "src/stories/page.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 1,
    "status": "low",
    "files": [
      {
        "filePath": ".storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/layout/footer/footer.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FooterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/layout/header/header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/layout.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DropdownLinkOption",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/layout.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DropdownLinkSection",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/navigation.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "NavigationItem",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/navigation.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SectionItem",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/navigation.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SectionOption",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/navigation.model.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "headerNavItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/models/supabase.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Database",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/sanity.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SanityService",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/core/services/supabase.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "SupabaseService",
        "coveragePercent": 0,
        "coverageCount": "0/22",
        "status": "low"
      },
      {
        "filePath": "src/app/features/games/pages/games.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GamesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/features/home/components/quick-link/quick-link.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "QuickLinkComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/features/home/home.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "routes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/home/pages/home.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/features/news/news.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "routes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/news/pages/news.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NewsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokedex/components/pokedex-grid-view-item/pokedex-grid-view-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokedexGridViewItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokedex/components/pokedex-list-view-item/pokedex-list-view-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokedexListViewItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokedex/components/pokedex-tab/pokedex-tab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokedexTabComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokedex/pages/pokedex/pokedex.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokedexComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokedex/pokedex.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "routes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-data/pokemon-data.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonDataComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-descriptions/pokemon-descriptions.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonDescriptionsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-forms/pokemon-forms.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonFormsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-gender-ratio/pokemon-gender-ratio.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonGenderRatioComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-move-table/pokemon-move-table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonMoveTableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-moves/pokemon-moves.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonMovesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-navigation/pokemon-navigation.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonNavigationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-stats/pokemon-stats.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonStatsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/components/pokemon-summary/pokemon-summary.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonSummaryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/pages/pokemon/pokemon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/pages/pokemon/pokemon.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DropdownLinkOption",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pokemon/pokemon.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "routes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/team-builder/pages/team-builder.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TeamBuilderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/features/team-builder/team-builder.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "routes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/container-header/container-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ContainerHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/dropdown-link/dropdown-link.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownLinkComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/header-dropdown-item/header-dropdown-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderDropdownItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/header-dropdown-item/header-dropdown-item.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "HeaderDropdownItemService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/news-card/news-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PostCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/news-container/news-container.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NewsContainerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/pokedex-select-dropdown/pokedex-select-dropdown.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokedexSelectDropdownComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/spinner/spinner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/components/type-box/type-box.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypeBoxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/pipes/decimeters-to-feet-and-inches/decimeters-to-feet-and-inches.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "DecimetersToFeetAndInchesPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/pipes/decimeters-to-pounds/decimeters-to-pounds.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "DecimetersToPoundsPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.development.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 83,
        "coverageCount": "5/6",
        "status": "very-good"
      },
      {
        "filePath": "src/stories/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/stories/header.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoggedIn",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/header.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoggedOut",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/header.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/page.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/stories/page.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoggedIn",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/page.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoggedOut",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/page.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/user.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "User",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      }
    ]
  }
}
