{
    "pipes": [
        {
            "name": "DecimetersToFeetAndInchesPipe",
            "id": "pipe-DecimetersToFeetAndInchesPipe-48c1b9e853d8095d49d9b084619caefac50a23aa0fb0e235b91182cdcb2ddd75374e89f05a0aa0253bb6cae4097cba5075511de1651ee16a11475078e01f4c31",
            "file": "src/app/shared/pipes/decimeters-to-feet-and-inches/decimeters-to-feet-and-inches.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "heightInDecimeters",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "heightInDecimeters",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "decimetersToFeetAndInches",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimetersToFeetAndInches',\n})\nexport class DecimetersToFeetAndInchesPipe implements PipeTransform {\n  transform(heightInDecimeters?: number): string {\n    if (!heightInDecimeters) {\n      return '-';\n    }\n    const inches = Math.round(heightInDecimeters * 3.937);\n    const feet = Math.floor(inches / 12);\n    const remainingInches = inches % 12;\n    return `${feet}'${\n      remainingInches.toString().length === 1 ? 0 : ''\n    }${remainingInches}\"`;\n  }\n}\n"
        },
        {
            "name": "DecimetersToPoundsPipe",
            "id": "pipe-DecimetersToPoundsPipe-e3b7b3246d8a48a4c62a90d30715bf0dd0782c08bf98a2329e30f263cc869ff38ca89866d2d6ecb5780e87862200e291c59e1d5ab88d6e7f17bab8c7e843c90f",
            "file": "src/app/shared/pipes/decimeters-to-pounds/decimeters-to-pounds.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "weightInDecimeters",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "weightInDecimeters",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "decimetersToPounds",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimetersToPounds',\n})\nexport class DecimetersToPoundsPipe implements PipeTransform {\n  transform(weightInDecimeters?: number): string {\n    if (!weightInDecimeters) {\n      return '-';\n    }\n    const pounds = weightInDecimeters * 0.220462;\n    return `${pounds.toFixed(1)} lbs`;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "DropdownOption",
            "id": "interface-DropdownOption-875c67cc11ac50b7d047c6b9e77b5acc321ddc16a81d5112f7d5b2aaa4872392c6432c13064c294b7fadfc3ef0a28ae4e15f11e97d56cf05453ff1f2077e380f",
            "file": "src/app/core/models/layout.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownOption {\n  name: string;\n  path: string;\n}\n\nexport interface DropdownSection {\n  name: string;\n  options: DropdownOption[];\n}\n\nexport interface Tab {\n  name: string;\n  identifier: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DropdownSection",
            "id": "interface-DropdownSection-875c67cc11ac50b7d047c6b9e77b5acc321ddc16a81d5112f7d5b2aaa4872392c6432c13064c294b7fadfc3ef0a28ae4e15f11e97d56cf05453ff1f2077e380f",
            "file": "src/app/core/models/layout.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownOption {\n  name: string;\n  path: string;\n}\n\nexport interface DropdownSection {\n  name: string;\n  options: DropdownOption[];\n}\n\nexport interface Tab {\n  name: string;\n  identifier: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownOption[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NavigationItem",
            "id": "interface-NavigationItem-aaef17ce3b4adb282157ac5df6c47ae2e7b006036912fc2ac436299af2c07689af87f2415a82df98db3c693500b2a3bb50fa4bf17fcd63002f4e2456effbcdf5",
            "file": "src/app/core/models/navigation.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NavigationItem {\n  label: string;\n  sections: SectionItem[];\n}\n\nexport interface SectionItem {\n  sectionTitle: string;\n  options: SectionOption[];\n}\n\nexport interface SectionOption {\n  label: string;\n  link: string;\n}\n\nexport const headerNavItems: NavigationItem[] = [\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SectionItem[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SectionItem",
            "id": "interface-SectionItem-aaef17ce3b4adb282157ac5df6c47ae2e7b006036912fc2ac436299af2c07689af87f2415a82df98db3c693500b2a3bb50fa4bf17fcd63002f4e2456effbcdf5",
            "file": "src/app/core/models/navigation.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NavigationItem {\n  label: string;\n  sections: SectionItem[];\n}\n\nexport interface SectionItem {\n  sectionTitle: string;\n  options: SectionOption[];\n}\n\nexport interface SectionOption {\n  label: string;\n  link: string;\n}\n\nexport const headerNavItems: NavigationItem[] = [\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n",
            "properties": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SectionOption[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sectionTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SectionOption",
            "id": "interface-SectionOption-aaef17ce3b4adb282157ac5df6c47ae2e7b006036912fc2ac436299af2c07689af87f2415a82df98db3c693500b2a3bb50fa4bf17fcd63002f4e2456effbcdf5",
            "file": "src/app/core/models/navigation.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NavigationItem {\n  label: string;\n  sections: SectionItem[];\n}\n\nexport interface SectionItem {\n  sectionTitle: string;\n  options: SectionOption[];\n}\n\nexport interface SectionOption {\n  label: string;\n  link: string;\n}\n\nexport const headerNavItems: NavigationItem[] = [\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tab",
            "id": "interface-Tab-875c67cc11ac50b7d047c6b9e77b5acc321ddc16a81d5112f7d5b2aaa4872392c6432c13064c294b7fadfc3ef0a28ae4e15f11e97d56cf05453ff1f2077e380f",
            "file": "src/app/core/models/layout.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownOption {\n  name: string;\n  path: string;\n}\n\nexport interface DropdownSection {\n  name: string;\n  options: DropdownOption[];\n}\n\nexport interface Tab {\n  name: string;\n  identifier: string;\n}\n",
            "properties": [
                {
                    "name": "identifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TableColumn",
            "id": "interface-TableColumn-ef5052ebff293f2f3574d84b6dff7dea683f0c7d43aa8e1d6e685d3a9276470e584554068983a4a1fef68b84d282e385e301db801bb065fb7b5730b806558666",
            "file": "src/app/shared/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface TableColumn {\n  label: string;\n  property: string;\n}\n\n@Component({\n  selector: 'dd-table',\n  templateUrl: './table.component.html',\n})\nexport class TableComponent {\n  @Input() data: any[] = [];\n  @Input() columns: TableColumn[] = [];\n  @Input() showTableHeaders?: boolean = true;\n\n  // Add any additional properties or methods here\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "HeaderDropdownService",
            "id": "injectable-HeaderDropdownService-64dba4f60e9893835ed2a6c7dfb82e537ecbd2d89412830cb615158faa93049681569140799590df1140281240d9f4002acd8d82921c1953c598d771d2a852c5",
            "file": "src/app/core/layout/header/components/header-dropdown/header-dropdown.service.ts",
            "properties": [
                {
                    "name": "openDropdown",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getOpenDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setOpenDropdown",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeaderDropdownService {\n  private openDropdown = new Subject<string>();\n\n  getOpenDropdown() {\n    return this.openDropdown.asObservable();\n  }\n\n  setOpenDropdown(label: string) {\n    this.openDropdown.next(label);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SanityService",
            "id": "injectable-SanityService-c9adb2106696d793901b67e4c0da921a0b40eb268a2d80bc4ceb16531afbee3708300310605823fe913926b5e9b82de77312522321c9222f6ac40e0d59c527b7",
            "file": "src/app/core/services/sanity.service.ts",
            "properties": [
                {
                    "name": "builder",
                    "defaultValue": "imageUrlBuilder(this.client)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "client",
                    "defaultValue": "createClient({\n    projectId: '6oeacjo5',\n    dataset: 'production',\n    apiVersion: '2023-11-24',\n    useCdn: true,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAuthorByRefence",
                    "args": [
                        {
                            "name": "author",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "author",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPostBySlug",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPosts",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "getPostsByCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "urlFor",
                    "args": [
                        {
                            "name": "source",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "source",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { createClient } from '@sanity/client';\nimport imageUrlBuilder from '@sanity/image-url';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SanityService {\n  constructor() {}\n\n  private client = createClient({\n    projectId: '6oeacjo5',\n    dataset: 'production',\n    apiVersion: '2023-11-24',\n    useCdn: true,\n  });\n\n  private builder = imageUrlBuilder(this.client);\n\n  async getPosts() {\n    const query = '*[_type == \"post\"]';\n    return this.client.fetch(query);\n  }\n\n  async getPostsByCategory(category: string) {\n    const query = `*[_type == \"post\" && \"${category}\" match categories[]->slug.current]`;\n    return this.client.fetch(query);\n  }\n\n  async getPostBySlug(slug: string) {\n    const query = `*[_type == \"post\" && slug.current == \"${slug}\"][0]`;\n    return this.client.fetch(query);\n  }\n\n  async urlFor(source: string) {\n    return this.builder.image(source).toString();\n  }\n\n  async getAuthorByRefence(author: string) {\n    const query = `*[_type == \"author\" && _id == \"${author}\"][0]`;\n    return this.client.fetch(query);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SupabaseService",
            "id": "injectable-SupabaseService-5284657bccd74f5f1a2ca063c0658bcdef88acf867c0a3fdcd8c1c060b1ade892b939b4cf9b634db8983ab4082122e795d0e7d12ca0f6dc80aab7413620c2b89",
            "file": "src/app/core/services/supabase.service.ts",
            "properties": [
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAllGenerations",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAllPokedexes",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAllPokedexVersionGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAllPokemonSpeciesIdentifiers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAllVersionGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokedexesByVersionGroupId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonAbilitiesByPokemonId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonBySpeciesId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonDexNumbersBySpeciesId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonMovesByPokemonId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionGroupId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionGroupId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonSpeciesByIdentifier",
                    "args": [
                        {
                            "name": "identifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Tables<pokemon_species>>",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "identifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonSpeciesByPokedexId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type[]>",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonSpeciesFlavorTextBySpeciesId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonSpeciesFlavorTextWithVersionIdBySpeciesId",
                    "args": [
                        {
                            "name": "speciesId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionIds",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "speciesId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionIds",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonStatsByPokemonId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonTypesByPokemonId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTypeById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersionGroupByIdentifier",
                    "args": [
                        {
                            "name": "identifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Tables<version_groups>>",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "identifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersionsByVersionGroupId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Tables[]>",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { from, map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Database, Tables } from '../models/supabase.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient<Database>(\n      environment.supabaseUrl,\n      environment.supabaseKey\n    );\n  }\n\n  get storage() {\n    return this.supabase.storage;\n  }\n\n  // Generations\n\n  getAllGenerations(): Observable<Tables<'generations'>[]> {\n    const request = this.supabase.from('generations').select('*');\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokedexes\n\n  getAllPokedexes(): Observable<Tables<'pokedexes'>[]> {\n    const request = this.supabase.from('pokedexes').select('*');\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokedex Version Groups\n\n  getAllPokedexVersionGroups(): Observable<Tables<'pokedex_version_groups'>[]> {\n    const request = this.supabase.from('pokedex_version_groups').select('*');\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getPokedexesByVersionGroupId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokedex_version_groups')\n      .select('pokedex_id (*)')\n      .eq('version_group_id', id);\n    return from(request).pipe(\n      map((response) => response.data?.map((item) => item.pokedex_id) || [])\n    );\n  }\n\n  // Pokémon\n\n  getPokemonBySpeciesId(id: number): Observable<Tables<'pokemon'>[]> {\n    const request = this.supabase\n      .from('pokemon')\n      .select('*')\n      .eq('species_id', id)\n      .order('form_order', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokémon Abilities\n\n  getPokemonAbilitiesByPokemonId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_abilities')\n      .select(\n        'pokemon_id, ability_id (id, identifier, name, generation_id, short_effect), is_hidden, slot'\n      )\n      .eq('pokemon_id', id)\n      .order('slot', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokémon Dex Numbers\n\n  getPokemonDexNumbersBySpeciesId(\n    id: number\n  ): Observable<Tables<'pokemon_dex_numbers'>[]> {\n    const request = this.supabase\n      .from('pokemon_dex_numbers')\n      .select('*')\n      .eq('species_id', id)\n      .order('pokedex_id', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Moves\n\n  getPokemonMovesByPokemonId(\n    id: number,\n    versionGroupId: number\n  ): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_moves')\n      .select(\n        'pokemon_id, version_group_id, level, order, move_id (id, identifier, name, type_id ( id, identifier, name, type_color ), power, pp, accuracy), pokemon_move_method_id (id, identifier, name)'\n      )\n      .eq('pokemon_id', id)\n      .eq('version_group_id', versionGroupId)\n      .order('order', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Species\n\n  getPokemonSpeciesByIdentifier(\n    identifier: string\n  ): Observable<Tables<'pokemon_species'>> {\n    const request = this.supabase\n      .from('pokemon_species')\n      .select('*')\n      .eq('identifier', identifier)\n      .single();\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getPokemonSpeciesByPokedexId(id: number): Observable<\n    {\n      species_id: any;\n      pokedex_number: number;\n    }[]\n  > {\n    const request = this.supabase\n      .from('pokemon_dex_numbers')\n      .select('species_id (id, identifier, name, genus), pokedex_number')\n      .eq('pokedex_id', id)\n      .order('pokedex_number', { ascending: true });\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getAllPokemonSpeciesIdentifiers(): Observable<any> {\n    const request = this.supabase.from('pokemon_species').select('identifier');\n    return from(request).pipe(\n      map((response) => response.data || []),\n      map((data) => data.map((item: any) => item.identifier))\n    );\n  }\n\n  // Pokemon Species Flavor Text\n\n  getPokemonSpeciesFlavorTextBySpeciesId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_species_flavor_text')\n      .select('*')\n      .eq('species_id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getPokemonSpeciesFlavorTextWithVersionIdBySpeciesId(\n    speciesId: number,\n    versionIds: number[]\n  ): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_species_flavor_text')\n      .select('*')\n      .eq('species_id', speciesId)\n      .in('version_id', versionIds);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Stats\n\n  getPokemonStatsByPokemonId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_stats')\n      .select('stat_id (id, identifier, name), base_stat, effort')\n      .eq('pokemon_id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Pokemon Types\n\n  getPokemonTypesByPokemonId(id: number): Observable<any> {\n    const request = this.supabase\n      .from('pokemon_types')\n      .select(\n        'type_id (id, identifier, name, type_color, darker_type_color), slot'\n      )\n      .eq('pokemon_id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Types\n\n  getTypeById(id: number): Observable<any> {\n    const request = this.supabase.from('types').select('*').eq('id', id);\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Versions\n\n  getVersionsByVersionGroupId(id: number): Observable<Tables<'versions'>[]> {\n    const request = this.supabase\n      .from('versions')\n      .select('*')\n      .eq('version_group_id', id);\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  // Version Groups\n\n  getAllVersionGroups(): Observable<Tables<'version_groups'>[]> {\n    const request = this.supabase\n      .from('version_groups')\n      .select('*')\n      .order('order', { ascending: true });\n    return from(request).pipe(map((response) => response.data || []));\n  }\n\n  getVersionGroupByIdentifier(\n    identifier: string\n  ): Observable<Tables<'version_groups'>> {\n    const request = this.supabase\n      .from('version_groups')\n      .select('*')\n      .eq('identifier', identifier)\n      .single();\n\n    return from(request).pipe(map((response) => response.data || []));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "accessors": {
                "storage": {
                    "name": "storage",
                    "getSignature": {
                        "name": "storage",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-05ff0e0bdc17107e7bfea5b7afc150aa9e1224ae1aa1a6972d2eb80a1d4ec3185b9593380539c6f6451b63769c5dd3c1f65d1eb631f5193c772ee5d9a30bc3a9",
            "file": "src/app/core/services/theme.service.ts",
            "properties": [
                {
                    "name": "_destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_document",
                    "defaultValue": "inject(DOCUMENT)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_platformId",
                    "defaultValue": "inject(PLATFORM_ID)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_renderer",
                    "defaultValue": "inject(RendererFactory2).createRenderer(null, null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_theme$",
                    "defaultValue": "new ReplaySubject<'light' | 'dark'>(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "theme$",
                    "defaultValue": "this._theme$.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "isDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "syncThemeFromLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggleClassOnThemeChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  Injectable,\n  OnDestroy,\n  PLATFORM_ID,\n  RendererFactory2,\n  inject,\n} from '@angular/core';\nimport { ReplaySubject, Subject, takeUntil } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService implements OnDestroy {\n  private _platformId = inject(PLATFORM_ID);\n  private _renderer = inject(RendererFactory2).createRenderer(null, null);\n  private _document = inject(DOCUMENT);\n  private _theme$ = new ReplaySubject<'light' | 'dark'>(1);\n  private _destroyed$ = new Subject<void>();\n\n  public theme$ = this._theme$.asObservable();\n\n  constructor() {\n    this.syncThemeFromLocalStorage();\n    this.toggleClassOnThemeChanges();\n  }\n\n  private syncThemeFromLocalStorage(): void {\n    if (isPlatformBrowser(this._platformId)) {\n      this._theme$.next(\n        localStorage.getItem('theme') === 'dark' ? 'dark' : 'light'\n      );\n    }\n  }\n\n  private toggleClassOnThemeChanges(): void {\n    this.theme$.pipe(takeUntil(this._destroyed$)).subscribe((theme) => {\n      if (theme === 'dark') {\n        this._renderer.addClass(this._document.documentElement, 'dark');\n      } else {\n        if (this._document.documentElement.className.includes('dark')) {\n          this._renderer.removeClass(this._document.documentElement, 'dark');\n        }\n      }\n    });\n  }\n\n  public toggleDarkMode(): void {\n    const newTheme =\n      localStorage.getItem('theme') === 'dark' ? 'light' : 'dark';\n    localStorage.setItem('theme', newTheme);\n    this._theme$.next(newTheme);\n  }\n\n  public isDarkMode(): boolean {\n    return localStorage.getItem('theme') === 'dark';\n  }\n\n  public ngOnDestroy(): void {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-7dafed3b69f0d63732b6133e9ec9d6cd761a00b9fa4ce7b0cde0af85b48f503b636a6711f207051ca6c0f62bf61992226b31a4cc889753e7603073866db1d41d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dd-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<dd-header></dd-header>\n<div class=\"h-[94vh] overflow-y-scroll border-box\">\n  <main class=\"bg-light_primary dark:bg-dark_primary\">\n    <router-outlet></router-outlet>\n  </main>\n  <dd-footer></dd-footer>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-3e91b066d994ab96e586cec6c3d6cee85e70840679fdfe3a4b8575724bc8a13bc28a255dd8688c5d0888a4a19b8f990cb80cc2e2bc51cc797915ad58ae43d907",
            "file": "src/app/shared/components/button/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "\"primary\" | \"secondary\" | \"outline\"",
                    "decorators": []
                },
                {
                    "name": "as",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"button\" | \"a\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'dd-button',\n  templateUrl: './button.component.html',\n})\nexport class ButtonComponent {\n  @Input() appearance: 'primary' | 'secondary' | 'outline' = 'secondary';\n  @Input() as: 'button' | 'a' = 'button';\n  @Output() onClick = new EventEmitter<void>();\n\n  handleClick() {\n    this.onClick.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button\n  [ngClass]=\"{\n    'bg-porygon_blue hover:bg-porygon_blue_darker text-light_primary':\n      appearance === 'primary',\n    'bg-white hover:bg-light_tertiary dark:bg-black dark:hover:bg-dark_tertiary text-dark_primary dark:text-light_primary':\n      appearance === 'secondary',\n  }\"\n  type=\"button\"\n  class=\"py-2 px-4 h-10 text-sm flex justify-center items-center gap-2 rounded border border-light_tertiary dark:border-dark_tertiary cursor-pointer\"\n  (click)=\"handleClick()\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-f92ec679f756a84a03b0e7ef070787281699812a03a12fc2371a808bddc90eae8954d7925317e024c03f4be1ddfdb03d416fbb8566fa76a978afa293f1238d3b",
            "file": "src/app/shared/components/card/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent {\n  @Input() title?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"bg-light_secondary dark:bg-dark_secondary rounded w-full border-[1px] border-light_tertiary dark:border-dark_tertiary\"\n>\n  <dd-card-header\n    *ngIf=\"title\"\n    [title]=\"title\"\n    class=\"text-sm\"\n  ></dd-card-header>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "CardHeaderComponent",
            "id": "component-CardHeaderComponent-d7a51b0c38f9da85f0584e4414d6d3b28b13b2cb93490135b88f95a4844d8d7dd5352685449811fa6b0239443a99b3fdfd0c734b692c18cc495c24e278d30801",
            "file": "src/app/shared/components/card/card-header/card-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-card-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-card-header',\n  templateUrl: './card-header.component.html',\n})\nexport class CardHeaderComponent {\n  @Input() title: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h3\n  class=\"flex justify-center font-semibold bg-white dark:bg-black rounded-t p-2 border-b dark:border-dark_tertiary text-dark_primary dark:text-light_primary\"\n>\n  {{ title }}\n</h3>\n"
        },
        {
            "name": "CompoundButtonComponent",
            "id": "component-CompoundButtonComponent-4ed1dbd1e37016605e096d76d118f4c47484c457076bef097a2afd5b37925f5d6d5b5b962b05af412b1db090347451502093ad7f10769a7203939d8630d459df",
            "file": "src/app/shared/components/button/compound-button/compound-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-compound-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./compound-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "\"primary\" | \"secondary\"",
                    "decorators": []
                },
                {
                    "name": "buttonText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "secondaryText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'dd-compound-button',\n  templateUrl: './compound-button.component.html',\n})\nexport class CompoundButtonComponent {\n  @Input() appearance: 'primary' | 'secondary' = 'primary';\n  @Input() buttonText: string = '';\n  @Input() icon: string = '';\n  @Input() secondaryText?: string;\n  @Input() url?: string;\n\n  @Output() onClick = new EventEmitter<void>();\n\n  handleClick() {\n    this.onClick.emit();\n  }\n\n  get isPrimary() {\n    return this.appearance === 'primary';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "isPrimary": {
                    "name": "isPrimary",
                    "getSignature": {
                        "name": "isPrimary",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "templateData": "<button *ngIf=\"!url; else link\" (click)=\"handleClick()\"></button>\n<ng-template #link>\n  <a\n    class=\"flex justify-center items-center rounded gap-3 h-32 w-48 cursor-pointer bg-light_primary dark:bg-dark_primary p-4 transition outline outline-1 hover:outline-2 outline-light_tertiary dark:outline-dark_tertiary\"\n    routerLink=\"{{ url }}\"\n  >\n    <div class=\"flex justify-center items-center\">\n      <ng-icon class=\"text-3xl\" [name]=\"icon\"></ng-icon>\n    </div>\n    <div class=\"flex flex-col justify-center items-center\">\n      <h2 class=\"font-bold w-full\">{{ buttonText }}</h2>\n      <p class=\"hidden sm:mt-1 sm:block sm:text-[10px]\">\n        {{ secondaryText }}\n      </p>\n    </div>\n  </a>\n</ng-template>\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-be2032f5003b7b6a7b1c13ddee2d28064c5e205e9ee342a685160d695f4522ddf7dbe5dee8be4735ea1e68073093cc09f491ce947de67dd3e28dd86223fc6269",
            "file": "src/app/shared/components/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "DropdownSection[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "routerSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "showDropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "clickout",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription, filter } from 'rxjs';\nimport { DropdownSection } from 'src/app/core/models';\n\n@Component({\n  selector: 'dd-dropdown',\n  templateUrl: './dropdown.component.html',\n  animations: [\n    trigger('fadeInOut', [\n      state(\n        'void',\n        style({\n          opacity: 0,\n          transform: 'scale(0.95)',\n        })\n      ),\n      transition('void <=> *', animate('100ms ease-in-out')),\n    ]),\n  ],\n})\nexport class DropdownComponent implements OnDestroy {\n  @Input() sections: DropdownSection[] = [];\n  @Input() placeholder: string = '';\n  showDropdown: boolean = false;\n  routerSubscription: Subscription;\n\n  constructor(private eRef: ElementRef, private router: Router) {\n    this.routerSubscription = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.showDropdown = false;\n      });\n  }\n\n  toggleDropdown() {\n    this.showDropdown = !this.showDropdown;\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event: any) {\n    if (!this.eRef.nativeElement.contains(event.target)) {\n      this.showDropdown = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "eRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "eRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div\n  class=\"relative inline-block text-left rounded w-56 text-xs\"\n  *ngIf=\"sections && sections.length > 0\"\n>\n  <div>\n    <button\n      type=\"button\"\n      class=\"inline-flex justify-between items-center w-full h-10 gap-x-1.5 px-3 py-2 rounded cursor-pointer bg-white hover:bg-light_tertiary dark:bg-black dark:hover:bg-dark_tertiary border border-light_tertiary dark:border-dark_tertiary\"\n      id=\"menu-button\"\n      aria-expanded=\"true\"\n      aria-haspopup=\"true\"\n      (click)=\"toggleDropdown()\"\n    >\n      <span> {{ placeholder }}</span>\n      <ng-icon [name]=\"'heroChevronDownSolid'\"></ng-icon>\n    </button>\n  </div>\n  <ul\n    class=\"absolute z-40 left-0 origin-top w-full rounded-b bg-white dark:bg-black sm:rounded-b max-h-[60vh] overflow-y-scroll border-light_tertiary dark:border-dark_tertiary border-[1px] border-t-0 scrollbar-thumb-zinc-800 scrollbar-track-zinc-950\"\n    role=\"menu\"\n    aria-orientation=\"vertical\"\n    aria-labelledby=\"menu-button\"\n    tabindex=\"-1\"\n    *ngIf=\"showDropdown\"\n    [@fadeInOut]\n  >\n    <ng-container *ngFor=\"let section of sections; let i = index\">\n      <ng-container>\n        <div\n          id=\"menuitem-{{ i }}-{{ section.name }}\"\n          class=\"font-semibold px-2 py-1 bg-porygon_blue_darker text-light_primary\"\n          role=\"menuitem\"\n          tabindex=\"-1\"\n        >\n          {{ section.name }}\n        </div>\n      </ng-container>\n      <ng-container *ngFor=\"let option of section.options; let i = index\">\n        <a\n          id=\"menuitem-{{ i }}-{{ option.name }}\"\n          routerLink=\"{{ option.path }}\"\n          role=\"menuitem\"\n          class=\"block px-4 py-2 font-sans hover:bg-light_tertiary dark:hover:bg-dark_tertiary\"\n        >\n          {{ option.name }}\n        </a>\n      </ng-container>\n    </ng-container>\n  </ul>\n</div>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-d08c59817118e1e3ea7e2e45329a1543481a5fb29a6b99cc5c8c148ddd745067b0a121c2fb680b19e381840291595049f2557e3209e541f81ae3a90b34e4d6b7",
            "file": "src/app/core/layout/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CoreModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule, DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'dd-footer',\n  templateUrl: './footer.component.html',\n  standalone: true,\n  imports: [CoreModule, CommonModule, RouterLink],\n})\nexport class FooterComponent {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "templateData": "<footer\n  class=\"flex flex-col justify-center items-center bg-light_secondary dark:bg-dark_secondary p-4 gap-4\"\n>\n  <p\n    class=\"text-center text-sm text-dark_tertiary dark:text-light_tertiary h-20 sm:h-6\"\n  >\n    Pokémon images & names © 1995-2023 Nintendo/Game Freak. Pokémon data thanks\n    to\n    <a\n      href=\"https://pokeapi.co/\"\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      class=\"underline text-disc transition hover:text-disc_darker\"\n      >PokéAPI</a\n    >.\n  </p>\n</footer>\n"
        },
        {
            "name": "GamesComponent",
            "id": "component-GamesComponent-078bc77f7724cee271c2cfe68029f5155067005ec3db739d4aa2dd1af1b9d17e4250339a4ff00b8b3c4190431794602a5019492a676f433bdc650440f8f3c2ea",
            "file": "src/app/features/games/pages/games.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-games",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./games.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "urlValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "versionGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-games',\n  templateUrl: './games.component.html',\n})\nexport class GamesComponent {\n  public urlValue: string = '';\n  public versionGroup: any;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route = inject(ActivatedRoute);\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .pipe(\n        switchMap((params) => {\n          this.urlValue = params.get('slug') || '';\n          return this.supabase.getVersionGroupByIdentifier(this.urlValue);\n        })\n      )\n      .subscribe((data: any) => {\n        this.versionGroup = data;\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div class=\"max-w-screen-xl bg-zinc-950 rounded w-full\">\n    <div class=\"flex flex-col gap-3 pb-4 w-full\">\n      <dd-card-header\n        class=\"mb-2\"\n        [title]=\"\n          versionGroup && versionGroup.name\n            ? 'Pokémon ' + versionGroup.name\n            : ''\n        \"\n      ></dd-card-header>\n      <dd-card [title]=\"'News & Updates'\">\n        <dd-news-preview-list class=\"col-span-2\"></dd-news-preview-list\n      ></dd-card>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-4cd06f398bcb6649ee51cec76abff405cd2e7b60ab907201d9205f7d3d33e04e12663e509e2ecc8a73399691167df560d24b93d819edae99a98c3e9a76c51b13",
            "file": "src/app/core/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_themeService",
                    "defaultValue": "inject(ThemeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navItems",
                    "defaultValue": "headerNavItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CoreModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SharedModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "HeaderDropdownComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { headerNavItems } from 'src/app/core/models';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ThemeService } from '../../services/theme.service';\nimport { HeaderDropdownComponent } from './components/header-dropdown/header-dropdown.component';\n\n@Component({\n  selector: 'dd-header',\n  templateUrl: './header.component.html',\n  standalone: true,\n  imports: [\n    CoreModule,\n    CommonModule,\n    SharedModule,\n    RouterLink,\n    HeaderDropdownComponent,\n  ],\n})\nexport class HeaderComponent {\n  private _themeService = inject(ThemeService);\n  public navItems = headerNavItems;\n\n  toggleDarkMode(): void {\n    this._themeService.toggleDarkMode();\n  }\n\n  get isDarkMode(): boolean {\n    return this._themeService.isDarkMode();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "isDarkMode": {
                    "name": "isDarkMode",
                    "getSignature": {
                        "name": "isDarkMode",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 30
                    }
                }
            },
            "templateData": "<header\n  class=\"z-50 w-screen bg-white dark:bg-black h-[8vh] sm:h-[6vh] flex flex-nowrap gap-2 justify-between items-center px-4 shadow-md drop-shadow-md\"\n>\n  <div\n    class=\"flex flex-nowrap max-w-screen-xl justify-between items-center sm:gap-8\"\n  >\n    <a\n      class=\"flex justify-center items-center gap-2 h-[6vh] w-full sm:w-auto\"\n      routerLink=\"/\"\n    >\n      <img\n        src=\"../../assets/images/dubious-disc.png\"\n        width=\"40\"\n        height=\"40\"\n        alt=\"\"\n      />\n      <span\n        class=\"font-righteous pr-2 text-lg sm:text-xl md:text-3xl uppercase\"\n      >\n        Dubious Disc\n      </span>\n    </a>\n    <nav\n      aria-label=\"Global\"\n      class=\"flex flex-1 justify-center sm:justify-start items-center h-[8vh] sm:h-[6vh] w-full z-50\"\n    >\n      <ul class=\"flex justify-center sm:justify-start items-center h-full\">\n        <ng-container *ngFor=\"let navItem of navItems\">\n          <dd-header-dropdown\n            [navItem]=\"navItem\"\n            class=\"h-full\"\n          ></dd-header-dropdown>\n        </ng-container>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"flex items-center gap-2\">\n    <span class=\"sm:block hidden\">\n      <svg\n        class=\"h-6 w-6 text-gray-500\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n        />\n      </svg>\n    </span>\n    <dd-switch [checked]=\"isDarkMode\" (checkedChange)=\"toggleDarkMode()\">\n    </dd-switch>\n    <span class=\"\">\n      <svg\n        class=\"h-6 w-6 text-gray-500\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n        />\n      </svg>\n    </span>\n  </div>\n</header>\n"
        },
        {
            "name": "HeaderDropdownComponent",
            "id": "component-HeaderDropdownComponent-0df167b26c3bf27b6448be2688802bdaf345fbb87d1dc3fbae357f1c8213f79990d54ddc23d0e121785c34b96b3862e0f37e98db1b2fc39fb1fdb0004ecb5f09",
            "file": "src/app/core/layout/header/components/header-dropdown/header-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-header-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header-dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "navItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "NavigationItem",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CoreModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  HostListener,\n  Input,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NavigationItem } from 'src/app/core/models';\nimport { HeaderDropdownService } from './header-dropdown.service';\nimport { RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from 'src/app/core/core.module';\n@Component({\n  selector: 'dd-header-dropdown',\n  templateUrl: './header-dropdown.component.html',\n  standalone: true,\n  imports: [CoreModule, CommonModule, RouterLink],\n})\nexport class HeaderDropdownComponent implements OnInit, OnDestroy {\n  @Input() navItem!: NavigationItem;\n  isHovered = false;\n  isOpen = false;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private headerDropdownService: HeaderDropdownService,\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.headerDropdownService\n      .getOpenDropdown()\n      .subscribe((label) => {\n        if (label !== this.navItem.label) {\n          this.isOpen = false;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      this.headerDropdownService.setOpenDropdown(this.navItem.label);\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  closeDropdown(event: Event) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.isOpen = false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "headerDropdownService",
                        "type": "HeaderDropdownService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "headerDropdownService",
                        "type": "HeaderDropdownService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<li class=\"group h-full w-full z-50 sm:relative\">\n  <button\n    (click)=\"toggleDropdown()\"\n    [ngClass]=\"{\n      'bg-light_tertiary dark:bg-dark_tertiary': isOpen,\n    }\"\n    class=\"flex items-center justify-center transition h-full px-2 font-semibold text-sm hover:bg-light_tertiary dark:hover:bg-dark_tertiary\"\n  >\n    {{ navItem.label }}\n  </button>\n  <ul\n    *ngIf=\"navItem.sections && navItem.sections.length > 0\"\n    [ngClass]=\"{\n      'visible, scale-y-100': isOpen,\n      'invisible, scale-y-0': !isOpen,\n    }\"\n    class=\"absolute right-0 z-50 bg-white dark:bg-black sm:rounded-b border-light_tertiary dark:border-dark_tertiary border-[1px] mr-[1px] border-t-0 w-screen sm:w-80 overflow-y-auto max-h-[60vh] origin-top sm:origin-top-right transition ease-in-out duration-200 transform\"\n  >\n    <ng-container *ngFor=\"let section of navItem.sections\">\n      <li class=\"\">\n        <div\n          class=\"text-sm font-semibold px-2 py-1 bg-porygon_blue_darker text-light_primary\"\n        >\n          {{ section.sectionTitle }}\n        </div>\n        <ul class=\"space-y-1\">\n          <li *ngFor=\"let option of section.options\">\n            <a\n              routerLink=\"{{ option.link }}\"\n              class=\"block px-4 py-2 font-sans text-sm hover:bg-light_tertiary dark:hover:bg-dark_tertiary\"\n            >\n              {{ option.label }}\n            </a>\n          </li>\n        </ul>\n      </li>\n    </ng-container>\n  </ul>\n</li>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-d5e0f4a550f759f834ded38802da1c9c5528bb516478eda1c8f8ba0f10f999f688edbb97d6bf9f71f88afaf962f12b1f01e83704a9546c500fc0203c1297065b",
            "file": "src/app/features/home/pages/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pokemonSpecies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "randomPokemonIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getRandomPokemonIdentifier",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n  pokemonSpecies: string[] = [];\n  randomPokemonIdentifier: string = '';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n\n  ngOnInit(): void {\n    this.supabase.getAllPokemonSpeciesIdentifiers().subscribe((data: any) => {\n      this.pokemonSpecies = data;\n      this.randomPokemonIdentifier = this.getRandomPokemonIdentifier();\n    });\n  }\n\n  getRandomPokemonIdentifier() {\n    return this.pokemonSpecies[\n      Math.floor(Math.random() * this.pokemonSpecies.length)\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-col justify-start items-center h-full w-full p-4\">\n  <div class=\"grid grid-cols-2 xl:grid-cols-3 gap-4 mb-4 max-w-screen-2xl\">\n    <dd-card [title]=\"'News & Updates'\" class=\"col-span-2\">\n      <dd-news-preview-list class=\"col-span-2\"></dd-news-preview-list\n    ></dd-card>\n    <div class=\"col-span-2 lg:col-span-1\">\n      <dd-card [title]=\"'Quick Links'\">\n        <div class=\"flex flex-wrap p-4 gap-2 justify-center\">\n          <dd-compound-button\n            [url]=\"'/pokedex/scarlet-violet'\"\n            [icon]=\"'heroSwatchSolid'\"\n            [buttonText]=\"'Pokédex'\"\n            [secondaryText]=\"'View data from any main series game'\"\n          ></dd-compound-button>\n          <dd-compound-button\n            [url]=\"'/pokedex/national/' + randomPokemonIdentifier\"\n            [icon]=\"'heroQuestionMarkCircleSolid'\"\n            [buttonText]=\"'Random Pokémon'\"\n            [secondaryText]=\"'View a random Pokémon\\'s information'\"\n          ></dd-compound-button>\n        </div>\n      </dd-card>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NewsComponent",
            "id": "component-NewsComponent-b1681c0f41e7bd54b6fef1714d3bffec7004d933bf23057c47cf044a4fa3a86f2eb6cc4707a056aac5c8e535a62b45a8bd2c90f5fae877bcfa79ef6d67cdbb2a",
            "file": "src/app/features/news/pages/news.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-news",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./news.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "articleSlug",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "html",
                    "defaultValue": "htm.bind(vhtml)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "imagesLoaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "myPortableTextComponents",
                    "defaultValue": "{\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "post",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toHTML",
                    "args": [
                        {
                            "name": "text",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SanityService } from 'src/app/core/services/sanity.service';\nimport { toHTML, uriLooksSafe } from '@portabletext/to-html';\nimport htm from 'htm';\nimport vhtml from 'vhtml';\n\n@Component({\n  selector: 'dd-news',\n  templateUrl: './news.component.html',\n})\nexport class NewsComponent {\n  articleSlug: string = '';\n  post: any;\n  imagesLoaded: boolean = false;\n\n  html = htm.bind(vhtml);\n  myPortableTextComponents = {\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  };\n\n  constructor(\n    private sanityService: SanityService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(async (params) => {\n      this.articleSlug = params.get('slug') || '';\n      this.post = await this.sanityService.getPostBySlug(this.articleSlug);\n      this.post.author = await this.sanityService.getAuthorByRefence(\n        this.post.author._ref\n      );\n      this.post.mainImage = await this.sanityService.urlFor(\n        this.post.mainImage\n      );\n      this.post.author.image.asset = await this.sanityService.urlFor(\n        this.post.author.image.asset\n      );\n      this.imagesLoaded = true;\n    });\n  }\n\n  formatDate(dateString: string): string {\n    const date = new Date(dateString);\n    const day = ('0' + date.getDate()).slice(-2);\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  }\n\n  toHTML(text: any) {\n    return toHTML(text, { components: this.myPortableTextComponents });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanityService",
                        "type": "SanityService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "sanityService",
                        "type": "SanityService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <dd-card class=\"max-w-screen-md\">\n    <div\n      *ngIf=\"post && post.mainImage && imagesLoaded; else elseBlock\"\n      class=\"flex flex-col pb-4 w-full rounded\"\n    >\n      <img src=\"{{ post.mainImage }}\" class=\"rounded-t\" />\n      <h2 class=\"font-bold text-4xl p-4\">\n        {{ post.title }}\n      </h2>\n      <div\n        class=\"bg-light_tertiary dark:bg-dark_tertiary h-[1px] w-full rounded\"\n      ></div>\n      <div class=\"flex flex-row justify-between items-center p-4 w-full\">\n        <div\n          class=\"flex flex-row items-center gap-2\"\n          *ngIf=\"\n            post.author &&\n            post.author.image &&\n            post.author.name &&\n            post.author.image.asset &&\n            imagesLoaded\n          \"\n        >\n          <img\n            src=\"{{ post.author.image.asset }}\"\n            height=\"30\"\n            width=\"30\"\n            class=\"rounded-full\"\n          />\n          <span class=\"font-semibold\">\n            {{ post.author.name }}\n          </span>\n        </div>\n        <span class=\"font-semibold\">\n          {{ formatDate(post.publishedAt) }}\n        </span>\n      </div>\n      <div\n        class=\"bg-light_tertiary dark:bg-dark_tertiary h-[1px] w-full rounded\"\n      ></div>\n      <div\n        class=\"p-4 flex flex-col gap-3\"\n        [innerHTML]=\"toHTML(post.body)\"\n      ></div>\n    </div>\n    <ng-template #elseBlock>\n      <div class=\"flex w-full h-64 justify-center items-center\">\n        <dd-spinner></dd-spinner>\n      </div>\n    </ng-template>\n  </dd-card>\n</div>\n"
        },
        {
            "name": "NewsPreviewComponent",
            "id": "component-NewsPreviewComponent-dcb9acf8789abe7847eca8c3f74f22d6783bc6092c8802b62a0feb0f19d2e01dff3b2b13e7fdd7227593d337f12bebc60f4e3f2d2527e1da76fd3b47734e12b8",
            "file": "src/app/shared/components/news-preview/news-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-news-preview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./news-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "post",
                    "defaultValue": "{} as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "html",
                    "defaultValue": "htm.bind(vhtml)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "myPortableTextComponents",
                    "defaultValue": "{\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "publishedDay",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "publishedMonth",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "publishedYear",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "sanityService",
                    "defaultValue": "inject(SanityService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SanityService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toHTML",
                    "args": [
                        {
                            "name": "text",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, Input, OnInit } from '@angular/core';\nimport { SanityService } from 'src/app/core/services/sanity.service';\nimport { toHTML, uriLooksSafe } from '@portabletext/to-html';\nimport htm from 'htm';\nimport vhtml from 'vhtml';\n\n@Component({\n  selector: 'dd-news-preview',\n  templateUrl: './news-preview.component.html',\n})\nexport class NewsPreviewComponent implements OnInit {\n  @Input() post: any = {} as any;\n  imageUrl: string = '';\n\n  publishedYear: number = 0;\n  publishedMonth: string = '';\n  publishedDay: number = 0;\n\n  html = htm.bind(vhtml);\n  myPortableTextComponents = {\n    types: {},\n\n    marks: {\n      link: ({ children, value }: any) => {\n        const href = value.href || '';\n        if (uriLooksSafe(href)) {\n          const rel = href.startsWith('/') ? undefined : 'noreferrer noopener';\n          return this.html`<a href=\"${href}\" rel=\"${rel}\">${children}</a>`;\n        }\n        return children;\n      },\n    },\n  };\n\n  private sanityService: SanityService = inject(SanityService);\n\n  ngOnInit(): void {\n    const date = new Date(this.post.publishedAt); // 2009-11-10\n\n    this.publishedYear = date.getUTCFullYear();\n    this.publishedMonth = date.toLocaleString('default', { month: 'short' });\n    this.publishedDay = date.getUTCDate();\n\n    this.sanityService.urlFor(this.post.mainImage).then((url) => {\n      this.imageUrl = url;\n    });\n  }\n\n  toHTML(text: any) {\n    return toHTML(text, { components: this.myPortableTextComponents });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"flex bg-light_primary dark:bg-dark_primary rounded cursor-pointer transition outline outline-1 hover:outline-2 outline-light_tertiary dark:outline-dark_tertiary\"\n  [routerLink]=\"['/', 'news', post.slug.current]\"\n>\n  <div class=\"hidden sm:block sm:basis-56\">\n    <img\n      alt=\"Guitar\"\n      src=\"{{ imageUrl }}\"\n      class=\"aspect-square h-full w-full object-cover\"\n    />\n  </div>\n\n  <div class=\"flex flex-1 flex-col justify-between\">\n    <div class=\"border-s border-gray-900/10 p-4 sm:border-l-transparent sm:p-6\">\n      <a [routerLink]=\"['/', 'news', post.slug.current]\">\n        <h3 class=\"font-bold uppercase\">{{ post.title }}</h3>\n      </a>\n\n      <p\n        class=\"mt-2 line-clamp-3 text-sm/relaxed text-dark_tertiary dark:text-light_tertiary\"\n        [innerHTML]=\"toHTML(post.body)\"\n      >\n        {{ post.body[0][\"children\"][0][\"text\"] }}\n      </p>\n    </div>\n\n    <div class=\"sm:flex sm:items-end sm:justify-end\">\n      <a\n        [routerLink]=\"['/', 'news', post.slug.current]\"\n        class=\"block bg-porygon_blue px-5 py-3 text-center text-xs font-semibold uppercase transition hover:bg-porygon_blue_darker rounded-br text-light_primary\"\n      >\n        View Full Post\n      </a>\n    </div>\n  </div>\n</a>\n"
        },
        {
            "name": "NewsPreviewListComponent",
            "id": "component-NewsPreviewListComponent-6b0ffe64553507d6a9746c385d0b11b4119b24c65d4bbcbdd82a58121ae5900f2e3a958b1607c31dee617d1899a60b46b6c0970963590fd8231480851e77f96d",
            "file": "src/app/shared/components/news-preview-list/news-preview-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-news-preview-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./news-preview-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "posts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "groupPostsByDate",
                    "args": [
                        {
                            "name": "posts",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "posts",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateNews",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { SanityService } from 'src/app/core/services/sanity.service';\n\n@Component({\n  selector: 'dd-news-preview-list',\n  templateUrl: './news-preview-list.component.html',\n})\nexport class NewsPreviewListComponent implements OnChanges {\n  @Input() category?: string;\n  posts: any;\n\n  constructor(private sanityService: SanityService) {}\n\n  ngOnInit() {\n    this.updateNews();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['category'] && !changes['category'].firstChange) {\n      // The category input has changed. Update the component.\n      this.updateNews();\n    }\n  }\n\n  updateNews(): void {\n    if (this.category) {\n      this.sanityService.getPostsByCategory(this.category).then((posts) => {\n        this.posts = this.groupPostsByDate(posts);\n      });\n    } else {\n      this.sanityService.getPosts().then((posts) => {\n        this.posts = this.groupPostsByDate(posts);\n      });\n    }\n  }\n\n  groupPostsByDate(posts: any) {\n    const groupedPosts = posts.reduce((grouped: any, post: any) => {\n      const date = new Date(post.publishedAt).toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n      if (!grouped[date]) {\n        grouped[date] = [];\n      }\n      grouped[date].push(post);\n      return grouped;\n    }, {});\n\n    return Object.entries(groupedPosts);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanityService",
                        "type": "SanityService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "sanityService",
                        "type": "SanityService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"flex flex-col gap-3 items-center p-4\">\n  <ng-container *ngFor=\"let group of posts\">\n    <div class=\"w-full flex font-semibold underline-offset-8 underline\">\n      {{ group[0] }}\n    </div>\n    <dd-news-preview\n      *ngFor=\"let post of group[1]\"\n      [post]=\"post\"\n    ></dd-news-preview>\n  </ng-container>\n</div>\n<ng-template #elseBlock>\n  <dd-spinner></dd-spinner>\n</ng-template>\n"
        },
        {
            "name": "PokedexComponent",
            "id": "component-PokedexComponent-61ea0669af320b12bf28963ab0ca61ef6adddf9c01846945ceda8ad283c0c08bcfdfd99f33431193ccc55302f37722795e2ed301b6d8bdce328b8d2639cb1bc9",
            "file": "src/app/features/pokedex/pages/pokedex/pokedex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokedex",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokedex.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropdownSections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSection[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "listView",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngUnsubscribe",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokedexes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<pokedexes>[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedPokedex",
                    "defaultValue": "{} as Tables<'pokedexes'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<pokedexes>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "versionGroup",
                    "defaultValue": "{} as Tables<'version_groups'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<version_groups>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "versionGroupIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getAllPokedexVersionGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleListView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, forkJoin, switchMap, takeUntil } from 'rxjs';\nimport { DropdownSection, Tab, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex',\n  templateUrl: './pokedex.component.html',\n})\nexport class PokedexComponent implements OnInit {\n  public listView: boolean = false;\n  public versionGroupIdentifier: string = '';\n\n  public pokedexes: Tables<'pokedexes'>[] = [];\n  public selectedPokedex: Tables<'pokedexes'> = {} as Tables<'pokedexes'>;\n  public versionGroup: Tables<'version_groups'> =\n    {} as Tables<'version_groups'>;\n  public dropdownSections: DropdownSection[] = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route: ActivatedRoute = inject(ActivatedRoute);\n\n  private ngUnsubscribe = new Subject<void>();\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .pipe(\n        switchMap((params) => {\n          this.versionGroupIdentifier = params.get('version-group') || '';\n          return this.supabase.getVersionGroupByIdentifier(\n            this.versionGroupIdentifier\n          );\n        }),\n        switchMap((versionGroup) => {\n          this.versionGroup = versionGroup;\n          return this.supabase.getPokedexesByVersionGroupId(versionGroup.id);\n        })\n      )\n      .subscribe((data: Tables<'pokedexes'>[]) => {\n        this.pokedexes = data;\n        this.selectedPokedex = data[0];\n        this.getAllPokedexVersionGroups();\n      });\n  }\n\n  getAllPokedexVersionGroups(): void {\n    forkJoin({\n      versionGroups: this.supabase.getAllVersionGroups(),\n      generations: this.supabase.getAllGenerations(),\n      pokedexVersionGroups: this.supabase.getAllPokedexVersionGroups(),\n    })\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(({ versionGroups, generations, pokedexVersionGroups }) => {\n        const versionGroupIds = versionGroups.map((item: any) => item.id);\n        let filteredPokedexVersionGroups = pokedexVersionGroups.filter(\n          (pokedexVersionGroup: Tables<'pokedex_version_groups'>) =>\n            versionGroupIds.includes(pokedexVersionGroup.version_group_id)\n        );\n        const versionGroupsWithPokedexes = new Set(\n          filteredPokedexVersionGroups.map((item) => item.version_group_id)\n        );\n\n        this.dropdownSections = [\n          ...generations.reverse().map((generation) => {\n            return {\n              name: generation.name ?? '',\n              options: versionGroups\n                .filter(\n                  (versionGroup): boolean =>\n                    versionGroup.generation_id === generation.id &&\n                    versionGroupsWithPokedexes.has(versionGroup.id)\n                )\n                .map((versionGroup) => ({\n                  name: versionGroup.name,\n                  path: `/pokedex/${versionGroup.identifier}`,\n                })),\n            };\n          }),\n        ];\n      });\n  }\n\n  get pokedexTabs() {\n    return this.pokedexes.map((pokedex) => ({\n      name: pokedex.name,\n      identifier: pokedex.identifier,\n    }));\n  }\n\n  toggleListView() {\n    this.listView = !this.listView;\n  }\n\n  selectTab(tab: Tab) {\n    this.selectedPokedex =\n      this.pokedexes.find((pokedex) => pokedex.identifier === tab.identifier) ||\n      this.pokedexes[0];\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "pokedexTabs": {
                    "name": "pokedexTabs",
                    "getSignature": {
                        "name": "pokedexTabs",
                        "type": "",
                        "returnType": "",
                        "line": 84
                    }
                }
            },
            "templateData": "<div class=\"flex flex-col justify-start items-center w-full h-full\">\n  <div\n    class=\"grid grid-cols-2 xl:grid-cols-3 gap-2 m-4 max-w-screen-2xl h-full w-full\"\n  >\n    <div\n      class=\"col-span-2 xl:col-span-1 columns-2 xl:columns-1 flex flex-row xl:flex-col gap-4 p-2 xl:py-0 w-full\"\n    >\n      <dd-card [title]=\"'Filters & Options'\">\n        <div class=\"p-4 flex gap-2 items-center\">\n          <dd-dropdown\n            [sections]=\"dropdownSections\"\n            [placeholder]=\"\n              this.versionGroup.name ? this.versionGroup.name : 'Select Pokédex'\n            \"\n          >\n          </dd-dropdown>\n          <dd-switch\n            [checked]=\"listView\"\n            [label]=\"'List View'\"\n            (checkedChange)=\"toggleListView()\"\n          >\n          </dd-switch>\n        </div>\n      </dd-card>\n    </div>\n    <dd-card\n      class=\"col-span-2 h-full\"\n      [title]=\"\n        this.versionGroup.name ? this.versionGroup.name + ' Pokedex' : 'Pokedex'\n      \"\n    >\n      <div *ngIf=\"pokedexes.length > 0; else spinner\" class=\"p-4\">\n        <dd-tab-list\n          *ngIf=\"pokedexTabs.length > 1; else noTabsView\"\n          [tabs]=\"pokedexTabs\"\n          [activeTab]=\"selectedPokedex\"\n          (tabChange)=\"selectTab($event)\"\n        >\n          <dd-pokedex-view\n            [pokedex]=\"selectedPokedex\"\n            [listView]=\"listView\"\n            [versionGroupIdentifier]=\"versionGroupIdentifier\"\n          ></dd-pokedex-view\n        ></dd-tab-list>\n        <ng-template #noTabsView>\n          <dd-pokedex-view\n            [pokedex]=\"selectedPokedex\"\n            [listView]=\"listView\"\n            [versionGroupIdentifier]=\"versionGroupIdentifier\"\n          ></dd-pokedex-view>\n        </ng-template>\n      </div>\n      <ng-template #spinner>\n        <div class=\"flex w-full h-64 justify-center items-center\">\n          <dd-spinner></dd-spinner>\n        </div>\n      </ng-template>\n    </dd-card>\n  </div>\n</div>\n"
        },
        {
            "name": "PokedexGridViewItemComponent",
            "id": "component-PokedexGridViewItemComponent-553ac7174dfe34ed37d789c052f9573eac5c1fc364a80894fbce09749d3893f4c13417569751c3327c61acd1fd8cfdd7cb9a2d200ba2d39b7f59f61971cd6c5b",
            "file": "src/app/features/pokedex/components/pokedex-grid-view-item/pokedex-grid-view-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokedex-grid-view-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokedex-grid-view-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemon",
                    "defaultValue": "{} as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "imageURL",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, Input, OnInit } from '@angular/core';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex-grid-view-item',\n  templateUrl: './pokedex-grid-view-item.component.html',\n})\nexport class PokedexGridViewItemComponent implements OnInit {\n  @Input() pokemon: any = {} as any;\n  imageURL: string = '';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n\n  ngOnInit(): void {\n    this.imageURL = this.supabase.storage\n      .from('pokemon')\n      .getPublicUrl(\n        'home-icons/' + this.pokemon.species_id.id + '.png'\n      ).data.publicUrl;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"flex flex-col justify-center items-center rounded cursor-pointer bg-light_primary dark:bg-dark_primary transition outline outline-1 hover:outline-2 outline-light_tertiary dark:outline-dark_tertiary\"\n  style=\"width: 110px; height: 130px\"\n>\n  <img\n    class=\"transition-all duration-300 ease-in-out\"\n    [defaultImage]=\"'assets/images/question-icon.png'\"\n    [lazyLoad]=\"imageURL\"\n    height=\"75\"\n    width=\"75\"\n  />\n  <div\n    class=\"flex flex-col justify-center items-center text-center text-xs\"\n    style=\"height: 45px; width: 100%\"\n  >\n    <span class=\"text-[11.5px]\">№ {{ pokemon.pokedex_number }}</span>\n    <span>{{ pokemon.species_id.name }}</span>\n  </div>\n</div>\n"
        },
        {
            "name": "PokedexListViewItemComponent",
            "id": "component-PokedexListViewItemComponent-38eae1bde7426876ca889a4ead284fd070f143ab42cb4a8ed1ba749f6308e977bb3505a5f4400146fb4425de41d646ec896e75ad937e5e49a4f4ec043aee815b",
            "file": "src/app/features/pokedex/components/pokedex-list-view-item/pokedex-list-view-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokedex-list-view-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokedex-list-view-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemon",
                    "defaultValue": "{} as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "imageURL",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dd-pokedex-list-view-item',\n  templateUrl: './pokedex-list-view-item.component.html',\n})\nexport class PokedexListViewItemComponent implements OnInit {\n  @Input() pokemon: any = {} as any;\n  imageURL: string = '';\n\n  ngOnInit(): void {\n    this.imageURL = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${this.pokemon.species_id.id}.png`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"flex justify-between items-center cursor-pointer bg-light_primary dark:bg-dark_primary border-b border-x border-light_tertiary dark:border-dark_tertiary w-full h-12 px-2\"\n>\n  <div class=\"flex items-center text-center gap-2\">\n    <img\n      class=\"transition-all duration-300 ease-in-out\"\n      [defaultImage]=\"'assets/images/question-icon.png'\"\n      [lazyLoad]=\"imageURL\"\n      height=\"40\"\n      width=\"40\"\n    />\n    <span>№ {{ pokemon.pokedex_number }}</span>\n    <span>{{ pokemon.species_id.name }}</span>\n  </div>\n  <div class=\"flex text-sm\">\n    <span>{{ pokemon.species_id.genus }}</span>\n  </div>\n</div>\n"
        },
        {
            "name": "PokedexViewComponent",
            "id": "component-PokedexViewComponent-6699e456d1b21b5ebbce19f2bf57008098068a79393bf612ebf87cc3b608376de8dc036d42f8e49a6d7b4aac9545068bb2074e48e10e1e18acfdd01cd383e75d",
            "file": "src/app/features/pokedex/components/pokedex-view/pokedex-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokedex-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokedex-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "listView",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pokedex",
                    "defaultValue": "{} as Tables<'pokedexes'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Tables<pokedexes>",
                    "decorators": []
                },
                {
                    "name": "versionGroupIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pokemonEntries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPokemonClick",
                    "args": [
                        {
                            "name": "pokemon",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pokemon",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokedex-view',\n  templateUrl: './pokedex-view.component.html',\n})\nexport class PokedexViewComponent implements OnChanges {\n  @Input() pokedex: Tables<'pokedexes'> = {} as Tables<'pokedexes'>;\n  @Input() versionGroupIdentifier: string = '';\n  @Input() listView: boolean = false;\n  pokemonEntries: any = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private router: Router = inject(Router);\n\n  ngOnChanges() {\n    this.supabase\n      .getPokemonSpeciesByPokedexId(this.pokedex.id)\n      .subscribe((data: any) => {\n        this.pokemonEntries = data;\n      });\n  }\n\n  onPokemonClick(pokemon: any) {\n    let pokemonSpeciesIdentifier = pokemon.species_id.identifier;\n    this.router.navigate([\n      'pokedex',\n      this.versionGroupIdentifier,\n      pokemonSpeciesIdentifier,\n    ]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"flex flex-col rounded-b w-full\">\n  <div *ngIf=\"listView; else gridView\" class=\"flex flex-col w-full\">\n    <dd-pokedex-list-view-item\n      *ngFor=\"let pokemon of pokemonEntries; index as index\"\n      [pokemon]=\"pokemon\"\n      (click)=\"onPokemonClick(pokemon)\"\n      class=\"\"\n      [ngClass]=\"{\n        'border-t border-light_tertiary dark:border-dark_tertiary': index === 0\n      }\"\n    ></dd-pokedex-list-view-item>\n  </div>\n  <ng-template #gridView>\n    <div class=\"flex flex-wrap gap-2 justify-center p-2\">\n      <dd-pokedex-grid-view-item\n        *ngFor=\"let pokemon of pokemonEntries\"\n        [pokemon]=\"pokemon\"\n        (click)=\"onPokemonClick(pokemon)\"\n      ></dd-pokedex-grid-view-item>\n    </div>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "PokemonComponent",
            "id": "component-PokemonComponent-26e91110a3d80c7bbf13d2e964dc32d829f48dd0021131565046b5546150ebf4b00ec7e3c5bcafb7b81a09eefbff0069a3c806067258e72b2af2e59e513c640f",
            "file": "src/app/features/pokemon/pages/pokemon/pokemon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemonForms",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<pokemon>[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "pokemonSpecies",
                    "defaultValue": "{} as Tables<'pokemon_species'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<pokemon_species>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedForm",
                    "defaultValue": "{} as Tables<'pokemon'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<pokemon>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectedVersionGroup",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "versionGroupIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "versions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<versions>[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "handleNewSelectedForm",
                    "args": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSelectedVersionGroup",
                    "args": [
                        {
                            "name": "versionGroup",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "versionGroup",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleVersions",
                    "args": [
                        {
                            "name": "versions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "versions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap, tap, Subject } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon',\n  templateUrl: './pokemon.component.html',\n})\nexport class PokemonComponent implements OnInit {\n  pokemonForms: Tables<'pokemon'>[] = [];\n  selectedForm: Tables<'pokemon'> = {} as Tables<'pokemon'>;\n  pokemonSpecies: Tables<'pokemon_species'> = {} as Tables<'pokemon_species'>;\n\n  versionGroupIdentifier: string = '';\n  selectedVersionGroup: any = '';\n  versions: Tables<'versions'>[] = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private route: ActivatedRoute = inject(ActivatedRoute);\n  private destroy$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(\n        switchMap((params) => {\n          const pokemonIdentifier = params['pokemon'];\n          this.versionGroupIdentifier = params['version-group'];\n          return this.supabase.getPokemonSpeciesByIdentifier(pokemonIdentifier);\n        }),\n        tap((pokemonSpecies) => {\n          this.pokemonSpecies = pokemonSpecies;\n        }),\n        switchMap((pokemonSpecies) => {\n          return this.supabase.getPokemonBySpeciesId(pokemonSpecies.id);\n        }),\n        tap((pokemon) => {\n          this.pokemonForms = pokemon;\n          this.selectedForm = pokemon[0];\n        })\n      )\n      .subscribe(() => {});\n  }\n\n  handleNewSelectedForm(form: any) {\n    this.selectedForm = form;\n  }\n\n  handleVersions(versions: any) {\n    this.versions = versions;\n  }\n\n  handleSelectedVersionGroup(versionGroup: any) {\n    this.selectedVersionGroup = versionGroup;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div\n    class=\"max-w-screen-lg bg-light_secondary dark:bg-dark_secondary rounded p-4 w-full min-h-[500px]\"\n  >\n    <ng-container *ngIf=\"pokemonSpecies && pokemonForms; else loading\">\n      <div class=\"flex flex-col items-center w-full\">\n        <div class=\"flex flex-col items-center w-full\">\n          <dd-pokemon-navigation\n            [pokedexGeneration]=\"versionGroupIdentifier\"\n            [pokemonSpecies]=\"pokemonSpecies\"\n            (selectedVersionGroup)=\"handleSelectedVersionGroup($event)\"\n            (versions)=\"handleVersions($event)\"\n            class=\"w-full\"\n          ></dd-pokemon-navigation>\n          <div class=\"flex flex-col gap-3 w-full\">\n            <section class=\"flex flex-col sm:flex-row gap-3 w-full\">\n              <dd-pokemon-summary\n                [selectedForm]=\"selectedForm\"\n                [pokemonSpecies]=\"pokemonSpecies\"\n                class=\"h-full w-full sm:w-1/2\"\n              >\n              </dd-pokemon-summary>\n              <dd-pokemon-data\n                [pokemon]=\"selectedForm\"\n                [pokemon_species]=\"pokemonSpecies\"\n                class=\"h-full w-full sm:w-1/2\"\n              ></dd-pokemon-data>\n            </section>\n            <section class=\"w-full\">\n              <dd-pokemon-forms\n                *ngIf=\"pokemonForms.length > 1\"\n                (newSelectedForm)=\"handleNewSelectedForm($event)\"\n                [pokemonForms]=\"pokemonForms\"\n                [selectedForm]=\"selectedForm\"\n              ></dd-pokemon-forms>\n            </section>\n            <section class=\"flex flex-col sm:flex-row gap-3 w-full\">\n              <dd-pokemon-stats\n                *ngIf=\"selectedForm.id\"\n                [pokemonId]=\"selectedForm.id\"\n                class=\"h-full w-full sm:w-1/2\"\n              ></dd-pokemon-stats>\n              <dd-pokemon-descriptions\n                *ngIf=\"pokemonSpecies.id\"\n                [pokemonSpeciesId]=\"pokemonSpecies.id\"\n                [versions]=\"versions\"\n                class=\"h-full w-full sm:w-1/2\"\n              ></dd-pokemon-descriptions>\n            </section>\n            <section class=\"flex flex-col gap-3 w-full\">\n              <dd-pokemon-moves\n                *ngIf=\"selectedForm.id\"\n                [pokemonId]=\"selectedForm.id\"\n                [versionGroupId]=\"selectedVersionGroup.id\"\n                class=\"h-full w-full\"\n              ></dd-pokemon-moves>\n            </section>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-template #loading>\n      <div class=\"w-full\">\n        <dd-spinner></dd-spinner>\n      </div>\n    </ng-template>\n  </div>\n</div>\n"
        },
        {
            "name": "PokemonDataComponent",
            "id": "component-PokemonDataComponent-6d4ac58e8aacee578484c2ec24a604fc2fad1002c7ca09408d17cf179d067e89788fa7f9933e48abf2911486e68d162028776d71b08e8594fecc9d968ab2af1f",
            "file": "src/app/features/pokemon/components/pokemon-data/pokemon-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-data",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-data.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "pokemon_species",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemonAbilities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, inject } from '@angular/core';\nimport { Subject, pipe, takeUntil } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-data',\n  templateUrl: './pokemon-data.component.html',\n})\nexport class PokemonDataComponent implements OnChanges {\n  @Input() pokemon?: any;\n  @Input() pokemon_species?: any;\n\n  pokemonAbilities: any = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    if (!this.pokemon.id) return;\n    this.supabase\n      .getPokemonAbilitiesByPokemonId(this.pokemon.id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.pokemonAbilities = data;\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<dd-card [title]=\"'Pokédex Data'\">\n  <table\n    class=\"table-auto w-full bg-light_primary dark:bg-dark_primary rounded-b text-sm\"\n  >\n    <thead class=\"sr-only\">\n      <tr>\n        <th>Data</th>\n        <th>Value(s)</th>\n      </tr>\n    </thead>\n    <tr class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n      <td class=\"w-1/4 p-2 font-semibold\">Classification:</td>\n      <td class=\"p-2\">\n        {{ pokemon_species.genus }}\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n      <td class=\"w-1/4 p-2 font-semibold\">Abilities:</td>\n      <td class=\"p-2\">\n        <ul>\n          <li\n            *ngFor=\"let pokemonAbility of pokemonAbilities\"\n            [ngClass]=\"pokemonAbility.is_hidden ? 'italic' : ''\"\n          >\n            {{ pokemonAbility.ability_id.name }}\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n      <td class=\"w-1/4 p-2 font-semibold\">Pokédex №:</td>\n      <td class=\"p-2\">\n        <ul>\n          <li>#{{ pokemon_species.id }} - National</li>\n        </ul>\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n      <td class=\"w-1/4 p-2 font-semibold\">Height:</td>\n      <td class=\"p-2\">\n        {{ pokemon.height | decimetersToFeetAndInches }}\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n      <td class=\"w-1/4 p-2 font-semibold\">Weight:</td>\n      <td class=\"p-2\">\n        {{ pokemon.weight | decimetersToPounds }}\n      </td>\n    </tr>\n    <tr class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n      <td class=\"w-1/4 p-2 font-semibold\">Gender Ratio:</td>\n      <td class=\"p-2\">\n        <dd-pokemon-gender-ratio\n          [rate]=\"pokemon_species.gender_rate\"\n        ></dd-pokemon-gender-ratio>\n      </td>\n    </tr>\n  </table>\n</dd-card>\n"
        },
        {
            "name": "PokemonDescriptionsComponent",
            "id": "component-PokemonDescriptionsComponent-98dd75fd77d659c03cce3a631dfcf6508ddce3498d4bd0510f1095bc7632080064c13a35a2f7edd99f1116ea8968f1bfadb2e7724c432da221fc41d2f90a4649",
            "file": "src/app/features/pokemon/components/pokemon-descriptions/pokemon-descriptions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-descriptions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-descriptions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemonSpeciesId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "versions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Tables<versions>[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "descriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tables<pokemon_species_flavor_text>[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getVersionName",
                    "args": [
                        {
                            "name": "versionId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "versionId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, Input, OnChanges } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-descriptions',\n  templateUrl: './pokemon-descriptions.component.html',\n})\nexport class PokemonDescriptionsComponent implements OnChanges {\n  @Input() pokemonSpeciesId: number = 0;\n  @Input() versions: Tables<'versions'>[] = [];\n\n  descriptions: Tables<'pokemon_species_flavor_text'>[] = [];\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    const versionIds = this.versions.map((version) => version.id);\n\n    this.supabase\n      .getPokemonSpeciesFlavorTextWithVersionIdBySpeciesId(\n        this.pokemonSpeciesId,\n        versionIds\n      )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((descriptions) => {\n        this.descriptions = descriptions;\n      });\n  }\n\n  getVersionName(versionId: number): string {\n    const version = this.versions.find((version) => version.id === versionId);\n    return version ? version.name : '';\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<dd-card [title]=\"'Pokédex Descriptions'\">\n  <table\n    *ngIf=\"descriptions.length > 0 && versions; else noDescriptions\"\n    class=\"table-auto w-full bg-light_primary dark:bg-dark_primary rounded-b text-sm\"\n  >\n    <thead class=\"sr-only\">\n      <tr>\n        <th>Version</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tr\n      *ngFor=\"let description of descriptions; let i = index\"\n      [ngClass]=\"{\n        'border-b border-y-light_tertiary dark:border-y-dark_tertiary': i !== descriptions.length - 1\n      }\"\n    >\n      <td class=\"w-1/4 p-2 font-semibold\">\n        {{ getVersionName(description.version_id) }}\n      </td>\n      <td class=\"p-2\">\n        {{ description.flavor_text }}\n      </td>\n    </tr>\n  </table>\n  <ng-template #noDescriptions>\n    <div\n      class=\"flex items-center justify-center w-full h-full bg-light_primary dark:bg-dark_primary rounded-b\"\n    >\n      <span class=\"text-sm p-4 text-center\">\n        No Pokédex descriptions are available for this Pokémon for any Pokédex\n        in this version group.\n      </span>\n    </div>\n  </ng-template>\n</dd-card>\n"
        },
        {
            "name": "PokemonFormsComponent",
            "id": "component-PokemonFormsComponent-a0a70c9025e55aef1dd3e5723a1c76f3e76f32fc24e319581a872895f1531e9d9c27e658ec784a7c967ab5bc5d53d56436bcddaf556a7d6e1e45f81c225cb235",
            "file": "src/app/features/pokemon/components/pokemon-forms/pokemon-forms.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-forms",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-forms.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemonForms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "selectedForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "newSelectedForm",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getFormImage",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectForm",
                    "args": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, inject, Input, Output } from '@angular/core';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-forms',\n  templateUrl: './pokemon-forms.component.html',\n})\nexport class PokemonFormsComponent {\n  @Input() pokemonForms: any;\n  @Input() selectedForm: any;\n\n  @Output() newSelectedForm = new EventEmitter<any>();\n\n  private supabase: SupabaseService = inject(SupabaseService);\n\n  getFormImage(id: any) {\n    return this.supabase.storage\n      .from('pokemon')\n      .getPublicUrl('home-icons/' + id + '.png').data.publicUrl;\n  }\n\n  selectForm(form: any) {\n    if (form.id === this.selectedForm.id) {\n      return;\n    } else {\n      this.newSelectedForm.emit(form);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<dd-card [title]=\"'Pokémon Forms'\"\n  ><div\n    class=\"flex flex-row gap-2 justify-start items-center bg-light_primary dark:bg-dark_primary p-2 rounded-b overflow-x-scroll pb-4\"\n  >\n    <div\n      *ngFor=\"let pokemonForm of pokemonForms\"\n      class=\"flex flex-col flex-shrink-0 justify-center items-center h-36 w-36 gap-1 cursor-pointer rounded bg-light_secondary dark:bg-dark_secondary hover:bg-light_tertiary dark:hover:bg-dark_tertiary border border-light_tertiary dark:border-dark_tertiary\"\n      (click)=\"selectForm(pokemonForm)\"\n    >\n      <img [src]=\"getFormImage(pokemonForm.id)\" class=\"object-contain h-24\" />\n      <span class=\"text-center text-xs text-clip\">{{\n        pokemonForm.form_name ? pokemonForm.form_name : pokemonForm.name\n      }}</span>\n    </div>\n  </div></dd-card\n>\n"
        },
        {
            "name": "PokemonGenderRatioComponent",
            "id": "component-PokemonGenderRatioComponent-815c7e195ba4ba57f6f7d0b1c1e4fcf93b3671077ce2b5b62d7c14278eb96325d8eec0f4295e24d825e76e7a4d2dccf76acc22123ffc58e08ede4337674d51c8",
            "file": "src/app/features/pokemon/components/pokemon-gender-ratio/pokemon-gender-ratio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-gender-ratio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-gender-ratio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "rate",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getGenderRatioBarClass",
                    "args": [
                        {
                            "name": "rate",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"bg-genderless rounded-r\" | \"bg-female rounded-r\" | \"bg-male rounded-r\" | \"bg-male\"",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rate",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getGenderRatioBarStyle",
                    "args": [
                        {
                            "name": "rate",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ width: string; }",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rate",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-pokemon-gender-ratio',\n  templateUrl: './pokemon-gender-ratio.component.html',\n})\nexport class PokemonGenderRatioComponent {\n  @Input() rate: number = 0;\n\n  getGenderRatioBarClass(rate: number) {\n    if (rate === -1) {\n      return 'bg-genderless rounded-r';\n    } else if (rate === 8) {\n      return 'bg-female rounded-r';\n    } else if (rate === 0) {\n      return 'bg-male rounded-r';\n    } else {\n      return 'bg-male';\n    }\n  }\n\n  getGenderRatioBarStyle(rate: number) {\n    if (rate === -1) {\n      return { width: '100%' };\n    } else if (rate === 0) {\n      return { width: '100%' };\n    } else if (rate === 8) {\n      return { width: '100%' };\n    } else {\n      return { width: 100 - rate * 12.5 + '%' };\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex bg-female w-full rounded h-5\">\n  <div\n    class=\"rounded-l\"\n    data-testid=\"gender-ratio-bar\"\n    [ngClass]=\"getGenderRatioBarClass(rate)\"\n    [ngStyle]=\"getGenderRatioBarStyle(rate)\"\n  ></div>\n</div>\n"
        },
        {
            "name": "PokemonMovesComponent",
            "id": "component-PokemonMovesComponent-68066a673b4030b3dec2487dc526d8c0125c3e9efbbe30c5775feec772ef0bb2fc3b8b241ae02ba89239ae55098aed13dde0fd0641bebd2c147cfd5aba3a4937",
            "file": "src/app/features/pokemon/components/pokemon-moves/pokemon-moves.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-moves",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-moves.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemonId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "versionGroupId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "{} as Tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "columns",
                    "defaultValue": "[] as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "[] as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "moveGroups",
                    "defaultValue": "[] as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedMoveGroup",
                    "defaultValue": "[] as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "[] as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "moveLevel",
                    "args": [
                        {
                            "name": "move",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "move",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectMoveGroup",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Tab } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-moves',\n  templateUrl: './pokemon-moves.component.html',\n})\nexport class PokemonMovesComponent implements OnChanges, OnDestroy {\n  @Input() pokemonId: number = 0;\n  @Input() versionGroupId: number = 0;\n\n  tabs: Tab[] = [] as any;\n  activeTab: Tab = {} as Tab;\n\n  moveGroups: any = [] as any;\n  selectedMoveGroup: any = [] as any;\n\n  columns: any = [] as any;\n  data: any = [] as any;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges() {\n    if (this.pokemonId === 0 || this.versionGroupId === 0) return;\n    this.supabase\n      .getPokemonMovesByPokemonId(this.pokemonId, this.versionGroupId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.moveGroups = Object.values(\n          data.reduce((acc: any, move: any) => {\n            const key = move.pokemon_move_method_id.id;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(move);\n            return acc;\n          }, {})\n        );\n        this.tabs = this.moveGroups.map((group: any) => ({\n          name: group[0].pokemon_move_method_id.name,\n          identifier: group[0].pokemon_move_method_id.identifier,\n        }));\n        this.selectedMoveGroup = this.moveGroups[0];\n        this.columns = [\n          { label: 'Level', property: 'level' },\n          { label: 'Move', property: 'move_name' },\n          { label: 'Type', property: 'type_id' },\n          { label: 'Power', property: 'power' },\n          { label: 'Accuracy', property: 'accuracy' },\n        ];\n        this.data = this.selectedMoveGroup.map((move: any) => ({\n          level: this.moveLevel(move),\n          move_name: move.move_id.name,\n          type_id: move.move_id.type_id,\n          power: move.move_id.power,\n          accuracy: move.move_id.accuracy,\n        }));\n        this.activeTab = this.tabs[0];\n      });\n  }\n\n  selectMoveGroup(tab: Tab) {\n    this.activeTab = tab;\n    this.columns = [\n      { label: 'Level', property: 'level' },\n      { label: 'Move', property: 'move_name' },\n      { label: 'Type', property: 'type_id' },\n      { label: 'Power', property: 'power' },\n      { label: 'Accuracy', property: 'accuracy' },\n    ];\n    this.selectedMoveGroup = this.moveGroups.find(\n      (group: any) =>\n        group[0].pokemon_move_method_id.identifier === tab.identifier\n    );\n    this.data = this.selectedMoveGroup.map((move: any) => ({\n      level: this.moveLevel(move),\n      move_name: move.move_id.name,\n      type_id: move.move_id.type_id,\n      power: move.move_id.power,\n      accuracy: move.move_id.accuracy,\n    }));\n  }\n\n\n  moveLevel(move: any) {\n    if (move.move_pokemon_move_method_id === 1 && move.level === 0) {\n      return 'evolve';\n    }\n    if (move.move_pokemon_move_method_id === 1 && move.level === 1) {\n      return '—';\n    }\n    return move.level;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<dd-card [title]=\"'Learnable Moves'\">\n  <div\n    *ngIf=\"moveGroups.length > 0\"\n    class=\"flex text-xs w-full text-center overflow-x-scroll pt-2 bg-light_primary dark:bg-dark_primary\"\n  >\n    <dd-tab-list\n      class=\"w-full\"\n      [tabs]=\"tabs\"\n      [activeTab]=\"activeTab\"\n      (tabChange)=\"selectMoveGroup($event)\"\n    >\n      <dd-table [columns]=\"columns\" [data]=\"data\">\n      </dd-table>\n    </dd-tab-list>\n  </div>\n</dd-card>\n"
        },
        {
            "name": "PokemonNavigationComponent",
            "id": "component-PokemonNavigationComponent-48412f29b8199995e294823a4b5abde4e3c15bac9296999328a82dfe808e6456ae3ff554ae4360df0308280fd281af6aaac53ffa96d7f1f9869e564b2f807f81",
            "file": "src/app/features/pokemon/components/pokemon-navigation/pokemon-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-navigation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokedexGeneration",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pokemonSpecies",
                    "defaultValue": "{} as Tables<'pokemon_species'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Tables<pokemon_species>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedVersionGroup",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "versions",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nextPokemonIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "nextPokemonImageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pokedexDropdownOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSection[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pokemonDropdownOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSection[]",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "previousPokemonIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "previousPokemonImageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "randomPokemonIdentifier",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedVersionGroupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getPokedexDropdownOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokemonDropdownOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToPokedex",
                    "args": [
                        {
                            "name": "pokedexGeneration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pokedexGeneration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateToPokemon",
                    "args": [
                        {
                            "name": "pokemonIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pokemonIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { takeUntil, tap, switchMap, forkJoin, map, Subject } from 'rxjs';\nimport { DropdownSection, Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-navigation',\n  templateUrl: './pokemon-navigation.component.html',\n})\nexport class PokemonNavigationComponent implements OnChanges {\n  @Input() pokedexGeneration = '';\n  @Input() pokemonSpecies: Tables<'pokemon_species'> =\n    {} as Tables<'pokemon_species'>;\n\n  @Output() selectedVersionGroup = new EventEmitter<any>();\n  @Output() versions = new EventEmitter<any>();\n\n  public selectedVersionGroupName?: string;\n  public pokemonDropdownOptions: DropdownSection[] = [];\n  public pokedexDropdownOptions: DropdownSection[] = [];\n  public randomPokemonIdentifier: string = '';\n  public previousPokemonImageUrl: string = '';\n  public previousPokemonIdentifier: string = '';\n  public nextPokemonImageUrl: string = '';\n  public nextPokemonIdentifier: string = '';\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private router: Router = inject(Router);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    this.getPokemonDropdownOptions();\n    this.getPokedexDropdownOptions();\n  }\n\n  getPokemonDropdownOptions() {\n    let availablePokedexes: Tables<'pokedexes'>[] = [];\n    this.supabase\n      .getVersionGroupByIdentifier(this.pokedexGeneration)\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((versionGroup) => {\n          this.selectedVersionGroup.emit(versionGroup);\n          this.selectedVersionGroupName = versionGroup.name;\n          this.supabase\n            .getVersionsByVersionGroupId(versionGroup.id)\n            .subscribe((versions) => {\n              this.versions.emit(versions);\n            });\n        }),\n        switchMap((versionGroup) => {\n          return this.supabase.getPokedexesByVersionGroupId(versionGroup.id);\n        }),\n        switchMap((pokedexes) => {\n          availablePokedexes = pokedexes;\n          return forkJoin(\n            pokedexes.map((pokedex: any) =>\n              this.supabase.getPokemonSpeciesByPokedexId(pokedex.id)\n            )\n          );\n        }),\n        map((pokemonArray: any) => {\n          const combined = pokemonArray.flat();\n          this.randomPokemonIdentifier =\n            combined[\n              Math.floor(Math.random() * combined.length)\n            ]?.species_id.identifier;\n\n          const currentPokemonIndex = combined.findIndex(\n            (pokemon: any) =>\n              pokemon.species_id.identifier === this.pokemonSpecies.identifier\n          );\n\n          const previousPokemon = combined[currentPokemonIndex - 1]?.species_id;\n\n          if (previousPokemon) {\n            this.previousPokemonIdentifier = previousPokemon.identifier;\n            this.previousPokemonImageUrl = this.supabase.storage\n              .from('pokemon')\n              .getPublicUrl(\n                'home-previews/' + previousPokemon.id + '.png'\n              ).data.publicUrl;\n          }\n\n          const nextPokemon = combined[currentPokemonIndex + 1]?.species_id;\n\n          if (nextPokemon) {\n            this.nextPokemonIdentifier = nextPokemon.identifier;\n            this.nextPokemonImageUrl = this.supabase.storage\n              .from('pokemon')\n              .getPublicUrl(\n                'home-previews/' + nextPokemon.id + '.png'\n              ).data.publicUrl;\n          }\n\n          return availablePokedexes.map((pokedex: any, index: number) => {\n            return {\n              name: pokedex.name,\n              options: pokemonArray[index].map(\n                (pokemon: any, index: number) => {\n                  return {\n                    name: `№ ${index + 1} ` + pokemon.species_id.name,\n                    path:\n                      '/pokedex/' +\n                      this.pokedexGeneration +\n                      '/' +\n                      pokemon.species_id.identifier,\n                  };\n                }\n              ),\n            };\n          });\n        })\n      )\n      .subscribe((data) => {\n        this.pokemonDropdownOptions = data;\n      });\n  }\n\n  getPokedexDropdownOptions(): void {\n    if (!this.pokemonSpecies || !this.pokemonSpecies.id) return;\n    forkJoin({\n      versionGroups: this.supabase.getAllVersionGroups(),\n      generations: this.supabase.getAllGenerations(),\n      pokedexVersionGroups: this.supabase.getAllPokedexVersionGroups(),\n      pokemonDexNumbers: this.supabase.getPokemonDexNumbersBySpeciesId(\n        this.pokemonSpecies.id\n      ),\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        ({\n          versionGroups,\n          generations,\n          pokedexVersionGroups,\n          pokemonDexNumbers,\n        }) => {\n          const versionGroupIds = versionGroups.map((item: any) => item.id);\n          let filteredPokedexVersionGroups = pokedexVersionGroups.filter(\n            (pokedexVersionGroup: Tables<'pokedex_version_groups'>) =>\n              versionGroupIds.includes(pokedexVersionGroup.version_group_id)\n          );\n          const dexNumbers = pokemonDexNumbers.map((item) => item.pokedex_id);\n          filteredPokedexVersionGroups = filteredPokedexVersionGroups.filter(\n            (pokedexVersionGroup: Tables<'pokedex_version_groups'>) =>\n              dexNumbers.includes(pokedexVersionGroup.pokedex_id)\n          );\n          const versionGroupsWithPokedexes = new Set(\n            filteredPokedexVersionGroups.map((item) => item.version_group_id)\n          );\n\n          this.pokedexDropdownOptions = [\n            ...generations\n              .reverse()\n              .reduce((acc: DropdownSection[], generation) => {\n                const matchingVersionGroups = versionGroups.filter(\n                  (versionGroup): boolean =>\n                    versionGroup.generation_id === generation.id &&\n                    versionGroupsWithPokedexes.has(versionGroup.id)\n                );\n\n                if (matchingVersionGroups.length > 0) {\n                  acc.push({\n                    name: generation.name ?? '',\n                    options: matchingVersionGroups.map((versionGroup) => ({\n                      name: versionGroup.name,\n                      path: `/pokedex/${versionGroup.identifier}/${this.pokemonSpecies?.identifier}`,\n                    })),\n                  });\n                }\n\n                return acc;\n              }, []),\n          ];\n        }\n      );\n  }\n\n  navigateToPokemon(pokemonIdentifier: string) {\n    this.router.navigate([\n      '/pokedex',\n      this.pokedexGeneration,\n      pokemonIdentifier,\n    ]);\n  }\n\n  navigateToPokedex(pokedexGeneration: string) {\n    this.router.navigate(['/pokedex/' + pokedexGeneration]);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<section class=\"flex justify-between items-center w-full mb-2\">\n  <div class=\"flex flex-col-reverse gap-2 sm:flex-row sm:items-center\">\n    <dd-button\n      *ngIf=\"previousPokemonIdentifier && previousPokemonImageUrl\"\n      (onClick)=\"navigateToPokemon(previousPokemonIdentifier)\"\n    >\n      <div class=\"flex justify-evenly items-center\">\n        <ng-icon [name]=\"'heroChevronLeftSolid'\"></ng-icon>\n        <img\n          class=\"transition-all duration-300 ease-in-out\"\n          [defaultImage]=\"'assets/images/question-icon.png'\"\n          [lazyLoad]=\"previousPokemonImageUrl\"\n          height=\"20\"\n          width=\"20\"\n          alt=\"\"\n        />\n      </div>\n    </dd-button>\n    <dd-button\n      attr.aria-label=\"Go To Pokédex: {{ pokedexGeneration }}\"\n      (onClick)=\"navigateToPokedex(pokedexGeneration)\"\n    >\n      <ng-icon [name]=\"'heroSwatchSolid'\"></ng-icon>\n    </dd-button>\n  </div>\n  <div\n    class=\"flex flex-col sm:flex-row items-center gap-3\"\n    *ngIf=\"this.pokemonSpecies.id\"\n  >\n    <dd-dropdown\n      [sections]=\"this.pokedexDropdownOptions\"\n      [placeholder]=\"this.selectedVersionGroupName ?? 'Select Pokédex'\"\n    >\n    </dd-dropdown>\n    <dd-dropdown\n      [placeholder]=\"this.pokemonSpecies.name ?? 'Select Pokémon'\"\n      [sections]=\"pokemonDropdownOptions\"\n    ></dd-dropdown>\n  </div>\n  <div class=\"flex flex-col gap-2 sm:flex-row sm:items-center items-end\">\n    <dd-button\n      aria-label=\"Go To A Random Pokémon In The Pokédex\"\n      (onClick)=\"navigateToPokemon(randomPokemonIdentifier)\"\n    >\n      <ng-icon [name]=\"'bootstrapDice6Fill'\"></ng-icon>\n    </dd-button>\n    <dd-button\n      *ngIf=\"nextPokemonIdentifier && nextPokemonImageUrl\"\n      (onClick)=\"navigateToPokemon(nextPokemonIdentifier)\"\n    >\n      <div class=\"flex justify-evenly items-center\">\n        <img\n          class=\"transition-all duration-300 ease-in-out\"\n          [defaultImage]=\"'assets/images/question-icon.png'\"\n          [lazyLoad]=\"nextPokemonImageUrl\"\n          height=\"20\"\n          width=\"20\"\n          alt=\"\"\n        />\n        <ng-icon [name]=\"'heroChevronRightSolid'\"></ng-icon>\n      </div>\n    </dd-button>\n  </div>\n</section>\n"
        },
        {
            "name": "PokemonStatsComponent",
            "id": "component-PokemonStatsComponent-d31bb6c16873e6fa7ffdb3949cb0606713004931800abfc0d5187c90236db22286fe4f872a6db1d7d479d931cb3b17829bd965492d4cb1ba4c80a4ff22bf100a",
            "file": "src/app/features/pokemon/components/pokemon-stats/pokemon-stats.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-stats",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-stats.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemonId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stats",
                    "defaultValue": "[] as any",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "total",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "getProgressBarClass",
                    "args": [
                        {
                            "name": "stat",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"bg-good_stat\" | \"bg-medium_stat\" | \"bg-bad_stat\"",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stat",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProgressBarStyle",
                    "args": [
                        {
                            "name": "base_stat",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ width: string; }",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "base_stat",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-stats',\n  templateUrl: './pokemon-stats.component.html',\n})\nexport class PokemonStatsComponent implements OnChanges, OnDestroy {\n  @Input() pokemonId: number = 0;\n  stats: any = [] as any;\n  total: number = 0;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges() {\n    this.supabase\n      .getPokemonStatsByPokemonId(this.pokemonId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.stats = data;\n        this.total = data.reduce(\n          (total: number, stat: any) => total + stat.base_stat,\n          0\n        );\n      });\n  }\n\n  getProgressBarClass(stat: number) {\n    if (stat >= 90) {\n      return 'bg-good_stat';\n    } else if (stat >= 60) {\n      return 'bg-medium_stat';\n    } else {\n      return 'bg-bad_stat';\n    }\n  }\n\n  getProgressBarStyle(base_stat: number) {\n    return { width: (base_stat / 255) * 100 + '%' };\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<dd-card [title]=\"'Pokémon Base Stats'\">\n  <table\n    class=\"table-auto w-full bg-light_primary dark:bg-dark_primary rounded-b text-sm\"\n  >\n    <thead class=\"sr-only\">\n      <tr>\n        <th>Stat</th>\n        <th>Base</th>\n        <th>Progress</th>\n      </tr>\n    </thead>\n    <tr\n      *ngFor=\"let stat of stats; index as i\"\n      class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\"\n    >\n      <td class=\"p-2 pr-0 w-2/4 font-semibold\">\n        {{ stat.stat_id.name }}\n      </td>\n      <td class=\"p-2 text-right w-1/4\">\n        {{ stat.base_stat }}\n      </td>\n      <td class=\"p-2\">\n        <div class=\"w-full h-5 rounded bg-light_tertiary dark:bg-dark_tertiary\">\n          <div\n            class=\"rounded-l h-full flex justify-center items-center\"\n            [ngClass]=\"getProgressBarClass(stat.base_stat)\"\n            [ngStyle]=\"getProgressBarStyle(stat.base_stat)\"\n          ></div>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"p-2 font-semibold text-sm text-left\">Total</td>\n      <td class=\"p-2 font-semibold text-sm text-right\">{{ total }}</td>\n    </tr>\n  </table>\n</dd-card>\n"
        },
        {
            "name": "PokemonSummaryComponent",
            "id": "component-PokemonSummaryComponent-a438f346a36a4872fcba2bb66d8d97e0e996cac69b2f0382410d3d1f9b7e0b4c26eafa901ae51b6ef80954d89f7642cac0abe7eafcc70486fc9b56cbd127aaab",
            "file": "src/app/features/pokemon/components/pokemon-summary/pokemon-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-pokemon-summary",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon-summary.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemonSpecies",
                    "defaultValue": "{} as Tables<'pokemon_species'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Tables<pokemon_species>",
                    "decorators": []
                },
                {
                    "name": "selectedForm",
                    "defaultValue": "{} as Tables<'pokemon'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Tables<pokemon>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "female",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pokemonTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "shiny",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "supabase",
                    "defaultValue": "inject(SupabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "genderToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getImageUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTypeBackgroundColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shinyToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, Input, OnChanges } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Tables } from 'src/app/core/models';\nimport { SupabaseService } from 'src/app/core/services/supabase.service';\n\n@Component({\n  selector: 'dd-pokemon-summary',\n  templateUrl: './pokemon-summary.component.html',\n})\nexport class PokemonSummaryComponent implements OnChanges {\n  @Input() selectedForm: Tables<'pokemon'> = {} as Tables<'pokemon'>;\n  @Input() pokemonSpecies: Tables<'pokemon_species'> =\n    {} as Tables<'pokemon_species'>;\n  pokemonTypes: any;\n  imageUrl: string = '';\n  shiny: boolean = false;\n  female: boolean = false;\n\n  private supabase: SupabaseService = inject(SupabaseService);\n  private destroy$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    if (!this.selectedForm.id) return;\n    this.supabase\n      .getPokemonTypesByPokemonId(this.selectedForm.id)\n      .subscribe((data) => {\n        this.pokemonTypes = data;\n      });\n    this.getImageUrl();\n  }\n\n  getImageUrl() {\n    let url = 'home-previews/';\n\n    this.shiny ? (url += 'shiny/') : null;\n    this.female ? (url += 'female/') : null;\n    url += this.selectedForm.id + '.png';\n\n    this.imageUrl = this.supabase.storage\n      .from('pokemon')\n      .getPublicUrl(url).data.publicUrl;\n  }\n\n  getTypeBackgroundColor() {\n    if (this.pokemonTypes && this.pokemonTypes.length > 1) {\n      return (\n        'linear-gradient(to bottom right, #' +\n        this.pokemonTypes[0].type_id.darker_type_color +\n        ',' +\n        '#' +\n        this.pokemonTypes[1].type_id.darker_type_color +\n        ')'\n      );\n    } else if (this.pokemonTypes && this.pokemonTypes.length == 1) {\n      return '#' + this.pokemonTypes[0].type_id.darker_type_color;\n    } else {\n      return 'linear-gradient(to bottom right, #27272a, #27272a)';\n    }\n  }\n\n  shinyToggle() {\n    this.shiny = !this.shiny;\n    this.getImageUrl();\n  }\n\n  genderToggle() {\n    this.female = !this.female;\n    this.getImageUrl();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div\n  class=\"text-center border border-light_tertiary dark:border-dark_tertiary h-full w-full rounded flex flex-col justify-between\"\n>\n  <div class=\"relative h-full w-full\">\n    <dd-button class=\"absolute top-2 left-2\" (onClick)=\"shinyToggle()\">\n      <ng-icon\n        [name]=\"'heroSparklesSolid'\"\n        [ngClass]=\"{ 'text-orange-300': shiny }\"\n        aria-labelledby=\"shiny-button-label\"\n      ></ng-icon>\n      <div class=\"sr-only\" id=\"shiny-button-label\">\n        Toggle Pokémon's Shiny Sprite\n      </div>\n    </dd-button>\n    <dd-button\n      *ngIf=\"pokemonSpecies.has_gender_differences\"\n      class=\"absolute top-14 left-2\"\n      (onClick)=\"genderToggle()\"\n    >\n      <ng-icon\n        [name]=\"'bootstrapGenderFemale'\"\n        [ngClass]=\"{ 'text-pink-400': female }\"\n        aria-labelledby=\"gender-button-label\"\n      ></ng-icon>\n      <div class=\"sr-only\" id=\"gender-button-label\">\n        Toggle Pokémon's Gender, When It Affects Appearance\n      </div>\n    </dd-button>\n    <div\n      class=\"w-full h-full flex justify-center items-center rounded-t\"\n      [style.background]=\"getTypeBackgroundColor()\"\n    >\n      <img\n        src=\"{{ this.imageUrl }}\"\n        class=\"w-full h-full object-contain min-w-[300px] max-w-[390px] rounded-t\"\n      />\n    </div>\n  </div>\n  <div>\n    <div\n      class=\"bg-white dark:bg-black border-b border-light_tertiary dark:border-dark_tertiary\"\n      style=\"height: 50px\"\n    >\n      <h2 class=\"p-2\">\n        <span class=\"font-bold text-xl\"> {{ selectedForm.name }}</span>\n      </h2>\n    </div>\n    <div\n      class=\"flex justify-between items-center p-2 bg-light_primary dark:bg-dark_primary\"\n      *ngIf=\"pokemonTypes && pokemonTypes.length > 0\"\n      [ngClass]=\"\n        pokemonTypes.length > 1\n          ? 'justify-content-between'\n          : 'justify-content-center'\n      \"\n    >\n      <dd-type-box\n        *ngFor=\"let type of pokemonTypes\"\n        [type]=\"type.type_id\"\n      ></dd-type-box>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-96a3659673895f3e4abec58356b82c7c5142710ef17979ed697938b620b5133e874e69835d1490035d825d561b8efb377c5e8aa967ea3c1156f89c8ac53c904e",
            "file": "src/app/shared/components/spinner/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dd-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"w-8\" role=\"status\">\n  <svg\n    aria-hidden=\"true\"\n    class=\"w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-porygon_blue\"\n    viewBox=\"0 0 100 101\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n      fill=\"currentFill\"\n    />\n  </svg>\n  <span class=\"sr-only\">Loading...</span>\n</div>\n"
        },
        {
            "name": "SwitchComponent",
            "id": "component-SwitchComponent-b6678df5f02cfcfa9b7b2585748b7a1034d1ecb372f788e1c7cced9a1f0e6fb7dc98e522d663a82b4aee4592c5e3eaca90f257693e11ee2444a8ead7c1c9b8d5",
            "file": "src/app/shared/components/switch/switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "idCounter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSwitch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dd-switch',\n  templateUrl: './switch.component.html',\n})\nexport class SwitchComponent implements OnInit {\n  @Input() checked: boolean = false;\n  @Input() label?: string;\n  @Output() checkedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  static idCounter = 0;\n  id: string = '';\n\n  ngOnInit() {\n    this.id = `toggle-${SwitchComponent.idCounter++}`;\n  }\n\n  toggleSwitch(): void {\n    this.checked = !this.checked;\n    this.checkedChange.emit(this.checked);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex justify-center items-center gap-2\">\n  <div class=\"relative inline-block w-10 align-middle select-none\">\n    <input\n      type=\"checkbox\"\n      id=\"{{ id }}\"\n      [(ngModel)]=\"checked\"\n      (change)=\"toggleSwitch()\"\n      class=\"absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer checked:bg-porygon_blue checked:top-0 checked:end-0 focus:outline-none active:bg-porygon_blue_darker\"\n    />\n    <label\n      for=\"{{ id }}\"\n      [ngClass]=\"checked ? 'bg-porygon_blue' : 'bg-light_tertiary'\"\n      class=\"toggle-label block overflow-hidden h-6 rounded-full cursor-pointer\"\n    ></label>\n  </div>\n  <span class=\"text-sm\">\n    {{ label }}\n  </span>\n</div>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-ef5052ebff293f2f3574d84b6dff7dea683f0c7d43aa8e1d6e685d3a9276470e584554068983a4a1fef68b84d282e385e301db801bb065fb7b5730b806558666",
            "file": "src/app/shared/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TableColumn[]",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "showTableHeaders",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface TableColumn {\n  label: string;\n  property: string;\n}\n\n@Component({\n  selector: 'dd-table',\n  templateUrl: './table.component.html',\n})\nexport class TableComponent {\n  @Input() data: any[] = [];\n  @Input() columns: TableColumn[] = [];\n  @Input() showTableHeaders?: boolean = true;\n\n  // Add any additional properties or methods here\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<table class=\"table-auto w-full bg-light_primary dark:bg-dark_primary rounded-b text-sm\">\n  <thead [ngClass]=\"showTableHeaders ? '' : 'hidden'\">\n    <tr class=\"text-left\">\n      <th class=\"p-2\" *ngFor=\"let column of columns\">{{ column.label }}</th>\n    </tr>\n  </thead>\n  <tr *ngFor=\"let item of data\" class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\">\n    <td class=\"p-2\" *ngFor=\"let column of columns\">\n      <ng-container *ngIf=\"column.property === 'type_id'; else itemTemplate\">\n        <dd-type-box [type]=\"item[column.property]\" [size]=\"'sm'\"></dd-type-box>\n      </ng-container>\n      <ng-template #itemTemplate>\n        {{ item[column.property] }}\n      </ng-template>\n  </tr>\n</table>\n\n<!-- <table\n  class=\"table-auto w-full bg-light_primary dark:bg-dark_primary rounded-b text-sm\"\n>\n  <thead>\n    <tr class=\"text-left\">\n      <th class=\"p-2\">Level</th>\n      <th class=\"p-2\">Move</th>\n      <th class=\"p-2\">Type</th>\n      <th class=\"p-2\">Power</th>\n      <th class=\"p-2\">Accuracy</th>\n    </tr>\n  </thead>\n  <tr\n    *ngFor=\"let move of moveGroup; index as i\"\n    class=\"border-b border-y-light_tertiary dark:border-y-dark_tertiary\"\n  >\n    <td class=\"p-2\">{{ moveLevel(move) }}</td>\n    <td class=\"p-2\">{{ move.move_id.name }}</td>\n    <td class=\"p-2\">\n      <div class=\"h-6 w-16 text-xs\">\n        <dd-type-box [type]=\"move.move_id.type_id\" [size]=\"'sm'\"></dd-type-box>\n      </div>\n    </td>\n    <td class=\"p-2\">{{ move.move_id.power ? move.move_id.power : \"—\" }}</td>\n    <td class=\"p-2\">\n      {{ move.move_id.accuracy ? move.move_id.accuracy : \"—\" }}\n    </td>\n  </tr>\n</table> -->\n"
        },
        {
            "name": "TabListComponent",
            "id": "component-TabListComponent-e83d30f31bae6aeadf0316364ba7e9ee1acf55a6c567a575f2ef87806c283d263604f82de2103ff1ebc735868c290112b1031af23ffe7136275cef78c47263f4",
            "file": "src/app/shared/components/tab-list/tab-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-tab-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.tabs[0]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "Tab[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tabChange",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<Tab>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Tab } from 'src/app/core/models';\n\n@Component({\n  selector: 'dd-tab-list',\n  templateUrl: './tab-list.component.html',\n})\nexport class TabListComponent {\n  @Input() tabs: Tab[] = [];\n  @Input() activeTab: Tab = this.tabs[0];\n  @Output() tabChange: EventEmitter<Tab> = new EventEmitter<Tab>();\n\n  selectTab(tab: Tab) {\n    this.activeTab = tab;\n    this.tabChange.emit(tab);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-col\">\n  <ul class=\"flex text-xs text-center\">\n    <li\n      *ngFor=\"let tab of tabs\"\n      class=\"my-2 flex flex-col hover:bg-light_tertiary dark:hover:bg-dark_tertiary\"\n      (click)=\"selectTab(tab)\"\n      [ngClass]=\"{\n        'cursor-default': tab.identifier === activeTab.identifier,\n        'cursor-pointer': tab.identifier !== activeTab.identifier\n      }\"\n    >\n      <span class=\"py-2 px-3\">\n        {{ tab.name }}\n      </span>\n      <div\n        *ngIf=\"tab.identifier === activeTab.identifier\"\n        class=\"h-[2px] w-full bg-porygon_blue_darker\"\n      ></div>\n    </li>\n  </ul>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "TeamBuilderComponent",
            "id": "component-TeamBuilderComponent-0b84644c70cf44f5ca5c2c2bbebd13032fdfecbdebce7e17bd4608e5fd12ca87953f06b4d0613c7cc5a7e96de01b2ba70636920d9043ffe816e73d98d516a685",
            "file": "src/app/features/team-builder/pages/team-builder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-team-builder",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./team-builder.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dd-team-builder',\n  templateUrl: './team-builder.component.html',\n})\nexport class TeamBuilderComponent {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "templateData": "<div class=\"flex flex-col items-center p-4\">\n  <div class=\"max-w-screen-xl bg-zinc-950 rounded w-full\">\n    <div class=\"flex flex-col gap-3 pb-4 w-full\">\n      <dd-card-header\n        class=\"mb-2\"\n        [title]=\"'Pokémon Team Builder'\"\n      ></dd-card-header>\n      <div class=\"h-96 text-center\">\n        <p>Coming soon!</p>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TypeBoxComponent",
            "id": "component-TypeBoxComponent-8ddbe76ce37d52a9606f50f570263600d9672fcce90634b04e4ef852fcb278e4fcefa20d2b652239c4c026ef24ea90c993a180af41f94f73ce2b15a1512cfa0e",
            "file": "src/app/shared/components/type-box/type-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-type-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./type-box.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "{} as Tables<'types'>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "Tables<types>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Tables } from 'src/app/core/models';\n\n@Component({\n  selector: 'dd-type-box',\n  templateUrl: './type-box.component.html',\n})\nexport class TypeBoxComponent {\n  @Input() type: Tables<'types'> = {} as Tables<'types'>;\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"flex justify-center items-center rounded\"\n  data-testid=\"type-box\"\n  [ngClass]=\"{\n    'py-1 px-2 w-20 text-xs': size === 'sm',\n    'py-2 px-4 w-24 text-sm': size === 'md',\n    'py-3 px-6 w-28 text-md': size === 'lg'\n  }\"\n  [style.background]=\"'#' + type.type_color\"\n>\n  <span class=\"font-bold white-outlined\" data-testid=\"type-box-text\">{{\n    type.name\n  }}</span>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-41222611b5fe8b74dd5aaa5a668e8f18594170f5ae9c2a2ad26d43c39caf1bec2b92528b5e6ec29baa015dbb7c4a07fb26d58585ffd94e098f073ab3507a8812",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, isDevMode } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './core/layout/header/header.component';\nimport { FooterComponent } from './core/layout/footer/footer.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { PokedexModule } from './features/pokedex/pokedex.module';\nimport { HomeModule } from './features/home/home.module';\nimport { TeamBuilderModule } from './features/team-builder/team-builder.module';\nimport { NewsModule } from './features/news/news.module';\nimport { GamesModule } from './features/games/games.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      \"import('./features/home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'pokedex/:version-group',\n    loadChildren: () =>\n      \"import('./features/pokedex/pokedex.module').then((m) => m.PokedexModule)\",\n  },\n  {\n    path: 'pokedex/:version-group/:pokemon',\n    loadChildren: () =>\n      \"import('./features/pokemon/pokemon.module').then((m) => m.PokemonModule)\",\n  },\n  {\n    path: 'games/:slug',\n    loadChildren: () =>\n      \"import('./features/games/games.module').then((m) => m.GamesModule)\",\n  },\n  {\n    path: 'news/:slug',\n    loadChildren: () =>\n      \"import('./features/news/news.module').then((m) => m.NewsModule)\",\n  },\n  {\n    path: 'team-builder',\n    loadChildren: () =>\n      \"import('./features/team-builder/team-builder.module').then(\\\n        (m) => m.TeamBuilderModule\\\n      )\",\n  },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    HeaderComponent,\n    FooterComponent,\n    HomeModule,\n    PokedexModule,\n    RouterModule.forRoot(routes),\n    TeamBuilderModule,\n    NewsModule,\n    GamesModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "GamesModule"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeModule"
                        },
                        {
                            "name": "NewsModule"
                        },
                        {
                            "name": "PokedexModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TeamBuilderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-4e50ed7efb73d227c77dcdd39f924ed7b327b6c735806bf3a04d4f7180287dc2126bdd321cc0bd0055835e2c372b153b8828037906e0ecff296a12e13a9f8501",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule],\n})\nexport class CoreModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GamesModule",
            "id": "module-GamesModule-a3bb77b5852c168c0c8ada3ed85c516286429736228de9b0b4d28de11e47a7818ababe37888666ca1fffcab25bb2266c153bd1471e937a168b342a76ee5f4220",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/games/games.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { GamesComponent } from './pages/games.component';\n\n@NgModule({\n  declarations: [GamesComponent],\n  imports: [CommonModule, CoreModule, SharedModule],\n})\nexport class GamesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GamesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-b018b549ee001589c084fb98e2d5bf0a75066b9645cb7254b6cc687f24af94cec337b2e0f1c31f84953c85ca2aa02074fe91040a0743ebd4b5238642f7a4377a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { HomeComponent } from './pages/home.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgIconsModule } from '@ng-icons/core';\nimport {\n  heroQuestionMarkCircleSolid,\n  heroSwatchSolid,\n} from '@ng-icons/heroicons/solid';\n\nconst routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    NgIconsModule.withIcons({\n      heroSwatchSolid,\n      heroQuestionMarkCircleSolid,\n    }),\n  ],\n})\nexport class HomeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewsModule",
            "id": "module-NewsModule-4d258218c477cf6c74d79358c7b44be11cb7a65256e94309adad67fd7c3641355f5803b9fc010ca0fc8bb886e7938a535d4dd1d22c6b97ba0bef24e493448187",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/news/news.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { NewsComponent } from './pages/news.component';\n\nconst routes = [{ path: '', component: NewsComponent }];\n\n@NgModule({\n  declarations: [NewsComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class NewsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PokedexModule",
            "id": "module-PokedexModule-b3c14e021a485036dce15de148084999fec8847dcf6913aa696bb9bb450af574506ba6302fe289baaa02f25c639b44ebc651c8eb7c0648ac2de1eb0bae9dd5d1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/pokedex/pokedex.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { PokedexComponent } from './pages/pokedex/pokedex.component';\nimport { PokedexGridViewItemComponent } from './components/pokedex-grid-view-item/pokedex-grid-view-item.component';\nimport { PokedexListViewItemComponent } from './components/pokedex-list-view-item/pokedex-list-view-item.component';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgIconsModule } from '@ng-icons/core';\nimport {\n  heroChevronLeftSolid,\n  heroChevronRightSolid,\n  heroSwatchSolid,\n  heroSparklesSolid,\n} from '@ng-icons/heroicons/solid';\nimport {\n  bootstrapDice6Fill,\n  bootstrapGenderFemale,\n  bootstrapGenderMale,\n} from '@ng-icons/bootstrap-icons';\nimport { PokedexViewComponent } from './components/pokedex-view/pokedex-view.component';\n\nconst routes = [{ path: '', component: PokedexComponent }];\n\n@NgModule({\n  declarations: [\n    PokedexComponent,\n    PokedexGridViewItemComponent,\n    PokedexListViewItemComponent,\n    PokedexViewComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    LazyLoadImageModule,\n    NgIconsModule.withIcons({\n      heroChevronLeftSolid,\n      heroChevronRightSolid,\n      heroSwatchSolid,\n      bootstrapDice6Fill,\n      bootstrapGenderFemale,\n      bootstrapGenderMale,\n      heroSparklesSolid,\n    }),\n  ],\n})\nexport class PokedexModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PokedexComponent"
                        },
                        {
                            "name": "PokedexGridViewItemComponent"
                        },
                        {
                            "name": "PokedexListViewItemComponent"
                        },
                        {
                            "name": "PokedexViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PokemonModule",
            "id": "module-PokemonModule-e9921890da001d70e73325328d41dc494db482a1973944a44d2903e579d8573845378456b549f1d95fac3536bb1c63708b5fce7422bb38c174867e359b3bb23a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/pokemon/pokemon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { PokemonComponent } from './pages/pokemon/pokemon.component';\nimport { PokemonDataComponent } from './components/pokemon-data/pokemon-data.component';\nimport { PokemonDescriptionsComponent } from './components/pokemon-descriptions/pokemon-descriptions.component';\nimport { PokemonFormsComponent } from './components/pokemon-forms/pokemon-forms.component';\nimport { PokemonGenderRatioComponent } from './components/pokemon-gender-ratio/pokemon-gender-ratio.component';\nimport { PokemonNavigationComponent } from './components/pokemon-navigation/pokemon-navigation.component';\nimport { PokemonStatsComponent } from './components/pokemon-stats/pokemon-stats.component';\nimport { NgIconsModule } from '@ng-icons/core';\nimport {\n  heroChevronLeftSolid,\n  heroChevronRightSolid,\n  heroSwatchSolid,\n  heroSparklesSolid,\n} from '@ng-icons/heroicons/solid';\nimport {\n  bootstrapDice6Fill,\n  bootstrapGenderFemale,\n  bootstrapGenderMale,\n} from '@ng-icons/bootstrap-icons';\nimport { PokemonSummaryComponent } from './components/pokemon-summary/pokemon-summary.component';\nimport { PokemonMovesComponent } from './components/pokemon-moves/pokemon-moves.component';\n\nconst routes = [{ path: '', component: PokemonComponent }];\n\n@NgModule({\n  declarations: [\n    PokemonComponent,\n    PokemonDataComponent,\n    PokemonDescriptionsComponent,\n    PokemonFormsComponent,\n    PokemonGenderRatioComponent,\n    PokemonMovesComponent,\n    PokemonNavigationComponent,\n    PokemonStatsComponent,\n    PokemonSummaryComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    LazyLoadImageModule,\n    NgIconsModule.withIcons({\n      heroChevronLeftSolid,\n      heroChevronRightSolid,\n      heroSwatchSolid,\n      bootstrapDice6Fill,\n      bootstrapGenderFemale,\n      bootstrapGenderMale,\n      heroSparklesSolid,\n    }),\n  ],\n})\nexport class PokemonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PokemonComponent"
                        },
                        {
                            "name": "PokemonDataComponent"
                        },
                        {
                            "name": "PokemonDescriptionsComponent"
                        },
                        {
                            "name": "PokemonFormsComponent"
                        },
                        {
                            "name": "PokemonGenderRatioComponent"
                        },
                        {
                            "name": "PokemonMovesComponent"
                        },
                        {
                            "name": "PokemonNavigationComponent"
                        },
                        {
                            "name": "PokemonStatsComponent"
                        },
                        {
                            "name": "PokemonSummaryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-7239a3177c409ee0ad9991106d35858e8e68f430ff72e996cdfe261c0e62073c7442e66ef021286ac6dad837411b35ad139c5ad3458ce36b4883a2e11efb18fc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DecimetersToFeetAndInchesPipe } from './pipes/decimeters-to-feet-and-inches/decimeters-to-feet-and-inches.pipe';\nimport { DecimetersToPoundsPipe } from './pipes/decimeters-to-pounds/decimeters-to-pounds.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { TypeBoxComponent } from './components/type-box/type-box.component';\nimport { CardHeaderComponent } from './components/card/card-header/card-header.component';\nimport { RouterModule } from '@angular/router';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgIconsModule } from '@ng-icons/core';\nimport { heroChevronDownSolid } from '@ng-icons/heroicons/solid';\nimport { CardComponent } from './components/card/card/card.component';\nimport { ButtonComponent } from './components/button/button/button.component';\nimport { NewsPreviewComponent } from './components/news-preview/news-preview.component';\nimport { NewsPreviewListComponent } from './components/news-preview-list/news-preview-list.component';\nimport { CompoundButtonComponent } from './components/button/compound-button/compound-button.component';\nimport { SwitchComponent } from './components/switch/switch.component';\nimport { TabListComponent } from './components/tab-list/tab-list.component';\nimport { TableComponent } from './components/table/table.component';\n\n@NgModule({\n  declarations: [\n    DecimetersToFeetAndInchesPipe,\n    DecimetersToPoundsPipe,\n    TypeBoxComponent,\n    NewsPreviewComponent,\n    DropdownComponent,\n    ButtonComponent,\n    CompoundButtonComponent,\n    CardComponent,\n    CardHeaderComponent,\n    NewsPreviewListComponent,\n    SpinnerComponent,\n    SwitchComponent,\n    TableComponent,\n    TabListComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    NgIconsModule.withIcons({\n      heroChevronDownSolid,\n    }),\n  ],\n  exports: [\n    DecimetersToFeetAndInchesPipe,\n    DecimetersToPoundsPipe,\n    TypeBoxComponent,\n    DropdownComponent,\n    NewsPreviewComponent,\n    ButtonComponent,\n    CompoundButtonComponent,\n    CardComponent,\n    CardHeaderComponent,\n    NewsPreviewListComponent,\n    SpinnerComponent,\n    SwitchComponent,\n    TableComponent,\n    TabListComponent\n  ],\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardHeaderComponent"
                        },
                        {
                            "name": "CompoundButtonComponent"
                        },
                        {
                            "name": "DecimetersToFeetAndInchesPipe"
                        },
                        {
                            "name": "DecimetersToPoundsPipe"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "NewsPreviewComponent"
                        },
                        {
                            "name": "NewsPreviewListComponent"
                        },
                        {
                            "name": "SpinnerComponent"
                        },
                        {
                            "name": "SwitchComponent"
                        },
                        {
                            "name": "TabListComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TypeBoxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardHeaderComponent"
                        },
                        {
                            "name": "CompoundButtonComponent"
                        },
                        {
                            "name": "DecimetersToFeetAndInchesPipe"
                        },
                        {
                            "name": "DecimetersToPoundsPipe"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "NewsPreviewComponent"
                        },
                        {
                            "name": "NewsPreviewListComponent"
                        },
                        {
                            "name": "SpinnerComponent"
                        },
                        {
                            "name": "SwitchComponent"
                        },
                        {
                            "name": "TabListComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TypeBoxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TeamBuilderModule",
            "id": "module-TeamBuilderModule-377ef65c056dd5f0c24b1202e8060cc894c7d31741001a9d4425286dafbaecb855e2e259b48911a91e236045f3385797e06c176c128b0299e65ec2baab71b00d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/team-builder/team-builder.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { TeamBuilderComponent } from './pages/team-builder.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CommonModule } from '@angular/common';\n\nconst routes = [{ path: '', component: TeamBuilderComponent }];\n\n@NgModule({\n  declarations: [TeamBuilderComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class TeamBuilderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TeamBuilderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/switch/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/type-box/type-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<dd-button>Default</dd-button>`,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/card/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: 'Card Title',\n  },\n  render: (args: any) => ({\n    template: `<dd-card [title]=\"'${args.title}'\"><p class=\"flex justify-center items-center px-4 py-12 text-sm\">Inner Content</p></dd-card>`,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/card/card-header/card-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: 'Card Title',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
            },
            {
                "name": "headerNavItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/models/navigation.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "NavigationItem[]",
                "defaultValue": "[\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/type-box/type-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n    size: 'lg',\n  },\n}"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/type-box/type-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n    size: 'md',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SpinnerComponent>",
                "defaultValue": "{\n  title: 'Shared/Spinner',\n  component: SpinnerComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n  title: 'Shared/Table',\n  component: TableComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/type-box/type-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypeBoxComponent>",
                "defaultValue": "{\n  title: 'Shared/Type Box',\n  component: TypeBoxComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/card/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardComponent>",
                "defaultValue": "{\n  title: 'Shared/Card',\n  component: CardComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      //👇 Imports both components to allow component composition with Storybook\n      declarations: [CardComponent, CardHeaderComponent],\n      imports: [],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/card/card-header/card-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardHeaderComponent>",
                "defaultValue": "{\n  title: 'Shared/Card/CardHeader',\n  component: CardHeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      //👇 Imports both components to allow component composition with Storybook\n      declarations: [CardHeaderComponent],\n      imports: [],\n    }),\n  ],\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    appearance: 'outline',\n  },\n  render: (args: any) => ({\n    template: `<dd-button [appearance]=\"'${args.appearance}'\">Outline</dd-button>`,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName<AngularRenderer>({\n      themes: {\n        Light: '',\n        Dark: 'dark',\n      },\n      defaultTheme: 'Light',\n    }),\n  ],\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    appearance: 'primary',\n  },\n  render: (args: any) => ({\n    template: `<dd-button [appearance]=\"'${args.appearance}'\">Primary</dd-button>`,\n  }),\n}"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/home/home.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: HomeComponent }]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/news/news.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: NewsComponent }]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/pokedex/pokedex.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: PokedexComponent }]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/pokemon/pokemon.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: PokemonComponent }]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/team-builder/team-builder.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: TeamBuilderComponent }]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    appearance: 'secondary',\n  },\n  render: (args: any) => ({\n    template: `<dd-button [appearance]=\"'${args.appearance}'\">Secondary</dd-button>`,\n  }),\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/type-box/type-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n    size: 'sm',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Database",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/supabase.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Enums",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/models/supabase.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "Json",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | number | boolean | null | literal type | Json[]",
                "file": "src/app/core/models/supabase.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SpinnerComponent>",
                "file": "src/app/shared/components/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SwitchComponent>",
                "file": "src/app/shared/components/switch/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "src/app/shared/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypeBoxComponent>",
                "file": "src/app/shared/components/type-box/type-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/app/shared/components/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CompoundButtonComponent>",
                "file": "src/app/shared/components/button/compound-button/compound-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardComponent>",
                "file": "src/app/shared/components/card/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardHeaderComponent>",
                "file": "src/app/shared/components/card/card-header/card-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Tables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/models/supabase.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "TablesInsert",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/models/supabase.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "TablesUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/models/supabase.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/components/spinner/spinner.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SpinnerComponent>",
                    "defaultValue": "{\n  title: 'Shared/Spinner',\n  component: SpinnerComponent,\n  tags: ['autodocs'],\n}"
                }
            ],
            "src/app/shared/components/switch/switch.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/switch/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "src/app/shared/components/table/table.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n  title: 'Shared/Table',\n  component: TableComponent,\n  tags: ['autodocs'],\n}"
                }
            ],
            "src/app/shared/components/type-box/type-box.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/type-box/type-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/type-box/type-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n    size: 'lg',\n  },\n}"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/type-box/type-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n    size: 'md',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/type-box/type-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypeBoxComponent>",
                    "defaultValue": "{\n  title: 'Shared/Type Box',\n  component: TypeBoxComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/type-box/type-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: {\n      name: 'Normal',\n      type_color: 'AAAA99',\n    } as Tables<'types'>,\n    size: 'sm',\n  },\n}"
                }
            ],
            "src/app/shared/components/button/button/button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<dd-button>Default</dd-button>`,\n  }),\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    appearance: 'outline',\n  },\n  render: (args: any) => ({\n    template: `<dd-button [appearance]=\"'${args.appearance}'\">Outline</dd-button>`,\n  }),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    appearance: 'primary',\n  },\n  render: (args: any) => ({\n    template: `<dd-button [appearance]=\"'${args.appearance}'\">Primary</dd-button>`,\n  }),\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    appearance: 'secondary',\n  },\n  render: (args: any) => ({\n    template: `<dd-button [appearance]=\"'${args.appearance}'\">Secondary</dd-button>`,\n  }),\n}"
                }
            ],
            "src/app/shared/components/card/card/card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/card/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: 'Card Title',\n  },\n  render: (args: any) => ({\n    template: `<dd-card [title]=\"'${args.title}'\"><p class=\"flex justify-center items-center px-4 py-12 text-sm\">Inner Content</p></dd-card>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/card/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardComponent>",
                    "defaultValue": "{\n  title: 'Shared/Card',\n  component: CardComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      //👇 Imports both components to allow component composition with Storybook\n      declarations: [CardComponent, CardHeaderComponent],\n      imports: [],\n    }),\n  ],\n}"
                }
            ],
            "src/app/shared/components/card/card-header/card-header.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/card/card-header/card-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: 'Card Title',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/card/card-header/card-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardHeaderComponent>",
                    "defaultValue": "{\n  title: 'Shared/Card/CardHeader',\n  component: CardHeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      //👇 Imports both components to allow component composition with Storybook\n      declarations: [CardHeaderComponent],\n      imports: [],\n    }),\n  ],\n}"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  supabaseUrl: 'https://ghqcgxobyvkaqyagxoqg.supabase.co',\n  supabaseKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdocWNneG9ieXZrYXF5YWd4b3FnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDI3Mzg5NzksImV4cCI6MjAxODMxNDk3OX0.j243cyUqgCZZaXYtteW0rcdEDX9CtIAr9xxuA26rAn8',\n  apiUrl: 'https://pokeapi.co/api/v2/',\n}"
                }
            ],
            "src/app/core/models/navigation.model.ts": [
                {
                    "name": "headerNavItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/models/navigation.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavigationItem[]",
                    "defaultValue": "[\n  {\n    label: 'Resources',\n    sections: [\n      {\n        sectionTitle: 'Databases',\n        options: [\n          {\n            label: 'Pokédex',\n            link: 'pokedex/scarlet-violet',\n          },\n        ],\n      },\n      // {\n      //   sectionTitle: 'Tools',\n      //   options: [\n      //     {\n      //       label: 'Team Builder',\n      //       link: 'team-builder',\n      //     },\n      //   ],\n      // },\n    ],\n  },\n  // {\n  //   label: 'Games',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Generation IX',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Scarlet & Violet',\n  //           link: 'games/scarlet-violet',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VIII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sword & Shield',\n  //           link: 'games/sword-shield',\n  //         },\n  //         {\n  //           label: 'Pokémon Brilliant Diamond & Shining Pearl',\n  //           link: 'games/brilliant-diamond-shining-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Legends Arceus',\n  //           link: 'games/legends-arceus',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VII',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Sun & Moon',\n  //           link: 'games/sun-moon',\n  //         },\n  //         {\n  //           label: 'Pokémon Ultra Sun & Ultra Moon',\n  //           link: 'games/ultra-sun-ultra-moon',\n  //         },\n  //         {\n  //           label: \"Pokémon Let's Go Pikachu & Eevee\",\n  //           link: 'games/lets-go-pikachu-lets-go-eevee',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation VI',\n  //       options: [\n  //         {\n  //           label: 'Pokémon X & Y',\n  //           link: 'games/x-y',\n  //         },\n  //         {\n  //           label: 'Pokémon Omega Ruby & Alpha Sapphire',\n  //           link: 'games/omega-ruby-alpha-sapphire',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation V',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Black & White',\n  //           link: 'games/black-white',\n  //         },\n  //         {\n  //           label: 'Pokémon Black 2 & White 2',\n  //           link: 'games/black-2-white-2',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation IV',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Diamond & Pearl',\n  //           link: 'games/diamond-pearl',\n  //         },\n  //         {\n  //           label: 'Pokémon Platinum',\n  //           link: 'games/platinum',\n  //         },\n  //         {\n  //           label: 'Pokémon HeartGold & SoulSilver',\n  //           link: 'games/heartgold-soulsilver',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation III',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Ruby & Sapphire',\n  //           link: 'games/ruby-sapphire',\n  //         },\n  //         {\n  //           label: 'Pokémon FireRed & LeafGreen',\n  //           link: 'games/firered-leafgreen',\n  //         },\n  //         {\n  //           label: 'Pokémon Emerald',\n  //           link: 'games/emerald',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation II',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Gold & Silver',\n  //           link: 'games/gold-silver',\n  //         },\n  //         {\n  //           label: 'Pokémon Crystal',\n  //           link: 'games/crystal',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Generation I',\n  //       options: [\n  //         {\n  //           label: 'Pokémon Red & Blue',\n  //           link: 'games/red-blue',\n  //         },\n  //         {\n  //           label: 'Pokémon Yellow',\n  //           link: 'games/yellow',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Videos',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Watch Online',\n  //       options: [\n  //         {\n  //           label: 'Video Hub',\n  //           link: '/videos',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       sectionTitle: 'Series',\n  //       options: [\n  //         {\n  //           label: 'Paldean Winds',\n  //           link: 'videos/paldean-winds',\n  //         },\n  //         {\n  //           label: 'Twilight Wings',\n  //           link: 'videos/twilight-wings',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Other',\n  //   sections: [\n  //     {\n  //       sectionTitle: 'Community',\n  //       options: [\n  //         {\n  //           label: 'About/Contact Us',\n  //           link: 'about',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n]"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName<AngularRenderer>({\n      themes: {\n        Light: '',\n        Dark: 'dark',\n      },\n      defaultTheme: 'Light',\n    }),\n  ],\n}"
                }
            ],
            "src/app/features/home/home.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/home/home.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: HomeComponent }]"
                }
            ],
            "src/app/features/news/news.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/news/news.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: NewsComponent }]"
                }
            ],
            "src/app/features/pokedex/pokedex.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/pokedex/pokedex.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: PokedexComponent }]"
                }
            ],
            "src/app/features/pokemon/pokemon.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/pokemon/pokemon.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: PokemonComponent }]"
                }
            ],
            "src/app/features/team-builder/team-builder.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/team-builder/team-builder.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: TeamBuilderComponent }]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/core/models/supabase.model.ts": [
                {
                    "name": "Database",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/supabase.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Enums",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/models/supabase.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "Json",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | number | boolean | null | literal type | Json[]",
                    "file": "src/app/core/models/supabase.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "Tables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/models/supabase.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "TablesInsert",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/models/supabase.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "TablesUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/models/supabase.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/shared/components/spinner/spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SpinnerComponent>",
                    "file": "src/app/shared/components/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/switch/switch.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SwitchComponent>",
                    "file": "src/app/shared/components/switch/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "src/app/shared/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/type-box/type-box.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypeBoxComponent>",
                    "file": "src/app/shared/components/type-box/type-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/button/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/app/shared/components/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/button/compound-button/compound-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CompoundButtonComponent>",
                    "file": "src/app/shared/components/button/compound-button/compound-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/card/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardComponent>",
                    "file": "src/app/shared/components/card/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/card/card-header/card-header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardHeaderComponent>",
                    "file": "src/app/shared/components/card/card-header/card-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layout/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layout/header/components/header-dropdown/header-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layout/header/components/header-dropdown/header-dropdown.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HeaderDropdownService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/layout.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/layout.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownSection",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/layout.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/navigation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavigationItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/navigation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SectionItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/navigation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SectionOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/navigation.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "headerNavItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/sanity.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SanityService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/supabase.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseService",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/features/games/pages/games.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GamesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/home/home.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/home/pages/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/news/news.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/news/pages/news.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokedex/components/pokedex-grid-view-item/pokedex-grid-view-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokedexGridViewItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokedex/components/pokedex-list-view-item/pokedex-list-view-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokedexListViewItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokedex/components/pokedex-view/pokedex-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokedexViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokedex/pages/pokedex/pokedex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokedexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokedex/pokedex.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-data/pokemon-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-descriptions/pokemon-descriptions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonDescriptionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-forms/pokemon-forms.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonFormsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-gender-ratio/pokemon-gender-ratio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonGenderRatioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-moves/pokemon-moves.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonMovesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-navigation/pokemon-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-stats/pokemon-stats.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonStatsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/components/pokemon-summary/pokemon-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/pages/pokemon/pokemon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/features/pokemon/pokemon.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/team-builder/pages/team-builder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamBuilderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/team-builder/team-builder.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/compound-button/compound-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompoundButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card-header/card-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card-header/card-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card-header/card-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/news-preview-list/news-preview-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsPreviewListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/news-preview/news-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsPreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/switch/switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/switch/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tab-list/tab-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableColumn",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/type-box/type-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypeBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/type-box/type-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/type-box/type-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/type-box/type-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/type-box/type-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/type-box/type-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/decimeters-to-feet-and-inches/decimeters-to-feet-and-inches.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DecimetersToFeetAndInchesPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/decimeters-to-pounds/decimeters-to-pounds.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DecimetersToPoundsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}